{"ast":null,"code":"import _defineProperty from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/login/CreateAccontForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'; // semantic-ui\n\nimport { Container, Form, Input, Button, Grid, Select } from 'semantic-ui-react'; // API\n\nimport * as MyAPI from '../utils/MyAPI';\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings';\nimport * as Action from '../../actions';\nimport Alert from 'react-s-alert';\n\nvar CreateAccontForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAccontForm, _Component);\n\n  function CreateAccontForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateAccontForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateAccontForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      role: ''\n    };\n\n    _this.onSubmit = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          role = _this$state.role;\n      var params = {\n        email: email,\n        password: password,\n        role: role\n      }; // create account\n\n      MyAPI.createAccount(params).then(function (data) {\n        // save account\n        // success\n        var params = {\n          user: data.user,\n          login_token: data.login_token\n        };\n        localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params));\n\n        _this.props.mapDispatchToLoginWithPassword(params);\n      }).then(function () {\n        // redirect\n        _this.props.history.push(\"/\");\n      }).catch(function (err) {\n        console.log(\"err:\", err);\n        Alert.error(err, {\n          position: 'top-right',\n          effect: 'slide',\n          timeout: 5000\n        });\n      });\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateAccontForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password; //rest api 데이터 연동 예정(현재 http통신 X)\n\n      var roleOptions = [{\n        key: 'MEXADMIN',\n        text: 'MEXADMIN',\n        value: 'MEXADMIN'\n      }, {\n        key: 'Developer Manager',\n        text: 'Developer Manager',\n        value: 'Developer Manager'\n      }, {\n        key: 'Developer Contributor',\n        text: 'Developer Contributor',\n        value: 'Developer Contributor'\n      }, {\n        key: 'Developer Viewer',\n        text: 'Developer Viewer',\n        value: 'Developer Viewer'\n      }, {\n        key: 'Operator Manager',\n        text: 'Operator Manager',\n        value: 'Operator Manager'\n      }, {\n        key: 'Operator Contributor',\n        text: 'Operator Contributor',\n        value: 'Operator Contributor'\n      }, {\n        key: 'Operator Viewer',\n        text: 'Operator Viewer',\n        value: 'Operator Viewer'\n      }];\n      return React.createElement(Container, {\n        text: true,\n        className: \"create_acount_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        style: {\n          marginTop: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"left\",\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        style: {\n          width: '100%'\n        },\n        icon: \"mail outline\",\n        iconPosition: \"left\",\n        name: \"email\",\n        onChange: this.handleChange,\n        value: email,\n        placeholder: \"yourname@example.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        textAlign: \"left\",\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        style: {\n          width: '100%'\n        },\n        icon: \"key\",\n        iconPosition: \"left\",\n        name: \"password\",\n        onChange: this.handleChange,\n        value: password,\n        placeholder: \"********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        textAlign: \"left\",\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Role\"), React.createElement(Select, {\n        placeholder: \"role\",\n        name: \"role\",\n        style: {\n          width: '100%'\n        },\n        options: roleOptions,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          width: '100%'\n        },\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Create an account\")))));\n    }\n  }]);\n\n  return CreateAccontForm;\n}(Component); // react-redux\n\n\nfunction mapStateToProps(_ref2) {\n  var user = _ref2.user;\n  return {\n    user: user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: function mapDispatchToLoginWithPassword(data) {\n      return dispatch(Action.loginWithEmailRedux({\n        params: data\n      }));\n    }\n  };\n} // export default withRouter(MainPage);\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateAccontForm));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/login/CreateAccontForm.js"],"names":["React","Component","withRouter","connect","Container","Form","Input","Button","Grid","Select","MyAPI","LOCAL_STRAGE_KEY","Action","Alert","CreateAccontForm","state","email","password","role","onSubmit","params","createAccount","then","data","user","login_token","localStorage","setItem","JSON","stringify","props","mapDispatchToLoginWithPassword","history","push","catch","err","console","log","error","position","effect","timeout","handleChange","e","name","value","setState","roleOptions","key","text","marginTop","width","loading","mapStateToProps","mapDispatchToProps","dispatch","loginWithEmailRedux"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux'\n\n// semantic-ui\nimport { Container, Form, Input, Button, Grid, Select } from 'semantic-ui-react'\n\n// API\nimport * as MyAPI from '../utils/MyAPI'\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings'\nimport * as Action from '../../actions'\n\nimport Alert from 'react-s-alert';\n\nclass CreateAccontForm extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    role: ''\n  }\n\n  onSubmit = () => {\n\n    const { email, password, role } = this.state\n\n    const params = {\n      email: email,\n      password: password,\n      role: role\n    }\n\n    // create account\n    MyAPI.createAccount(params)\n    .then((data) => {\n      // save account\n\n      // success\n      const params = {\n        user: data.user,\n        login_token: data.login_token\n      }\n\n      localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params))\n\n      this.props.mapDispatchToLoginWithPassword(params)\n\n    })\n    .then(() => {\n      // redirect\n      this.props.history.push(\"/\")\n    })\n    .catch((err) => {\n      console.log(\"err:\", err)\n\n      Alert.error(err, {\n        position: 'top-right',\n        effect: 'slide',\n        timeout: 5000\n      });\n    })\n  }\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value })\n  }\n\n  render() {\n\n    const { email, password } = this.state\n\n    //rest api 데이터 연동 예정(현재 http통신 X)\n    const roleOptions = [\n      {\n        key: 'MEXADMIN',\n        text: 'MEXADMIN',\n        value: 'MEXADMIN'\n      },\n      {\n        key: 'Developer Manager',\n        text: 'Developer Manager',\n        value: 'Developer Manager'\n      },\n      {\n        key: 'Developer Contributor',\n        text: 'Developer Contributor',\n        value: 'Developer Contributor'\n      },\n      {\n        key: 'Developer Viewer',\n        text: 'Developer Viewer',\n        value: 'Developer Viewer'\n      },\n      {\n        key: 'Operator Manager',\n        text: 'Operator Manager',\n        value: 'Operator Manager'\n      },\n      {\n        key: 'Operator Contributor',\n        text: 'Operator Contributor',\n        value: 'Operator Contributor'\n      },\n      {\n        key: 'Operator Viewer',\n        text: 'Operator Viewer',\n        value: 'Operator Viewer'\n      },\n    ]\n\n    return(\n      <Container text className='create_acount_form'>\n\n\n        <Form onSubmit={this.onSubmit} style={{marginTop:60}}>\n          <Grid>\n\n            <Grid.Column textAlign='left' width={16}>\n              <label>Email</label>\n              <Input\n                style={{width: '100%'}}\n                icon='mail outline'\n                iconPosition='left'\n                name='email'\n                onChange={this.handleChange}\n                value={email}\n                placeholder='yourname@example.com' />\n            </Grid.Column>\n\n            <Grid.Column textAlign='left' width={16}>\n              <label>Password</label>\n              <Input\n                style={{width: '100%'}}\n                icon='key'\n                iconPosition='left'\n                name='password'\n                onChange={this.handleChange}\n                value={password}\n                placeholder='********' />\n            </Grid.Column>\n            <Grid.Column textAlign='left' width={16}>\n              <label>Role</label>\n              {/* <Input\n                  style={{width: '100%'}}\n                  name='role'\n                  value='superuser'\n                  placeholder='superuser' /> */}\n              <Select\n                placeholder='role'\n                name='role'\n                style={{width: '100%'}}\n                options = {roleOptions}\n                onChange={this.handleChange} />\n            </Grid.Column>\n            <Grid.Column width={16}>\n              <Button\n                style={{width: '100%'}}\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                type='submit'>Create an account</Button>\n            </Grid.Column>\n\n\n          </Grid>\n\n        </Form>\n\n      </Container>\n    )\n  }\n}\n\n// react-redux\nfunction mapStateToProps ( {user} ) {\n  return {\n    user\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: (data) => dispatch(Action.loginWithEmailRedux({ params: data})),\n  }\n}\n\n// export default withRouter(MainPage);\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )(CreateAccontForm) )\n"]},"metadata":{},"sourceType":"module"}