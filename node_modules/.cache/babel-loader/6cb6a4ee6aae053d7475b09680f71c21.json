{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/index_clusters.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Annotations, Annotation } from \"react-simple-maps\";\nimport { Button, Icon, List } from 'semantic-ui-react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { Motion, spring } from \"react-motion\";\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\";\nimport request from \"axios\"; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\nimport * as aggregation from '../../../utils';\nimport ReactTooltip from 'react-tooltip'; //style\n\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css';\nimport CountryCode from '../../../libs/country-codes-lat-long-alpha3';\nvar grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022', '#66CCFF', '#FF78A5', '#fffba7'];\nvar zoomControls = {\n  center: [30, 40],\n  zoom: 3\n}; //reference : /public/assets/data-maps/world-most-populous-cities.json\n\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 48]);\nvar markerSize = [20, 24];\nvar _self = null;\n\nvar makeList = function makeList(obj) {\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, obj.map(function (key, i) {\n    return React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, key);\n  }));\n};\n\nvar ClustersMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClustersMap, _Component);\n\n  function ClustersMap() {\n    var _this;\n\n    _classCallCheck(this, ClustersMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClustersMap).call(this));\n\n    _this.handleLeave = function () {\n      //this.props.dispatch(hide())\n      ReactTooltip.hide(_this.tooltipref);\n    };\n\n    _this.handleMoveMk = function (marker, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n      var names = [];\n\n      if (marker.name.length) {\n        names = makeList(marker.name);\n      } //this.setState({tooltipMsg:(names.length>0) ? names : (this.props.parentProps.condition === 'two')?marker.name[0]:marker.name})\n\n\n      _self.setState({\n        tooltipMsg: typeof names === 'object' ? names : marker.name\n      });\n\n      if (!_self.moveMouse) {\n        ReactTooltip.rebuild();\n        ReactTooltip.show(_self.circle);\n      }\n\n      _self.moveMouse = true;\n    };\n\n    _this.handleLeaveMk = function () {\n      //this.props.dispatch(hide())\n      ReactTooltip.hide(_this.tooltipref);\n      _this.moveMouse = false;\n    };\n\n    _this.handleMouseDown = function (a, b) {\n      var countries = CountryCode.ref_country_codes;\n      var _lat = '';\n      var _long = '';\n      console.log('20190830 selected region = ', a.properties, 'location data all =', countries);\n      countries.map(function (country) {\n        if (country.alpha2 === a.properties[\"ISO_A2\"]) {\n          console.log('20190830 country code = ', country);\n          _lat = country['latitude'];\n          _long = country['longitude'];\n        }\n      });\n\n      if (localStorage.selectMenu == 'Cloudlets') {\n        var location = {\n          region: a.properties[\"REGION_UN\"],\n          name: a.properties[\"NAME\"],\n          lat: _lat,\n          long: _long\n        };\n\n        _self.props.handleGetRegion(location);\n      }\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      center: zoomControls.center,\n      zoom: zoomControls.zoom,\n      cities: [],\n      countries: [],\n      citiesSecond: [],\n      detailMode: false,\n      selectedCity: [],\n      oldCountry: '',\n      unselectCity: '',\n      clickCities: [],\n      saveMarker: [],\n      //blink\n      keyName: '' //-blink\n\n    };\n    _this.handleZoomIn = _this.handleZoomIn.bind(_assertThisInitialized(_this));\n    _this.handleZoomOut = _this.handleZoomOut.bind(_assertThisInitialized(_this));\n    _this.handleCityClick = _this.handleCityClick.bind(_assertThisInitialized(_this));\n    _this.handleGotoAnalysis = _this.handleGotoAnalysis.bind(_assertThisInitialized(_this));\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this));\n    _this.fetchCities = _this.fetchCities.bind(_assertThisInitialized(_this));\n    _this.handleLeave = _this.handleLeave.bind(_assertThisInitialized(_this));\n    _this.dir = 1;\n    _this.interval = null;\n    _this.tempData = null;\n    _this.tempLocation = null;\n    return _this;\n  }\n\n  _createClass(ClustersMap, [{\n    key: \"handleZoomIn\",\n    value: function handleZoomIn() {\n      this.setState({\n        zoom: this.state.zoom * 2\n      });\n      this.props.parentProps.zoomIn(this.state.detailMode);\n    }\n  }, {\n    key: \"handleZoomOut\",\n    value: function handleZoomOut() {\n      this.setState({\n        zoom: this.state.zoom / 2\n      });\n      this.props.parentProps.zoomOut(this.state.detailMode);\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState({\n        center: this.state.center,\n        zoom: 3,\n        detailMode: false\n      });\n\n      try {\n        this.props.handleChangeClickCity([]);\n        this.props.parentProps.resetMap(false);\n      } catch (e) {}\n    }\n    /* example:\n    {\n        \"CountryName\":\"Djibouti\",\n        \"CapitalName\":\"Djibouti\",\n        \"CapitalLatitude\":\"11.583333333333334\",\n        \"CapitalLongitude\":\"43.150000\",\n        \"CountryCode\":\"DJ\",\n        \"ContinentName\":\"Africa\"\n    }\n     */\n    // 펼쳐진 지도( full screen map)\n\n  }, {\n    key: \"handleCityClick\",\n    value: function handleCityClick(city) {\n      this.setState({\n        zoom: 4,\n        center: city.coordinates,\n        detailMode: true\n      });\n      this.props.parentProps.zoomIn(true);\n\n      if (d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n        d3.selectAll('.rsm-markers').selectAll(\".levelFive\").transition().ease(d3.easeBack).attr(\"r\", markerSize[0]);\n      }\n\n      var clickMarker = [];\n\n      if (city) {\n        city.name.map(function (item, i) {\n          clickMarker.push({\n            \"name\": item,\n            \"coordinates\": city.coordinates,\n            \"population\": 17843000,\n            \"cost\": 1\n          });\n        });\n      }\n\n      this.setState({\n        clickCities: clickMarker,\n        saveMarker: clickMarker\n      });\n      this.props.handleChangeClickCity(clickMarker);\n      this.props.handleChangeCity(city);\n    } // map marker text click\n\n  }, {\n    key: \"handleAnnoteClick\",\n    value: function handleAnnoteClick(city) {} //-blink\n\n  }, {\n    key: \"handleGotoAnalysis\",\n    value: function handleGotoAnalysis(country) {\n      if (this.props.parentProps) this.props.parentProps.gotoNext(country);\n    }\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n\n  }, {\n    key: \"handleViewZone\",\n    value: function handleViewZone(country) {\n      //change the data of detail Info\n      _self.setState({\n        selectedCity: country.name\n      });\n\n      if (d3.selectAll('.detailMarker_' + _self.state.oldCountry)) {\n        d3.selectAll('.detailMarker_' + _self.state.oldCountry).transition().attr(\"r\", markerSize[0]).style(\"opacity\", 1);\n      }\n\n      _self.setState({\n        oldCountry: country.name\n      });\n\n      _self.props.handleChangeCity(country);\n    }\n    /** ************************************************\n     * fetchCities\n     * display marker and alarm-counter on the worldmap\n     * 지도위에 마커포시하고 숫자표현\n     ** ************************************************/\n\n  }, {\n    key: \"fetchCities\",\n    value: function fetchCities() {\n      var _this2 = this;\n\n      request.get(\"/data-maps/world-most-populous-cities.json\").then(function (res) {\n        _this2.setState({\n          cities: res.data\n        });\n      });\n    }\n  }, {\n    key: \"fetchCountry\",\n    value: function fetchCountry() {\n      var _this3 = this;\n\n      request.get(\"/data-maps/country-capitals.json\").then(function (res) {\n        _this3.setState({\n          countries: res.data\n        });\n\n        var _self = _this3;\n        setTimeout(_self.fetchMWCZone(), 1000);\n      });\n    }\n  }, {\n    key: \"fetchConnectivity\",\n    value: function fetchConnectivity() {\n      var indents = [0, 0];\n      var _countries = [{\n        name: 'Berlin'\n      }, {\n        name: 'Paris'\n      }, {\n        name: 'Kyiv'\n      }, {\n        name: 'Vienna'\n      }, {\n        name: 'Budapest'\n      }];\n      var _Country = [];\n\n      _countries.map(function (data, i) {\n        _self.state.countries.map(function (cnt) {\n          if (data.name === cnt.CapitalName) {\n            _Country.push({\n              name: cnt.CapitalName,\n              coordinates: [parseInt(cnt.CapitalLongitude) + indents[0], parseInt(cnt.CapitalLatitude) + indents[1]]\n            });\n          }\n        });\n      });\n\n      this.setState({\n        citiesSecond: _Country\n      });\n    }\n  }, {\n    key: \"fetchMWCZone\",\n    value: function fetchMWCZone() {\n      //Longitude, Latitude\n      var _Country = [];\n      var _countries = [{\n        \"name\": \"Barcelona\",\n        \"coordinates\": [2.1734, 41.3851],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [10, 15]\n      }, // { \"name\": \"Sant Montjuic\", \"coordinates\": [0.170459, 41.018247], \"population\": 1, \"cost\":1, \"offsets\": [-10,15] },\n      // { \"name\": \"Sant Gervasi\", \"coordinates\": [1.005055, 42.493365], \"population\": 1, \"cost\":1, \"offsets\": [10,-15] },\n      {\n        \"name\": \"frankfurt\",\n        \"coordinates\": [8.6821, 50.1109],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [0, 15]\n      }, {\n        \"name\": \"hamburg\",\n        \"coordinates\": [9.9937, 53.5511],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [0, 15]\n      }];\n      this.setState({\n        citiesSecond: _countries\n      });\n    } //마커의 깜박거림 크기\n\n  }, {\n    key: \"blinkAnimationMarker\",\n    value: function blinkAnimationMarker(id, dir) {\n      var radius = 0;\n      var alpha = 1;\n      var durate = 900;\n\n      if (dir === 1) {\n        radius = 32;\n        alpha = 0;\n        durate = 900;\n      } else {\n        radius = 16;\n        alpha = 1;\n        durate = 300;\n      }\n\n      if (d3.selectAll('.' + id).selectAll(\".levelFive\")) {\n        d3.selectAll('.' + id).selectAll(\".levelFive\").transition().duration(durate).ease(d3.easeBack).attr(\"r\", radius).style(\"opacity\", alpha);\n      } // if(d3.selectAll('.'+id).selectAll(\".toronto-cloudlet\")) {\n      //     d3.selectAll('.'+id).selectAll(\".toronto-cloudlet\")\n      //         .transition()\n      //         .duration(durate)\n      //         .ease(d3.easeBack)\n      //         .attr(\"r\", radius)\n      //         .style(\"opacity\",alpha)\n      // }\n      //blink\n\n\n      if (d3.selectAll('.' + id).selectAll(this.state.keyName !== '' ? '.' + this.state.keyName : null)) {\n        d3.selectAll('.' + id).selectAll(this.state.keyName !== '' ? '.' + this.state.keyName : null).transition().duration(durate).ease(d3.easeBack).attr(\"r\", radius).style(\"opacity\", alpha);\n      } //-blink\n\n\n      if (d3.selectAll('.detailMarker_' + _self.state.selectedCity)) {\n        d3.selectAll('.detailMarker_' + _self.state.selectedCity).transition().duration(durate).ease(d3.easeBack).attr(\"r\", dir === 1 ? markerSize[0] : markerSize[1]).style(\"opacity\", alpha);\n      }\n    } //tooltip\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.fetchCities();\n      //this.fetchCountry();\n      console.log('20191204 temploacation...', this.tempLocation); //zoom\n\n      if (this.props.zoomControl) {\n        this.setState({\n          center: this.props.zoomControl.center,\n          zoom: this.props.zoomControl.zoom\n        });\n      }\n\n      var _self = this;\n\n      this.interval = setInterval(function () {\n        if (_self.dir === 1) {\n          _self.dir = -1;\n        } else {\n          _self.dir = 1;\n        }\n\n        _self.blinkAnimationMarker('rsm-markers', _self.dir);\n      }, 900);\n\n      if (_self.props.tabIdx === 'pg=1') {\n        _self.handleCityClick({\n          \"name\": this.state.selectedCity,\n          \"coordinates\": [2.1734, 41.3851],\n          \"population\": 37843000,\n          \"cost\": 3\n        });\n      }\n\n      _self.setState({\n        oldCountry: this.state.selectedCity\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var initialData = nextProps.parentProps.devData ? nextProps.parentProps.devData : nextProps.parentProps.locData;\n      var data = initialData.filter(function (item) {\n        return item.State == 5;\n      }); //let data = (nextProps.parentProps.devData)?nextProps.parentProps.devData:nextProps.parentProps.locData;\n\n      if (this.tempData == data) return;\n      this.tempData = data;\n      this.tempLocation = data;\n      console.log('20191204 daaaata...', data, \":\", nextProps.getRegion);\n\n      function reduceUp(value) {\n        return Math.round(value);\n      }\n\n      var mapName = function mapName(item) {\n        if (localStorage.selectMenu == \"Cloudlets\") {\n          return item.CloudletName;\n        } else if (localStorage.selectMenu == \"App Instances\") {\n          return item.AppName;\n        } else if (localStorage.selectMenu == \"Cluster Instances\") {\n          if (nextProps.parentProps.reg === 'cloudletAndClusterMap') {\n            return item.CloudletName;\n          } else {\n            return item.ClusterName;\n          }\n        } else {\n          return;\n        }\n      };\n\n      var locations = data.map(function (item) {\n        return {\n          LAT: reduceUp(item.CloudletLocation.latitude),\n          LON: reduceUp(item.CloudletLocation.longitude),\n          cloudlet: mapName(item)\n        };\n      });\n      var locationData = [];\n      var groupbyData = aggregation.groupByCompare(locations, ['LAT', 'LON']);\n\n      var cloundletName = function cloundletName(key) {\n        var nameArray = [];\n        groupbyData[key].map(function (item, i) {\n          nameArray[i] = groupbyData[key][i]['cloudlet'];\n        });\n        return nameArray;\n      };\n\n      Object.keys(groupbyData).map(function (key) {\n        locationData.push({\n          \"name\": cloundletName(key),\n          \"coordinates\": [groupbyData[key][0]['LON'], groupbyData[key][0]['LAT']],\n          \"population\": 17843000,\n          \"cost\": groupbyData[key].length\n        });\n      }); //\n\n      var cloudlet = data.map(function (item) {\n        return {\n          LAT: item.CloudletLocation.latitude,\n          LON: item.CloudletLocation.longitude,\n          cloudlet: item.CloudletName\n        };\n      });\n      var cloudletData = [];\n      var groupbyClData = aggregation.groupBy(cloudlet, 'cloudlet');\n      Object.keys(groupbyClData).map(function (key) {\n        cloudletData.push({\n          \"name\": key,\n          \"coordinates\": [groupbyClData[key][0]['LON'], groupbyClData[key][0]['LAT']],\n          \"population\": 17843000,\n          \"cost\": groupbyClData[key].length\n        });\n      });\n      this.setState({\n        cities: locationData\n      });\n\n      if (nextProps.deleteReset) {\n        console.log(\"nextProps.deleteResetsss\", nextProps.deleteReset);\n        this.handleReset();\n        this.props.handleDeleteReset(false);\n      }\n\n      if (nextProps.changeRegion !== 'All' && nextProps.parentProps && nextProps.parentProps.clickCity && nextProps.parentProps.clickCity.length) {\n        var clickMarker = [];\n        var cName = '';\n        var toggle = false;\n        if (nextProps.parentProps.siteId == 'Cloudlet') cName = 'CloudletName';else if (nextProps.parentProps.siteId == 'ClusterInst') cName = 'ClusterName';else if (nextProps.parentProps.siteId == 'appinst') cName = 'AppName';\n        nextProps.parentProps.devData.map(function (item) {\n          if (nextProps.changeRegion == item.Region) {\n            nextProps.parentProps.clickCity.map(function (_item) {\n              if (_item.name == item[cName] && Math.round(_item.coordinates[0]) == Math.round(item.CloudletLocation.longitude) && Math.round(_item.coordinates[1]) == Math.round(item.CloudletLocation.latitude) && !toggle) {\n                clickMarker.push({\n                  \"name\": item[cName],\n                  \"coordinates\": [item.CloudletLocation.longitude, item.CloudletLocation.latitude],\n                  \"population\": 17843000,\n                  \"cost\": 1\n                });\n                toggle = true;\n              }\n            });\n          }\n\n          toggle = false;\n        });\n\n        if (clickMarker.length) {\n          this.setState({\n            clickCities: clickMarker\n          });\n        } else {\n          this.setState({\n            clickCities: []\n          });\n        }\n      } else {\n        this.setState({\n          clickCities: this.state.saveMarker\n        });\n      }\n\n      if (nextProps.parentProps) {\n        if (nextProps.parentProps.resetMap === 'back') {\n          this.setState({\n            center: this.state.center,\n            zoom: 3,\n            detailMode: false\n          });\n          this.props.handleResetMap('deep');\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"zoom-inout-reset-clusterMap\",\n        style: {\n          left: 8,\n          bottom: 4,\n          position: 'absolute',\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"larges\",\n        icon: true,\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"large\",\n        icon: true,\n        onClick: this.handleZoomIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"large\",\n        icon: true,\n        onClick: this.handleZoomOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"minus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }))), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[5],\n        endColor: grdColors[5],\n        idCSS: \"levelFive\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[4],\n        endColor: grdColors[4],\n        idCSS: \"levelFour\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[3],\n        endColor: grdColors[3],\n        idCSS: \"levelThree\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[2],\n        endColor: grdColors[2],\n        idCSS: \"levelTwo\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: '#394251',\n        middleColor: '#394251',\n        endColor: '#394251',\n        idCSS: \"levelBg\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), React.createElement(ReactTooltip, {\n        id: \"happyFace\",\n        className: \"customToolTip\",\n        type: \"dark\",\n        effect: \"float\",\n        style: {\n          left: '-100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, this.state.tooltipMsg)), React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, function (_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n        return React.createElement(Motion, {\n          defaultStyle: {\n            zoom: 1,\n            x: 30,\n            y: 40\n          },\n          style: {\n            zoom: spring(_this4.state.zoom, {\n              stiffness: 210,\n              damping: 30\n            }),\n            x: spring(_this4.state.center[0], {\n              stiffness: 210,\n              damping: 30\n            }),\n            y: spring(_this4.state.center[1], {\n              stiffness: 210,\n              damping: 30\n            })\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        }, function (_ref2) {\n          var zoom = _ref2.zoom,\n              x = _ref2.x,\n              y = _ref2.y;\n          return React.createElement(ComposableMap, {\n            projectionConfig: {\n              scale: 205\n            },\n            width: 980,\n            height: 551,\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: styles.geoBackground.color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 528\n            },\n            __self: this\n          }, React.createElement(ZoomableGroup, {\n            center: [x, y],\n            zoom: zoom,\n            disablePanning: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 538\n            },\n            __self: this\n          }, React.createElement(Geographies, {\n            geography: \"/topojson-maps/world-110m.json\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 539\n            },\n            __self: this\n          }, function (geographies, projection) {\n            return geographies.map(function (geography, i) {\n              return geography.id !== \"010\" && React.createElement(Geography, {\n                key: i,\n                geography: geography,\n                projection: projection,\n                \"data-tip\": geography.properties.NAME,\n                style: styles.geography,\n                onMouseDown: _this4.handleMouseDown,\n                onMouseMove: _this4.handleMove,\n                onMouseLeave: _this4.handleLeave,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 542\n                },\n                __self: this\n              });\n            });\n          }), React.createElement(Markers, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 554\n            },\n            __self: this\n          }, localStorage.selectMenu == \"Cloudlets\" && !_this4.state.detailMode ? _this4.state.cities.map(function (city, i) {\n            return MarkerComponent(_this4, city, i, {\n              transform: \"translate(-24,-18)\",\n              gColor: 6,\n              cName: 'st1',\n              path: 0\n            });\n          }) : localStorage.selectMenu == \"Cluster Instances\" && !_this4.state.detailMode ? _this4.state.cities.map(function (city, i) {\n            return _this4.props.icon === 'cloudlet' ? MarkerComponent(_this4, city, i, {\n              transform: \"translate(-24,-18)\",\n              gColor: 6,\n              cName: 'st1',\n              path: 0\n            }) : MarkerComponent(_this4, city, i, {\n              transform: \"translate(-25,-27)\",\n              gColor: 8,\n              cName: 'st2',\n              path: 1\n            });\n          }) : localStorage.selectMenu == \"App Instances\" && !_this4.state.detailMode ? _this4.state.cities.map(function (city, i) {\n            return MarkerComponent(_this4, city, i, {\n              transform: \"translate(-17,-21)\",\n              gColor: 7,\n              cName: 'st3',\n              path: 2\n            });\n          }) : _this4.state.clickCities.map(function (city, i) {\n            return React.createElement(Marker, {\n              key: i,\n              marker: city,\n              onClick: _this4.handleViewZone,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 572\n              },\n              __self: this\n            }, React.createElement(\"circle\", {\n              className: \"detailMarker_\" + city.name,\n              cx: 0,\n              cy: 0,\n              r: markerSize[0],\n              opacity: 1,\n              fill: styles.marker.second.fill,\n              stroke: styles.marker.second.stroke,\n              strokeWidth: styles.marker.second.strokeWidth,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 577\n              },\n              __self: this\n            }));\n          })), React.createElement(Annotations, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 600\n            },\n            __self: this\n          }, _this4.state.detailMode ? _this4.state.clickCities.map(function (city, i) {\n            return React.createElement(Annotation, {\n              key: i,\n              dx: -30,\n              dy: 30 + i * 45,\n              curve: 0.5,\n              zoom: 1,\n              subject: city['coordinates'],\n              strokeWidth: 0.1,\n              stroke: '#AFAFAF',\n              style: {\n                cursor: 'pointer'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 605\n              },\n              __self: this\n            }, React.createElement(\"text\", {\n              className: \"annoteText\",\n              fill: \"#AFAFAF\",\n              style: {\n                fontSize: 7\n              },\n              onClick: function onClick(a, b) {\n                return _this4.handleAnnoteClick(city);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 615\n              },\n              __self: this\n            }, city.name));\n          }) : null)));\n        });\n      }));\n    }\n  }]);\n\n  return ClustersMap;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var getRegion = state.getRegion ? state.getRegion.region : null;\n  var deleteReset = state.deleteReset.reset;\n  return {\n    data: state.receiveDataReduce.data,\n    tabIdx: state.siteChanger.site.subPath,\n    itemLabel: state.computeItem.item,\n    getRegion: state.getRegion,\n    deleteReset: deleteReset,\n    changeRegion: state.changeRegion.region ? state.changeRegion.region : null\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.setUser(data));\n    },\n    handleChangeTab: function handleChangeTab(data) {\n      dispatch(actions.changeTab(data));\n    },\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    },\n    handleGetRegion: function handleGetRegion(data) {\n      dispatch(actions.getRegion(data));\n    },\n    handleChangeClickCity: function handleChangeClickCity(data) {\n      dispatch(actions.clickCityList(data));\n    },\n    handleDeleteReset: function handleDeleteReset(data) {\n      dispatch(actions.deleteReset(data));\n    },\n    handleResetMap: function handleResetMap(data) {\n      dispatch(actions.resetMap(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(ClustersMap);\nvar paths = ['M 38.875 12.960938 C 37.613281 6.019531 31.59375 0.75 24.351562 0.75 C 18.582031 0.75 13.59375 4.089844 11.160156 8.949219 C 5.210938 9.640625 0.59375 14.738281 0.59375 20.929688 C 0.59375 27.554688 5.875 32.921875 12.414062 32.992188 L 38.183594 32.992188 C 43.664062 32.992188 48.113281 28.496094 48.113281 22.957031 C 48.113281 17.667969 44.035156 13.328125 38.875 12.960938 Z M 38.875 12.960938', 'M 20.832031 8.332031 L 8.332031 8.332031 C 6.042969 8.332031 4.1875 10.207031 4.1875 12.5 L 4.167969 37.5 C 4.167969 39.792969 6.042969 41.667969 8.332031 41.667969 L 41.667969 41.667969 C 43.957031 41.667969 45.832031 39.792969 45.832031 37.5 L 45.832031 16.667969 C 45.832031 14.375 43.957031 12.5 41.667969 12.5 L 25 12.5 Z M 20.832031 8.332031', 'M 34.945312 17.558594 C 34.945312 27.097656 17.539062 49.683594 17.539062 49.683594 C 17.539062 49.683594 0.132812 27.097656 0.132812 17.558594 C 0.132812 8.019531 7.921875 0.289062 17.539062 0.289062 C 27.152344 0.289062 34.945312 8.019531 34.945312 17.558594 Z M 34.945312 17.558594'];\n\nvar MarkerComponent = function MarkerComponent(self, city, i, config) {\n  return !isNaN(city.coordinates[0]) ? React.createElement(Marker, {\n    className: \"markerTwo\",\n    key: i,\n    marker: city,\n    onClick: self.handleCityClick,\n    onMouseOver: self.handleMoveMk,\n    onMouseMove: self.handleMoveMk,\n    onMouseLeave: self.handleLeaveMk,\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    version: \"1.1\",\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 50 50\",\n    style: {\n      enableBackground: \"new 0 0 50 50\"\n    } //blink\n    ,\n    className: ['blinkMark' + i == self.state.keyName ? self.state.keyName : null, city.population > 35000000 ? 'levelFive' : 'levelOther'].join(' ') //-blink\n    ,\n    cx: 0,\n    cy: 0,\n    r: cityScale(city.population - 200300),\n    fill: 'url(#levelBg)' // '#394251'\n    ,\n    stroke: styles.marker.stroke,\n    strokeWidth: styles.marker.strokeWidth,\n    transform: config.transform,\n    \"mix-blend-mode\": \"lighten\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704\n    },\n    __self: this\n  }, React.createElement(\"filter\", {\n    id: \"InnerGlow\",\n    \"color-interpolation-filters\": \"sRGB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705\n    },\n    __self: this\n  }, React.createElement(\"feGaussianBlur\", {\n    id: \"GaussianBlur\",\n    result: \"GaussianBlurResult\",\n    stdDeviation: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    id: \"Composite1\",\n    in2: \"GaussianBlurResult\",\n    result: \"CompositeResult1\",\n    in: \"SourceGraphic\",\n    operator: \"in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708\n    },\n    __self: this\n  }), React.createElement(\"feFlood\", {\n    id: \"Flood\",\n    result: \"FloodResult\",\n    in: \"CompositeResult3\",\n    \"flood-opacity\": \"1\",\n    \"flood-color\": city.population > 35000000 ? grdColors[5] : city.population <= 35000000 && city.population > 30000000 ? grdColors[4] : city.population <= 30000000 && city.population > 25000000 ? grdColors[3] : city.population <= 25000000 && city.population > 20000000 ? grdColors[2] : grdColors[6],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710\n    },\n    __self: this\n  }), React.createElement(\"feBlend\", {\n    id: \"Blend\",\n    in2: \"FloodResult\",\n    mode: \"normal\",\n    in: \"CompositeResult1\",\n    result: \"BlendResult1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    id: \"GaussianBlur\",\n    in2: \"SourceGraphic\",\n    result: \"CompositeResult3\",\n    operator: \"in\",\n    in: \"BlendResult1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717\n    },\n    __self: this\n  }))), React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721\n    },\n    __self: this\n  }, React.createElement(\"filter\", {\n    id: \"innershadow\",\n    x0: \"-50%\",\n    y0: \"-50%\",\n    width: \"200%\",\n    height: \"200%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722\n    },\n    __self: this\n  }, React.createElement(\"feGaussianBlur\", {\n    in: \"SourceAlpha\",\n    stdDeviation: \"3\",\n    result: \"blur\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723\n    },\n    __self: this\n  }), React.createElement(\"feOffset\", {\n    dy: \"2\",\n    dx: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"arithmetic\",\n    k2: \"-1\",\n    k3: \"1\",\n    result: \"shadowDiff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725\n    },\n    __self: this\n  }), React.createElement(\"feFlood\", {\n    \"flood-color\": city.population > 35000000 ? grdColors[5] : city.population <= 35000000 && city.population > 30000000 ? grdColors[4] : city.population <= 30000000 && city.population > 25000000 ? grdColors[3] : city.population <= 25000000 && city.population > 20000000 ? grdColors[2] : grdColors[config.gColor],\n    \"flood-opacity\": \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"shadowDiff\",\n    operator: \"in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"SourceGraphic\",\n    operator: \"over\",\n    result: \"firstfilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735\n    },\n    __self: this\n  }), React.createElement(\"feGaussianBlur\", {\n    in: \"firstfilter\",\n    stdDeviation: \"3\",\n    result: \"blur2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738\n    },\n    __self: this\n  }), React.createElement(\"feOffset\", {\n    dy: \"-2\",\n    dx: \"-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"firstfilter\",\n    operator: \"arithmetic\",\n    k2: \"-1\",\n    k3: \"1\",\n    result: \"shadowDiff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740\n    },\n    __self: this\n  }), React.createElement(\"feFlood\", {\n    \"flood-color\": city.population > 35000000 ? grdColors[5] : city.population <= 35000000 && city.population > 30000000 ? grdColors[4] : city.population <= 30000000 && city.population > 25000000 ? grdColors[3] : city.population <= 25000000 && city.population > 20000000 ? grdColors[2] : grdColors[config.gColor],\n    \"flood-opacity\": \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"shadowDiff\",\n    operator: \"in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749\n    },\n    __self: this\n  }), React.createElement(\"feComposite\", {\n    in2: \"firstfilter\",\n    operator: \"over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  }))), React.createElement(\"path\", {\n    filter: \"url(#innershadow)\",\n    className: config.cName,\n    d: paths[config.path],\n    ref: function ref(_ref3) {\n      return self.circle = _ref3;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  })), React.createElement(\"g\", {\n    \"data-tip\": \"tooltip\",\n    \"data-for\": \"happyFace\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    textAnchor: \"middle\",\n    y: 8,\n    className: \"marker_value\",\n    style: {\n      fontSize: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757\n    },\n    __self: this\n  }, city.cost))) : null;\n};","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/index_clusters.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Annotations","Annotation","Button","Icon","List","ContainerDimensions","Motion","spring","d3","scaleLinear","request","connect","actions","RadialGradientSVG","aggregation","ReactTooltip","styles","CountryCode","grdColors","zoomControls","center","zoom","cityScale","domain","range","markerSize","_self","makeList","obj","map","key","i","ClustersMap","handleLeave","hide","tooltipref","handleMoveMk","marker","evt","x","clientX","y","clientY","window","pageYOffset","names","name","length","setState","tooltipMsg","moveMouse","rebuild","show","circle","handleLeaveMk","handleMouseDown","a","b","countries","ref_country_codes","_lat","_long","console","log","properties","country","alpha2","localStorage","selectMenu","location","region","lat","long","props","handleGetRegion","state","cities","citiesSecond","detailMode","selectedCity","oldCountry","unselectCity","clickCities","saveMarker","keyName","handleZoomIn","bind","handleZoomOut","handleCityClick","handleGotoAnalysis","handleReset","fetchCities","dir","interval","tempData","tempLocation","parentProps","zoomIn","zoomOut","handleChangeClickCity","resetMap","e","city","coordinates","selectAll","transition","ease","easeBack","attr","clickMarker","item","push","handleChangeCity","gotoNext","style","get","then","res","data","setTimeout","fetchMWCZone","indents","_countries","_Country","cnt","CapitalName","parseInt","CapitalLongitude","CapitalLatitude","id","radius","alpha","durate","duration","zoomControl","setInterval","blinkAnimationMarker","tabIdx","nextProps","initialData","devData","locData","filter","State","getRegion","reduceUp","value","Math","round","mapName","CloudletName","AppName","reg","ClusterName","locations","LAT","CloudletLocation","latitude","LON","longitude","cloudlet","locationData","groupbyData","groupByCompare","cloundletName","nameArray","Object","keys","cloudletData","groupbyClData","groupBy","deleteReset","handleDeleteReset","changeRegion","clickCity","cName","toggle","siteId","Region","_item","handleResetMap","clearInterval","left","bottom","position","display","width","height","stiffness","damping","scale","backgroundColor","geoBackground","color","geographies","projection","geography","NAME","handleMove","MarkerComponent","transform","gColor","path","icon","handleViewZone","second","fill","stroke","strokeWidth","cursor","fontSize","handleAnnoteClick","mapStateToProps","ownProps","reset","receiveDataReduce","siteChanger","site","subPath","itemLabel","computeItem","mapDispatchProps","dispatch","handleInjectData","setUser","handleChangeTab","changeTab","changeCity","clickCityList","paths","self","config","isNaN","enableBackground","population","join","ref","cost"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\"\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker, Annotations, Annotation\n} from \"react-simple-maps\"\nimport { Button, Icon, List } from 'semantic-ui-react';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport { Motion, spring } from \"react-motion\"\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\"\nimport request from \"axios\"\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\n\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\n\nimport * as aggregation from '../../../utils';\nimport ReactTooltip from 'react-tooltip';\n//style\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css';\nimport CountryCode from '../../../libs/country-codes-lat-long-alpha3';\n\nconst grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022',\n    '#66CCFF', '#FF78A5', '#fffba7']\nconst zoomControls = {center:[30, 40], zoom:3}\n//reference : /public/assets/data-maps/world-most-populous-cities.json\n\nconst cityScale = scaleLinear()\n    .domain([0,37843000])\n    .range([1,48])\nconst markerSize = [20, 24]\n\nlet _self = null;\nconst makeList = (obj) => (\n    <List>\n        {obj.map((key,i) => (\n            <List.Item key={i}>\n\n                    {key}\n\n            </List.Item>\n        ))\n        }\n    </List>\n\n)\nclass ClustersMap extends Component {\n    constructor() {\n        super()\n        _self = this;\n        this.state = {\n            center: zoomControls.center,\n            zoom: zoomControls.zoom,\n            cities:[],\n            countries:[],\n            citiesSecond:[],\n            detailMode:false,\n            selectedCity:[],\n            oldCountry:'',\n            unselectCity:'',\n            clickCities:[],\n            saveMarker:[],\n            //blink\n            keyName:''\n            //-blink\n        }\n        this.handleZoomIn = this.handleZoomIn.bind(this)\n        this.handleZoomOut = this.handleZoomOut.bind(this)\n        this.handleCityClick = this.handleCityClick.bind(this)\n        this.handleGotoAnalysis = this.handleGotoAnalysis.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.fetchCities = this.fetchCities.bind(this)\n        this.handleLeave = this.handleLeave.bind(this)\n        this.dir = 1;\n        this.interval = null;\n        this.tempData = null;\n        this.tempLocation = null;\n    }\n    handleZoomIn() {\n        this.setState({\n            zoom: this.state.zoom * 2\n        })\n        this.props.parentProps.zoomIn(this.state.detailMode)\n    }\n    handleZoomOut() {\n        this.setState({\n            zoom: this.state.zoom / 2\n        })\n        this.props.parentProps.zoomOut(this.state.detailMode)\n    }\n    handleReset() {\n        this.setState({\n            center: this.state.center,\n            zoom: 3,\n            detailMode:false\n        })\n        try{\n            this.props.handleChangeClickCity([]);\n            this.props.parentProps.resetMap(false)\n        } catch(e) {\n\n        }\n\n    }\n    /* example:\n    {\n        \"CountryName\":\"Djibouti\",\n        \"CapitalName\":\"Djibouti\",\n        \"CapitalLatitude\":\"11.583333333333334\",\n        \"CapitalLongitude\":\"43.150000\",\n        \"CountryCode\":\"DJ\",\n        \"ContinentName\":\"Africa\"\n    }\n     */\n\n    // 펼쳐진 지도( full screen map)\n    handleCityClick(city) {\n        this.setState({\n            zoom: 4,\n            center: city.coordinates,\n            detailMode:true\n        })\n        this.props.parentProps.zoomIn(true)\n\n        if(d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n            d3.selectAll('.rsm-markers').selectAll(\".levelFive\")\n                .transition()\n                .ease(d3.easeBack)\n                .attr(\"r\", markerSize[0])\n        }\n        let clickMarker = [];\n        if(city) {\n            city.name.map((item, i) => {\n                clickMarker.push({ \"name\": item,    \"coordinates\": city.coordinates, \"population\": 17843000, \"cost\":1 })\n            })\n        }\n        this.setState({\n            clickCities:clickMarker,\n            saveMarker:clickMarker\n        })\n        this.props.handleChangeClickCity(clickMarker);\n        this.props.handleChangeCity(city)\n    }\n\n    // map marker text click\n    handleAnnoteClick(city) {\n    }\n\n    //-blink\n\n    handleGotoAnalysis(country) {\n        if(this.props.parentProps) this.props.parentProps.gotoNext(country);\n    }\n\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n    handleViewZone(country) {\n        //change the data of detail Info\n        _self.setState({selectedCity: country.name})\n        if(d3.selectAll('.detailMarker_'+_self.state.oldCountry)) {\n            d3.selectAll('.detailMarker_'+_self.state.oldCountry)\n                .transition()\n                .attr(\"r\", markerSize[0])\n                .style(\"opacity\",1)\n        }\n        _self.setState({oldCountry:country.name})\n\n        _self.props.handleChangeCity(country)\n    }\n\n    /** ************************************************\n     * fetchCities\n     * display marker and alarm-counter on the worldmap\n     * 지도위에 마커포시하고 숫자표현\n     ** ************************************************/\n    fetchCities() {\n        request\n            .get(\"/data-maps/world-most-populous-cities.json\")\n            .then(res => {\n                this.setState({\n                    cities: res.data,\n                })\n            })\n    }\n    fetchCountry() {\n        request\n            .get(\"/data-maps/country-capitals.json\")\n            .then(res => {\n                this.setState({\n                    countries: res.data\n                })\n                let _self = this;\n                setTimeout(_self.fetchMWCZone(), 1000)\n            })\n    }\n    fetchConnectivity() {\n        let indents = [0, 0]\n        let _countries = [{name:'Berlin'},{name:'Paris'},{name:'Kyiv'},{name:'Vienna'},{name:'Budapest'}]\n        let _Country = []\n        _countries.map((data, i) => {\n            _self.state.countries.map((cnt) => {\n                if(data.name === cnt.CapitalName) {\n                    _Country.push({ name: cnt.CapitalName, coordinates: [parseInt(cnt.CapitalLongitude) + indents[0], parseInt(cnt.CapitalLatitude) + indents[1]] })\n                }\n            })\n\n        })\n\n        this.setState({\n            citiesSecond: _Country\n        })\n    }\n    fetchMWCZone() {\n        //Longitude, Latitude\n        let _Country = []\n        let _countries = [\n            { \"name\": \"Barcelona\", \"coordinates\": [2.1734, 41.3851], \"population\": 1, \"cost\":1, \"offsets\": [10,15]},\n            // { \"name\": \"Sant Montjuic\", \"coordinates\": [0.170459, 41.018247], \"population\": 1, \"cost\":1, \"offsets\": [-10,15] },\n            // { \"name\": \"Sant Gervasi\", \"coordinates\": [1.005055, 42.493365], \"population\": 1, \"cost\":1, \"offsets\": [10,-15] },\n            { \"name\": \"frankfurt\", \"coordinates\": [8.6821, 50.1109], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n            { \"name\": \"hamburg\", \"coordinates\": [9.9937, 53.5511], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n            ]\n\n        this.setState({\n            citiesSecond: _countries\n        })\n    }\n\n    //마커의 깜박거림 크기\n    blinkAnimationMarker(id, dir) {\n        let radius = 0;\n        let alpha = 1;\n        let durate = 900;\n        if(dir === 1){\n            radius = 32;\n            alpha = 0;\n            durate = 900;\n        } else {\n            radius = 16;\n            alpha = 1;\n            durate = 300;\n        }\n        if(d3.selectAll('.'+id).selectAll(\".levelFive\")) {\n            d3.selectAll('.'+id).selectAll(\".levelFive\")\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", radius)\n                .style(\"opacity\",alpha)\n        }\n\n        // if(d3.selectAll('.'+id).selectAll(\".toronto-cloudlet\")) {\n        //     d3.selectAll('.'+id).selectAll(\".toronto-cloudlet\")\n        //         .transition()\n        //         .duration(durate)\n        //         .ease(d3.easeBack)\n        //         .attr(\"r\", radius)\n        //         .style(\"opacity\",alpha)\n        // }\n\n        //blink\n        if(d3.selectAll('.'+id).selectAll((this.state.keyName !== '')?'.'+this.state.keyName:null)) {\n            d3.selectAll('.'+id).selectAll((this.state.keyName !== '')?'.'+this.state.keyName:null)\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", radius)\n                .style(\"opacity\",alpha)\n        }\n        //-blink\n\n        if(d3.selectAll('.detailMarker_'+_self.state.selectedCity)) {\n            d3.selectAll('.detailMarker_'+_self.state.selectedCity)\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", (dir === 1)?markerSize[0]:markerSize[1])\n                .style(\"opacity\",alpha)\n        }\n\n    }\n\n    //tooltip\n    handleLeave = () => {\n        //this.props.dispatch(hide())\n        ReactTooltip.hide(this.tooltipref)\n    }\n    handleMoveMk = (marker, evt) => {\n\n        const x = evt.clientX\n        const y = evt.clientY + window.pageYOffset\n        let names = [];\n        if(marker.name.length){\n            names = makeList(marker.name)\n        }\n\n        //this.setState({tooltipMsg:(names.length>0) ? names : (this.props.parentProps.condition === 'two')?marker.name[0]:marker.name})\n        _self.setState({tooltipMsg:(typeof names === 'object') ? names : marker.name})\n        if(!_self.moveMouse){\n            ReactTooltip.rebuild()\n            ReactTooltip.show(_self.circle)\n        }\n\n        _self.moveMouse = true;\n    }\n    handleLeaveMk = () => {\n        //this.props.dispatch(hide())\n        ReactTooltip.hide(this.tooltipref)\n        this.moveMouse = false;\n    }\n    handleMouseDown = (a, b) => {\n        let countries = CountryCode.ref_country_codes;\n        let _lat = '';\n        let _long = '';\n        console.log('20190830 selected region = ', a.properties, 'location data all =', countries)\n        countries.map((country) => {\n            if(country.alpha2 === a.properties[\"ISO_A2\"]){\n                console.log('20190830 country code = ', country)\n                _lat = country['latitude'];\n                _long = country['longitude'];\n            }\n        })\n\n        if(localStorage.selectMenu == 'Cloudlets'){\n            let location = {region:a.properties[\"REGION_UN\"],name:a.properties[\"NAME\"], lat:_lat, long:_long}\n            _self.props.handleGetRegion(location)\n        }\n    }\n\n    componentDidMount() {\n        //this.fetchCities();\n        //this.fetchCountry();\n        console.log('20191204 temploacation...', this.tempLocation)\n        //zoom\n        if(this.props.zoomControl) {\n            this.setState({center:this.props.zoomControl.center, zoom:this.props.zoomControl.zoom})\n        }\n\n        let _self = this;\n        this.interval = setInterval(function() {\n            if(_self.dir === 1) {\n                _self.dir = -1\n            } else {\n                _self.dir = 1;\n            }\n            _self.blinkAnimationMarker('rsm-markers', _self.dir)\n        }, 900)\n\n        if(_self.props.tabIdx === 'pg=1'){\n            _self.handleCityClick({ \"name\": this.state.selectedCity, \"coordinates\": [2.1734, 41.3851], \"population\": 37843000, \"cost\":3 });\n        }\n\n        _self.setState({oldCountry:this.state.selectedCity})\n\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let initialData = (nextProps.parentProps.devData)?nextProps.parentProps.devData:nextProps.parentProps.locData;\n        let data = initialData.filter((item)=>item.State == 5);\n        //let data = (nextProps.parentProps.devData)?nextProps.parentProps.devData:nextProps.parentProps.locData;\n\n        if(this.tempData == data) return;\n        this.tempData = data;\n        this.tempLocation = data;\n        console.log('20191204 daaaata...', data, \":\", nextProps.getRegion)\n\n        function reduceUp(value) {\n            return Math.round(value)\n        }\n        const mapName = (item) => {\n            if (localStorage.selectMenu == \"Cloudlets\") {\n                return item.CloudletName\n            } else if (localStorage.selectMenu == \"App Instances\") {\n                return item.AppName\n            } else if (localStorage.selectMenu == \"Cluster Instances\") {\n                if(nextProps.parentProps.reg === 'cloudletAndClusterMap') {\n                    return item.CloudletName\n                } else {\n                    return item.ClusterName\n                }\n            } else {\n                return\n            }\n        }\n        let locations = data.map((item) => (\n            {LAT:reduceUp(item.CloudletLocation.latitude), LON:reduceUp(item.CloudletLocation.longitude), cloudlet:mapName(item)}\n        ))\n\n\n        let locationData = [];\n\n        let groupbyData = aggregation.groupByCompare(locations, ['LAT','LON']);\n\n        const cloundletName = (key) => {\n            let nameArray = [];\n            groupbyData[key].map((item, i) => {\n                nameArray[i] = groupbyData[key][i]['cloudlet'];\n            })\n\n            return nameArray;\n        }\n\n        Object.keys(groupbyData).map((key) => {\n            locationData.push({ \"name\": cloundletName(key),    \"coordinates\": [groupbyData[key][0]['LON'], groupbyData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyData[key].length })\n        })\n        //\n        let cloudlet = data.map((item) => (\n            {LAT:item.CloudletLocation.latitude, LON:item.CloudletLocation.longitude, cloudlet:item.CloudletName}\n        ))\n\n\n        let cloudletData = [];\n\n        let groupbyClData = aggregation.groupBy(cloudlet, 'cloudlet');\n\n        Object.keys(groupbyClData).map((key) => {\n            cloudletData.push({ \"name\": key,    \"coordinates\": [groupbyClData[key][0]['LON'], groupbyClData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyClData[key].length })\n        })\n\n        this.setState({\n            cities: locationData\n        })\n\n        if(nextProps.deleteReset){\n            console.log(\"nextProps.deleteResetsss\",nextProps.deleteReset)\n            this.handleReset();\n            this.props.handleDeleteReset(false);\n        }\n\n        if(nextProps.changeRegion !== 'All' && (nextProps.parentProps && nextProps.parentProps.clickCity && nextProps.parentProps.clickCity.length)){\n            let clickMarker = [];\n            let cName = '';\n            let toggle = false;\n            if(nextProps.parentProps.siteId == 'Cloudlet') cName = 'CloudletName';\n            else if(nextProps.parentProps.siteId == 'ClusterInst') cName = 'ClusterName';\n            else if(nextProps.parentProps.siteId == 'appinst') cName = 'AppName';\n\n            nextProps.parentProps.devData.map((item) => {\n                if(nextProps.changeRegion == item.Region){\n                    nextProps.parentProps.clickCity.map((_item) => {\n                        if(_item.name == item[cName] && Math.round(_item.coordinates[0]) == Math.round(item.CloudletLocation.longitude) && Math.round(_item.coordinates[1]) == Math.round(item.CloudletLocation.latitude) && !toggle){\n                            clickMarker.push({ \"name\": item[cName], \"coordinates\": [item.CloudletLocation.longitude, item.CloudletLocation.latitude], \"population\": 17843000, \"cost\":1 });\n                            toggle = true;\n                        }\n                    })\n                                        \n                }\n                toggle = false;\n            })   \n            if(clickMarker.length){\n                this.setState({clickCities:clickMarker});\n            } else {\n                this.setState({clickCities:[]});\n            }          \n        } else {\n            this.setState({clickCities:this.state.saveMarker});\n        }\n\n        if(nextProps.parentProps) {\n            if(nextProps.parentProps.resetMap === 'back') {\n                this.setState({\n                    center: this.state.center,\n                    zoom: 3,\n                    detailMode:false\n                })\n                this.props.handleResetMap('deep')\n            }\n        }\n\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"zoom-inout-reset-clusterMap\" style={{left:8, bottom:4, position:'absolute', display:'block'}}>\n                    <Button id=\"mapZoomCtl\" size='larges' icon onClick={this.handleReset}>\n                        <Icon name=\"expand\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='large' icon onClick={this.handleZoomIn}>\n                        <Icon name=\"plus square outline\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='large' icon onClick={this.handleZoomOut}>\n                        <Icon name=\"minus square outline\" />\n                    </Button>\n                </div>\n\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[5]} endColor={grdColors[5]} idCSS=\"levelFive\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[4]} endColor={grdColors[4]} idCSS=\"levelFour\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[3]} endColor={grdColors[3]} idCSS=\"levelThree\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[2]} endColor={grdColors[2]} idCSS=\"levelTwo\" rotation={0}/>\n                {/*<RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[6]} endColor={grdColors[6]} idCSS=\"levelSkyblue\" rotation={0}/>*/}\n                {/*<RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[7]} endColor={grdColors[7]} idCSS=\"levelPuurple\" rotation={0}/>*/}\n                {/*<RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[8]} endColor={grdColors[8]} idCSS=\"levelGold\" rotation={0}/>*/}\n                <RadialGradientSVG startColor={'#394251'} middleColor={'#394251'} endColor={'#394251'} idCSS=\"levelBg\" rotation={0}/>\n                <ReactTooltip id='happyFace' className='customToolTip' type='dark' effect='float' style={{left:'-100px'}}>\n                    <span>{this.state.tooltipMsg}</span>\n                </ReactTooltip>\n                <ContainerDimensions>\n                    { ({ width, height }) =>\n                        <Motion\n                            defaultStyle={{\n                                zoom: 1,\n                                x: 30,\n                                y: 40,\n                            }}\n                            style={{\n                                zoom: spring(this.state.zoom, {stiffness: 210, damping: 30}),\n                                x: spring(this.state.center[0], {stiffness: 210, damping: 30}),\n                                y: spring(this.state.center[1], {stiffness: 210, damping: 30}),\n                            }}\n                        >\n                            {({zoom,x,y}) => (\n                                <ComposableMap\n                                    projectionConfig={{ scale: 205 }}\n                                    width={980}\n                                    height={551}\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        backgroundColor:styles.geoBackground.color\n                                    }}\n                                >\n                                    <ZoomableGroup center={[x,y]} zoom={zoom} disablePanning={false}>\n                                        <Geographies geography=\"/topojson-maps/world-110m.json\">\n                                            {(geographies, projection) =>\n                                                geographies.map((geography, i) => geography.id !== \"010\" && (\n                                                    <Geography\n                                                        key={i}\n                                                        geography={geography}\n                                                        projection={projection}\n                                                        data-tip={geography.properties.NAME}\n                                                        style={styles.geography}\n                                                        onMouseDown={this.handleMouseDown}\n                                                        onMouseMove={this.handleMove}\n                                                        onMouseLeave={this.handleLeave}\n                                                    />\n                                                ))}\n                                        </Geographies>\n                                        <Markers>\n                                            {(localStorage.selectMenu == \"Cloudlets\" && !this.state.detailMode) ?\n                                                this.state.cities.map((city, i) => (\n                                                    MarkerComponent(this, city, i, {transform:\"translate(-24,-18)\", gColor:6, cName:'st1', path:0})\n                                                ))\n                                                : (localStorage.selectMenu == \"Cluster Instances\" && !this.state.detailMode) ?\n                                                this.state.cities.map((city, i) => (\n                                                    (this.props.icon === 'cloudlet')?\n                                                        MarkerComponent(this, city, i, {transform:\"translate(-24,-18)\", gColor:6, cName:'st1', path:0})\n                                                        :MarkerComponent(this, city, i, {transform:\"translate(-25,-27)\", gColor:8, cName:'st2', path:1})\n                                                ))\n                                                :\n                                                (localStorage.selectMenu == \"App Instances\" && !this.state.detailMode) ?\n                                                this.state.cities.map((city, i) => (\n                                                    MarkerComponent(this, city, i, {transform:\"translate(-17,-21)\", gColor:7, cName:'st3', path:2})\n                                                ))\n                                                :\n                                                this.state.clickCities.map((city, i) => (\n                                                    <Marker\n                                                        key={i}\n                                                        marker={city}\n                                                        onClick={this.handleViewZone}\n                                                    >\n                                                        <circle\n                                                            className={\"detailMarker_\"+city.name}\n                                                            cx={0}\n                                                            cy={0}\n                                                            r={markerSize[0]}\n                                                            opacity={1}\n                                                            fill={styles.marker.second.fill}\n                                                            stroke={styles.marker.second.stroke}\n                                                            strokeWidth={styles.marker.second.strokeWidth}\n                                                        />\n\n                                                        {/* <text\n                                                            class=\"marker_label\"\n                                                            textAnchor=\"middle\"\n                                                            x={city.offsets[0]}\n                                                            y={city.offsets[1]}\n                                                        >\n                                                            {city.name}\n                                                        </text> */}\n                                                    </Marker>\n                                                ))\n                                            }\n                                        </Markers>\n                                        <Annotations>\n                                            {\n                                                this.state.detailMode ?\n\n                                                    this.state.clickCities.map((city, i) => (\n                                                        <Annotation\n                                                            key={i}\n                                                            dx={ -30 } dy={ 30+(i*45) }\n                                                            curve={0.5}\n                                                            zoom = {1}\n                                                            subject={ city['coordinates'] }\n                                                            strokeWidth={ 0.1 }\n                                                            stroke={'#AFAFAF'}\n                                                            style={{cursor:'pointer'}}\n                                                        >\n                                                            <text className='annoteText'\n                                                                fill='#AFAFAF' style={{fontSize:7}}\n                                                                onClick={(a, b) => this.handleAnnoteClick(city)}\n                                                            >\n                                                                {city.name}\n\n                                                            </text>\n                                                        </Annotation>\n                                                    ))\n                                                    :null\n                                            }\n                                        </Annotations>\n                                    </ZoomableGroup>\n                                </ComposableMap>\n                            )}\n\n                        </Motion>\n                    }\n                </ContainerDimensions>\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    let getRegion = (state.getRegion)?state.getRegion.region:null\n    let deleteReset = state.deleteReset.reset;\n    return {\n        data: state.receiveDataReduce.data,\n        tabIdx: state.siteChanger.site.subPath,\n        itemLabel: state.computeItem.item,\n        getRegion: state.getRegion,\n        deleteReset,\n        changeRegion : state.changeRegion.region?state.changeRegion.region:null,\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleInjectData: (data) => { dispatch(actions.setUser(data)) },\n        handleChangeTab: (data) => { dispatch(actions.changeTab(data)) },\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) },\n        handleGetRegion: (data) => { dispatch(actions.getRegion(data)) },\n        handleChangeClickCity: (data) => { dispatch(actions.clickCityList(data))},\n        handleDeleteReset: (data) => { dispatch(actions.deleteReset(data))},\n        handleResetMap: (data) => { dispatch(actions.resetMap(data))}\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(ClustersMap);\n\n\nconst paths = [\n    'M 38.875 12.960938 C 37.613281 6.019531 31.59375 0.75 24.351562 0.75 C 18.582031 0.75 13.59375 4.089844 11.160156 8.949219 C 5.210938 9.640625 0.59375 14.738281 0.59375 20.929688 C 0.59375 27.554688 5.875 32.921875 12.414062 32.992188 L 38.183594 32.992188 C 43.664062 32.992188 48.113281 28.496094 48.113281 22.957031 C 48.113281 17.667969 44.035156 13.328125 38.875 12.960938 Z M 38.875 12.960938',\n    'M 20.832031 8.332031 L 8.332031 8.332031 C 6.042969 8.332031 4.1875 10.207031 4.1875 12.5 L 4.167969 37.5 C 4.167969 39.792969 6.042969 41.667969 8.332031 41.667969 L 41.667969 41.667969 C 43.957031 41.667969 45.832031 39.792969 45.832031 37.5 L 45.832031 16.667969 C 45.832031 14.375 43.957031 12.5 41.667969 12.5 L 25 12.5 Z M 20.832031 8.332031',\n    'M 34.945312 17.558594 C 34.945312 27.097656 17.539062 49.683594 17.539062 49.683594 C 17.539062 49.683594 0.132812 27.097656 0.132812 17.558594 C 0.132812 8.019531 7.921875 0.289062 17.539062 0.289062 C 27.152344 0.289062 34.945312 8.019531 34.945312 17.558594 Z M 34.945312 17.558594'\n]\nconst MarkerComponent = (self, city, i, config) => (\n    (!isNaN(city.coordinates[0])) ?\n    <Marker className=\"markerTwo\" key={i} marker={city}\n            onClick={ self.handleCityClick }\n            onMouseOver={self.handleMoveMk}\n            onMouseMove={self.handleMoveMk}\n            onMouseLeave={self.handleLeaveMk}\n            style={{}}\n\n    >\n\n        <g\n\n            version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\"\n           viewBox=\"0 0 50 50\" style={{enableBackground:\"new 0 0 50 50\"}}\n            //blink\n           className={[('blinkMark' + i == self.state.keyName)?self.state.keyName:null, (city.population > 35000000)?'levelFive':'levelOther'].join(' ')}\n            //-blink\n           cx={0}\n           cy={0}\n           r={cityScale(city.population-200300)}\n           fill={\n               'url(#levelBg)'\n               // '#394251'\n           }\n           stroke={styles.marker.stroke}\n           strokeWidth={styles.marker.strokeWidth}\n           transform={config.transform} mix-blend-mode=\"lighten\"\n\n        >\n            {/* 필터 InnerGlow */}\n            <defs>\n                <filter id=\"InnerGlow\" color-interpolation-filters=\"sRGB\">\n                    <feGaussianBlur id=\"GaussianBlur\" result=\"GaussianBlurResult\" stdDeviation=\"8\">\n                    </feGaussianBlur>\n                    <feComposite id=\"Composite1\" in2=\"GaussianBlurResult\" result=\"CompositeResult1\" in=\"SourceGraphic\" operator=\"in\"/>\n\n                    <feFlood id=\"Flood\" result=\"FloodResult\" in=\"CompositeResult3\" flood-opacity=\"1\" flood-color={\n                        (city.population > 35000000)?grdColors[5]:\n                            (city.population <= 35000000 &&  city.population > 30000000)?grdColors[4]:\n                                (city.population <= 30000000 &&  city.population > 25000000)?grdColors[3]:\n                                    (city.population <= 25000000 &&  city.population > 20000000)?grdColors[2]:\n                                        grdColors[6]}/>\n                    <feBlend id=\"Blend\" in2=\"FloodResult\" mode=\"normal\" in=\"CompositeResult1\" result=\"BlendResult1\"/>\n                    <feComposite id=\"GaussianBlur\" in2=\"SourceGraphic\" result=\"CompositeResult3\" operator=\"in\" in=\"BlendResult1\"/>\n                </filter>\n            </defs>\n            {/* 필터 innershadow */}\n            <defs>\n                <filter id=\"innershadow\" x0=\"-50%\" y0=\"-50%\" width=\"200%\" height=\"200%\">\n                    <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\" result=\"blur\"></feGaussianBlur>\n                    <feOffset dy=\"2\" dx=\"3\"></feOffset>\n                    <feComposite in2=\"SourceAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\" result=\"shadowDiff\"></feComposite>\n\n                    <feFlood flood-color={\n                        (city.population > 35000000)?grdColors[5]:\n                            (city.population <= 35000000 &&  city.population > 30000000)?grdColors[4]:\n                                (city.population <= 30000000 &&  city.population > 25000000)?grdColors[3]:\n                                    (city.population <= 25000000 &&  city.population > 20000000)?grdColors[2]:\n                                        grdColors[config.gColor]}\n                             flood-opacity=\"1\"></feFlood>\n                    <feComposite in2=\"shadowDiff\" operator=\"in\"></feComposite>\n                    <feComposite in2=\"SourceGraphic\" operator=\"over\" result=\"firstfilter\"></feComposite>\n\n\n                    <feGaussianBlur in=\"firstfilter\" stdDeviation=\"3\" result=\"blur2\"></feGaussianBlur>\n                    <feOffset dy=\"-2\" dx=\"-3\"></feOffset>\n                    <feComposite in2=\"firstfilter\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\" result=\"shadowDiff\"></feComposite>\n\n                    <feFlood flood-color={\n                        (city.population > 35000000)?grdColors[5]:\n                            (city.population <= 35000000 &&  city.population > 30000000)?grdColors[4]:\n                                (city.population <= 30000000 &&  city.population > 25000000)?grdColors[3]:\n                                    (city.population <= 25000000 &&  city.population > 20000000)?grdColors[2]:\n                                        grdColors[config.gColor]}\n                             flood-opacity=\"1\"></feFlood>\n                    <feComposite in2=\"shadowDiff\" operator=\"in\"></feComposite>\n                    <feComposite in2=\"firstfilter\" operator=\"over\"></feComposite>\n                </filter>\n            </defs>\n            <path filter=\"url(#innershadow)\" className={config.cName} d={paths[config.path]} ref={ref => self.circle = ref}>\n            </path>\n        </g>\n        <g data-tip='tooltip' data-for='happyFace'>\n            <text textAnchor=\"middle\" y={8} className=\"marker_value\"\n                  style={{fontSize: 24}}>\n                {city.cost}\n            </text>\n        </g>\n    </Marker>: null\n)\n"]},"metadata":{},"sourceType":"module"}