{"ast":null,"code":"import _toConsumableArray from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/TimelineAuditViewNew.js\",\n    _temp;\n\nimport 'react-hot-loader';\nimport React from 'react';\nimport { Button, Dropdown, Modal } from 'semantic-ui-react';\nimport * as moment from 'moment';\nimport ReactJson from 'react-json-view';\nimport { connect } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport PopSendEmailView from '../container/popSendEmailView';\nimport { withRouter } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as actions from \"../actions\";\nimport View from \"react-flexbox\";\nimport FlexBox from \"flexbox-react\";\nimport HorizontalTimelineKJ from \"../components/horizontal_timeline_kj/Components/HorizontalTimeline\";\nimport { hot } from \"react-hot-loader/root\";\nimport { GridLoader } from \"react-spinners\";\nvar countryOptions = [{\n  key: '24',\n  value: '24',\n  flag: '24',\n  text: 'Last 24hours'\n}, {\n  key: '18',\n  value: '18',\n  flag: '18',\n  text: 'Last 18hours'\n}, {\n  key: '12',\n  value: '12',\n  flag: '12',\n  text: 'Last 12hours'\n}, {\n  key: '6',\n  value: '6',\n  flag: '6',\n  text: 'Last 6hours'\n}, {\n  key: '1',\n  value: '1',\n  flag: '1',\n  text: 'Last an hour'\n}];\nvar timesList = [];\nvar _self = null;\n\nvar jsonView = function jsonView(jsonObj, self) {\n  return React.createElement(ReactJson, Object.assign({\n    src: jsonObj\n  }, self.jsonViewProps, {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var submitSuccess = false;\n  var submitContent = null;\n\n  if (state.form.fieldLevelValidation) {\n    console.log('20191030 redux props.. ', state.form.fieldLevelValidation);\n\n    if (state.form.fieldLevelValidation.submitSucceeded) {\n      submitSuccess = true;\n      submitContent = state.form.fieldLevelValidation.registeredFields;\n    }\n  }\n\n  return {\n    onSubmit: submitSuccess,\n    sendingContent: submitContent,\n    loading: state.loadingSpinner.loading,\n    isLoading: state.LoadingReducer.isLoading\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    toggleLoading: function toggleLoading(data) {\n      dispatch(actions.toggleLoading(data));\n    }\n  };\n};\n\nexport default hot(withRouter(connect(mapStateToProps, mapDispatchProps)((_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimelineAuditViewNew, _React$Component);\n\n  function TimelineAuditViewNew(props) {\n    var _this;\n\n    _classCallCheck(this, TimelineAuditViewNew);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineAuditViewNew).call(this, props));\n    _this.state = {\n      value: 0,\n      previous: 0,\n      // timelineConfig\n      minEventPadding: 20,\n      maxEventPadding: 100,\n      linePadding: 50,\n      labelWidth: 170,\n      fillingMotionStiffness: 150,\n      fillingMotionDamping: 25,\n      slidingMotionStiffness: 150,\n      slidingMotionDamping: 25,\n      stylesBackground: 'transparent',\n      stylesForeground: '#454952',\n      stylesOutline: '#454952',\n      isTouchEnabled: true,\n      isKeyboardEnabled: true,\n      isOpenEnding: true,\n      isOpenBeginning: true,\n      dates: [],\n      contData: [],\n      rawAllData: [],\n      rawViewData: [],\n      requestData: [],\n      responseData: [],\n      currentTraceid: 'traceId',\n      selectedIndex: 0,\n      auditCount: 0,\n      mounted: false,\n      openSendEmail: false,\n      orgName: '',\n      isLoading: false,\n      isLoading2: false,\n      timesList: [],\n      timeLineIndex: 0,\n      tasksList: [],\n      currentTask: '',\n      currentTaskTime: ''\n    };\n    _this.jsonViewProps = {\n      name: null,\n      theme: \"monokai\",\n      collapsed: false,\n      collapseStringsAfter: 15,\n      onAdd: false,\n      onEdit: false,\n      onDelete: false,\n      displayObjectSize: true,\n      enableClipboard: true,\n      indentWidth: 4,\n      displayDataTypes: false,\n      iconStyle: \"triangle\"\n    };\n\n    _this.componentWillReceiveProps = function _callee(nextProps, nextContext) {\n      var dummys, dummyConts, auditList, tasksList, i, operName, newTimesList, _i;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dummys = [];\n              dummyConts = [];\n              /*\"pg=audits&org=org1574180880\"\n              \"pg=audits&org=org1574180880\"*/\n\n              if (!(nextProps.data !== _this.props.data)) {\n                _context.next = 21;\n                break;\n              }\n\n              _this.setState({\n                timesList: [],\n                tasksList: [],\n                isLoading: true\n              });\n\n              if (nextProps.location.search.toString().includes('org=')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(_this.setState({\n                orgName: ''\n              }));\n\n            case 7:\n              if (!(nextProps.data.data && nextProps.data.data.length)) {\n                _context.next = 21;\n                break;\n              }\n\n              nextProps.data.data.map(function (item) {\n                var stdate = _this.makeUTC(item['starttime']);\n\n                var sttime = _this.makeNotUTC(item['starttime']);\n\n                var composit = stdate + \" \" + sttime;\n                dummys.push(composit);\n                dummyConts.push(item);\n                timesList.push('timeline-dot-' + composit);\n              });\n\n              _this.setState({\n                dates: dummys,\n                rawAllData: dummyConts,\n                auditCount: nextProps.data.data.length,\n                currentTraceid: dummyConts[_this.state.selectedIndex]['traceid']\n              });\n\n              if (dummyConts[_this.state.selectedIndex]) _this.setAllView(dummyConts[_this.state.selectedIndex], _this.state.selectedIndex);\n              if (dummyConts[_this.state.selectedIndex]) _this.setRequestView(dummyConts[_this.state.selectedIndex], _this.state.selectedIndex);\n              if (dummyConts[_this.state.selectedIndex]) _this.setResponseView(dummyConts[_this.state.selectedIndex], _this.state.selectedIndex);\n              auditList = nextProps.data.data;\n              tasksList = []; //todo: Extract only the TaskName to display at the top of the timeline.\n\n              for (i in auditList) {\n                operName = auditList[i].operationname;\n                tasksList.push(_this.makeOper(operName));\n              }\n\n              newTimesList = [];\n\n              for (_i in timesList) {\n                if (_i < tasksList.length) {\n                  newTimesList.push(timesList[_i].toString().replace('timeline-dot-', ''));\n                }\n              }\n\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(_this.setState({\n                timesList: newTimesList,\n                //@:todo: TimesList to display above the timeline Dot\n                tasksList: tasksList,\n                //@:todo: 타임라인 Dot 위쪽에 표시해줄 tasksList\n                currentTask: tasksList[0],\n                currentTaskTime: timesList[0],\n                isLoading: false\n              }));\n\n            case 20:\n              _this.props.handleLoadingSpinner(false);\n\n            case 21:\n              //submit form\n              if (nextProps.onSubmit) {\n                console.log('20191030 send mail contents == ', nextProps.sendingContent); // services.sendEmailAudit('SendMail',\n                //     {fromEmail:'support@mobiledgex.com', toEmail:'', traceId:tId, message:msg, title: title},\n                //     _self.resultReceive, _self)\n              }\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.makeUnixUTC = function (time) {\n      var newTime = moment(time).unix();\n      return moment(newTime).utc().format('YYYY/MM/DD HH:mm:ss.SSS');\n    };\n\n    _this.makeUTC = function (time) {\n      var newTime = moment(time).unix();\n      return moment(newTime).utc().format('YYYY/MM/DD');\n    };\n\n    _this.makeNotUTC = function (time) {\n      var newTime = moment(time).unix();\n      var makeTime = moment(newTime).utc().format('HH:mm:ss:SSS');\n\n      if (makeTime === _self.sameTime) {\n        _self.addCount++;\n        makeTime = moment(newTime + 1000).utc().format('HH:mm:ss'); //makeTime = moment(newTime).utc().format('HH:mm:ss.SSS') + \"00\"+ (_self.addCount < 10)? '0'+_self.addCount : _self.addCount;\n      } else {\n        _self.addCount = 0;\n      }\n\n      _self.sameTime = makeTime;\n      return makeTime;\n    };\n\n    _this.makeOper = function (logName) {\n      var lastSub = logName.substring(logName.lastIndexOf('/') + 1);\n      return lastSub;\n    };\n\n    _this.onHandleIndexClick = function (value) {\n      var selectedId = String(value.value);\n      if (!selectedId) return;\n      var selectedDom = document.getElementById(timesList[selectedId]);\n      var selectChildNode = null;\n\n      if (selectedDom) {\n        selectChildNode = selectedDom.childNodes; // reset style of circle\n\n        var oldSelected = document.getElementsByClassName('selectedCircle_timeline'); // if(oldSelected.length) oldSelected.map((element) => {\n        //     element.className = null;\n        // })\n\n        console.log('2019119 selet old..', oldSelected, \":\", _toConsumableArray(oldSelected));\n        selectChildNode[1].className = 'selectedCircle_timeline';\n      }\n\n      _self.setAllView(_self.state.rawAllData[selectedId], selectedId);\n\n      _self.setRequestView(_self.state.rawAllData[selectedId], selectedId);\n\n      _self.setResponseView(_self.state.rawAllData[selectedId], selectedId);\n\n      if (_self.state.rawAllData[selectedId]) _self.props.handleSelectedAudit(_self.state.rawAllData[selectedId]);\n    };\n\n    _this.submitSendEmail = function () {\n      alert('submit');\n    };\n\n    _this.close = function () {\n      return _this.setState({\n        openSendEmail: false\n      });\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.sameTime = '0';\n    _this.addCount = 0;\n    return _this;\n  }\n\n  _createClass(TimelineAuditViewNew, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('111.props===>', this.props);\n\n      if (this.props.history.location.search === 'pg=audits') {\n        this.setState({\n          isLoading: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.location.state !== undefined) {\n        var orgName = this.props.location.state.orgName;\n        this.setState({\n          orgName: orgName\n        });\n      }\n\n      this.setState({\n        mounted: true\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        mounted: false\n      });\n    }\n  }, {\n    key: \"setAllView\",\n    value: function setAllView(dummyConts, sId) {\n      if (dummyConts && dummyConts['traceid']) _self.setState({\n        rawViewData: dummyConts,\n        currentTraceid: dummyConts['traceid']\n      });\n    }\n  }, {\n    key: \"setRequestView\",\n    value: function setRequestView(dummyConts, sId) {\n      if (dummyConts && dummyConts['request']) {\n        if (dummyConts['request'].indexOf('{') > -1) {\n          var dataLenght = dummyConts['request'].split('{\"data\":').length;\n\n          if (dataLenght > 1) {\n            this.setState({\n              requestData: {\n                \"data\": dummyConts['request'].split('{\"data\":')\n              }\n            });\n          } else {\n            this.setState({\n              requestData: JSON.parse(dummyConts['request'])\n            });\n          }\n        } else {\n          this.setState({\n            requestData: {\n              'request': dummyConts['request']\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setResponseView\",\n    value: function setResponseView(dummyConts, sId) {\n      if (dummyConts && dummyConts['response'].indexOf('{') > -1) {\n        var dataLenght = dummyConts['response'].split('{\"data\":').length;\n\n        if (dataLenght > 1) {\n          this.setState({\n            responseData: {\n              \"data\": dummyConts['response'].split('{\"data\":')\n            }\n          }); //this.setState({responseData:{\"data\":\"test2222\"}})\n        } else {\n          this.setState({\n            responseData: JSON.parse(dummyConts['response'] !== \"\" ? dummyConts['response'] : {})\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var state = this.state;\n      return React.createElement(\"div\", {\n        className: \"page_audit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_history_option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.state.orgName), React.createElement(\"div\", {\n        className: \"page_audit_history_option_period\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Custom Time Range\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: countryOptions,\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"page_audit_history_timeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 160,\n          width: '100%',\n          overflow: 'auto',\n          marginTop: -50,\n          marginBottom: 100,\n          //backgroundColor: 'blue',\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, this.state.isLoading && React.createElement(FlexBox, {\n        style: {\n          position: 'absolute',\n          top: '5%',\n          zIndex: 9999999\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        style: {\n          color: 'green',\n          zIndex: 9999999,\n          fontSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      })), !this.state.isLoading && this.state.timesList.length !== 0 && React.createElement(HorizontalTimelineKJ, {\n        labelWidth: 200 //todo: 타임라인 Dot 위쪽의 라벨을 그리는 부분.\n        ,\n        getLabel: function getLabel(date, task, index) {\n          return React.createElement(View, {\n            column: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 406\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: {\n              height: 15,\n              fontSize: 13,\n              borderWidth: 1,\n              borderColor: 'grey'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 407\n            },\n            __self: this\n          }, date), React.createElement(FlexBox, {\n            style: {\n              fontSize: 15,\n              fontWeight: '800',\n              color: 'orange',\n              marginTop: 5,\n              marginBottom: 0,\n              height: 30,\n              alignItems: 'flex-end',\n              justifyContent: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 416\n            },\n            __self: this\n          }, task, \"+ \", index.toString()));\n        },\n        index: this.state.timeLineIndex,\n        indexClick: function _callee2(timeLineIndex) {\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return _regeneratorRuntime.awrap(_this2.setState({\n                    timeLineIndex: timeLineIndex,\n                    currentTask: _this2.state.tasksList[timeLineIndex],\n                    currentTaskTime: _this2.state.timesList[timeLineIndex]\n                  }));\n\n                case 2:\n                  _this2.onHandleIndexClick({\n                    value: timeLineIndex,\n                    previous: _this2.state.value\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          });\n        },\n        values: this.state.timesList,\n        tasks: this.state.tasksList,\n        styles: {\n          outline: '#dfdfdf',\n          outline2: '#79BF14',\n          background: '#f8f8f8',\n          foreground: '#79BF14'\n        },\n        linePadding: 150\n        /* slidingMotion={{\n             stiffness: 300,\n             damping: 30,\n         }}\n         fillingMotion={{\n             stiffness: 300,\n             damping: 30,\n         }}*/\n        ,\n        isKeyboardEnabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"page_audit_code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_rawviewer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_rawviewer_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Raw Viewer\"), React.createElement(\"div\", {\n        className: \"page_audit_code_rawviewer_codebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, this.state.rawViewData ? jsonView(this.state.rawViewData, this) : null))), React.createElement(\"div\", {\n        className: \"page_audit_code_right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_request_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Request\"), React.createElement(\"div\", {\n        className: \"page_audit_code_request_codebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, this.state.requestData ? jsonView(this.state.requestData, this) : null)), React.createElement(\"div\", {\n        className: \"page_audit_code_response\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page_audit_code_response_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"Response\"), React.createElement(\"div\", {\n        className: \"page_audit_code_response_codebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, this.state.responseData ? jsonView(this.state.responseData, this) : null)))), React.createElement(SendEmailView, {\n        dimmer: true,\n        open: this.state.openSendEmail,\n        close: this.close,\n        callback: this.submitSendEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \" \"));\n    }\n  }]);\n\n  return TimelineAuditViewNew;\n}(React.Component), _temp))));\n\nvar SendEmailView =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SendEmailView, _React$Component2);\n\n  function SendEmailView() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, SendEmailView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SendEmailView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this3.onSubmit = function () {\n      _this3.setState({\n        submitState: true\n      });\n    };\n\n    _this3.onClear = function () {\n      _this3.setState({\n        clearState: true\n      });\n    };\n\n    _this3.state = {\n      submitState: false,\n      clearState: false\n    };\n    return _this3;\n  }\n\n  _createClass(SendEmailView, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          dimmer = _this$props.dimmer,\n          open = _this$props.open,\n          close = _this$props.close,\n          callback = _this$props.callback;\n      return React.createElement(Modal, {\n        dimmer: dimmer,\n        open: open,\n        onClose: close,\n        closeIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"New Email\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(PopSendEmailView, {\n        ref: function ref(form) {\n          return _this4.formReference = form;\n        },\n        submitState: this.state.submitState,\n        clearState: this.state.clearState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"black\",\n        onClick: this.onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Submit\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SendEmailView;\n}(React.Component);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/TimelineAuditViewNew.js"],"names":["React","Button","Dropdown","Modal","moment","ReactJson","connect","PopSendEmailView","withRouter","CircularProgress","actions","View","FlexBox","HorizontalTimelineKJ","hot","GridLoader","countryOptions","key","value","flag","text","timesList","_self","jsonView","jsonObj","self","jsonViewProps","width","mapStateToProps","state","submitSuccess","submitContent","form","fieldLevelValidation","console","log","submitSucceeded","registeredFields","onSubmit","sendingContent","loading","loadingSpinner","isLoading","LoadingReducer","mapDispatchProps","dispatch","handleLoadingSpinner","data","toggleLoading","props","previous","minEventPadding","maxEventPadding","linePadding","labelWidth","fillingMotionStiffness","fillingMotionDamping","slidingMotionStiffness","slidingMotionDamping","stylesBackground","stylesForeground","stylesOutline","isTouchEnabled","isKeyboardEnabled","isOpenEnding","isOpenBeginning","dates","contData","rawAllData","rawViewData","requestData","responseData","currentTraceid","selectedIndex","auditCount","mounted","openSendEmail","orgName","isLoading2","timeLineIndex","tasksList","currentTask","currentTaskTime","name","theme","collapsed","collapseStringsAfter","onAdd","onEdit","onDelete","displayObjectSize","enableClipboard","indentWidth","displayDataTypes","iconStyle","componentWillReceiveProps","nextProps","nextContext","dummys","dummyConts","setState","location","search","toString","includes","length","map","item","stdate","makeUTC","sttime","makeNotUTC","composit","push","setAllView","setRequestView","setResponseView","auditList","i","operName","operationname","makeOper","newTimesList","replace","makeUnixUTC","time","newTime","unix","utc","format","makeTime","sameTime","addCount","logName","lastSub","substring","lastIndexOf","onHandleIndexClick","selectedId","String","selectedDom","document","getElementById","selectChildNode","childNodes","oldSelected","getElementsByClassName","className","handleSelectedAudit","submitSendEmail","alert","close","history","undefined","sId","indexOf","dataLenght","split","JSON","parse","fontSize","fontWeight","color","height","overflow","marginTop","marginBottom","display","position","top","zIndex","date","task","index","borderWidth","borderColor","alignItems","justifyContent","outline","outline2","background","foreground","Component","SendEmailView","submitState","onClear","clearState","dimmer","open","callback","formReference"],"mappings":"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","sourcesContent":["import 'react-hot-loader'\nimport React from 'react';\nimport {Button, Dropdown, Modal} from 'semantic-ui-react';\nimport * as moment from 'moment';\nimport ReactJson from 'react-json-view';\nimport {connect} from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css'\nimport PopSendEmailView from '../container/popSendEmailView';\nimport {withRouter} from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as actions from \"../actions\";\nimport View from \"react-flexbox\";\nimport FlexBox from \"flexbox-react\";\nimport HorizontalTimelineKJ from \"../components/horizontal_timeline_kj/Components/HorizontalTimeline\";\nimport {hot} from \"react-hot-loader/root\";\nimport {GridLoader} from \"react-spinners\";\n\nconst countryOptions = [\n    {key: '24', value: '24', flag: '24', text: 'Last 24hours'},\n    {key: '18', value: '18', flag: '18', text: 'Last 18hours'},\n    {key: '12', value: '12', flag: '12', text: 'Last 12hours'},\n    {key: '6', value: '6', flag: '6', text: 'Last 6hours'},\n    {key: '1', value: '1', flag: '1', text: 'Last an hour'},\n\n]\nlet timesList = [];\nlet _self = null;\nconst jsonView = (jsonObj, self) => {\n    return <ReactJson src={jsonObj} {...self.jsonViewProps} style={{width: '100%'}}/>\n}\n\nconst mapStateToProps = (state) => {\n    let submitSuccess = false;\n    let submitContent = null;\n    if (state.form.fieldLevelValidation) {\n        console.log('20191030 redux props.. ', state.form.fieldLevelValidation)\n        if (state.form.fieldLevelValidation.submitSucceeded) {\n            submitSuccess = true;\n            submitContent = state.form.fieldLevelValidation.registeredFields;\n        }\n    }\n    return {\n        onSubmit: submitSuccess,\n        sendingContent: submitContent,\n        loading: state.loadingSpinner.loading,\n        isLoading: state.LoadingReducer.isLoading,\n    }\n\n};\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleLoadingSpinner: (data) => {\n            dispatch(actions.loadingSpinner(data))\n        },\n        toggleLoading: (data) => {\n            dispatch(actions.toggleLoading(data))\n        },\n    };\n};\n\n\ntype Props = {\n    handleLoadingSpinner: Function,\n    toggleLoading: Function,\n    history: any,\n    onSubmit: any,\n    sendingContent: any,\n    loading: boolean,\n    isLoading: boolean,\n}\n\n\nexport default hot(withRouter(connect(mapStateToProps, mapDispatchProps)(\n    class TimelineAuditViewNew extends React.Component<Props, any> {\n        state = {\n            value: 0,\n            previous: 0,\n            // timelineConfig\n            minEventPadding: 20,\n            maxEventPadding: 100,\n            linePadding: 50,\n            labelWidth: 170,\n            fillingMotionStiffness: 150,\n            fillingMotionDamping: 25,\n            slidingMotionStiffness: 150,\n            slidingMotionDamping: 25,\n            stylesBackground: 'transparent',\n            stylesForeground: '#454952',\n            stylesOutline: '#454952',\n            isTouchEnabled: true,\n            isKeyboardEnabled: true,\n            isOpenEnding: true,\n            isOpenBeginning: true,\n            dates: [],\n            contData: [],\n            rawAllData: [],\n            rawViewData: [],\n            requestData: [],\n            responseData: [],\n            currentTraceid: 'traceId',\n            selectedIndex: 0,\n            auditCount: 0,\n            mounted: false,\n            openSendEmail: false,\n            orgName: '',\n            isLoading: false,\n            isLoading2: false,\n            timesList: [],\n            timeLineIndex: 0,\n            tasksList: [],\n            currentTask: '',\n            currentTaskTime: '',\n        };\n        jsonViewProps = {\n            name: null,\n            theme: \"monokai\",\n            collapsed: false,\n            collapseStringsAfter: 15,\n            onAdd: false,\n            onEdit: false,\n            onDelete: false,\n            displayObjectSize: true,\n            enableClipboard: true,\n            indentWidth: 4,\n            displayDataTypes: false,\n            iconStyle: \"triangle\"\n        }\n\n        constructor(props: Props) {\n            super(props);\n            _self = this;\n            this.sameTime = '0';\n            this.addCount = 0;\n        }\n\n        componentWillMount(): void {\n            console.log('111.props===>', this.props);\n            if (this.props.history.location.search === 'pg=audits') {\n                this.setState({\n                    isLoading: true,\n                })\n            }\n        }\n\n        componentDidMount() {\n            if (this.props.location.state !== undefined) {\n                let orgName = this.props.location.state.orgName;\n                this.setState({\n                    orgName\n                })\n            }\n            this.setState({\n                mounted: true,\n            });\n        }\n\n        componentWillReceiveProps = async (nextProps, nextContext) => {\n\n            let dummys = [];\n            let dummyConts = [];\n            /*\"pg=audits&org=org1574180880\"\n            \"pg=audits&org=org1574180880\"*/\n            if (nextProps.data !== this.props.data) {\n\n                this.setState({\n                    timesList: [],\n                    tasksList: [],\n                    isLoading: true,\n                })\n\n                if (!nextProps.location.search.toString().includes('org=')) {\n                    await this.setState({\n                        orgName: '',\n                    })\n                }\n                if (nextProps.data.data && nextProps.data.data.length) {\n\n                    nextProps.data.data.map((item) => {\n                        let stdate = this.makeUTC(item['starttime'])\n                        let sttime = this.makeNotUTC(item['starttime'])\n                        let composit = stdate + \" \" + sttime;\n                        dummys.push(composit)\n                        dummyConts.push(item)\n                        timesList.push('timeline-dot-' + composit);\n                    })\n\n                    this.setState({\n                        dates: dummys,\n                        rawAllData: dummyConts,\n                        auditCount: nextProps.data.data.length,\n                        currentTraceid: dummyConts[this.state.selectedIndex]['traceid']\n                    })\n                    if (dummyConts[this.state.selectedIndex]) this.setAllView(dummyConts[this.state.selectedIndex], this.state.selectedIndex);\n                    if (dummyConts[this.state.selectedIndex]) this.setRequestView(dummyConts[this.state.selectedIndex], this.state.selectedIndex);\n                    if (dummyConts[this.state.selectedIndex]) this.setResponseView(dummyConts[this.state.selectedIndex], this.state.selectedIndex);\n\n                    let auditList = nextProps.data.data;\n                    let tasksList = []\n\n                    //todo: Extract only the TaskName to display at the top of the timeline.\n                    for (let i in auditList) {\n                        let operName = auditList[i].operationname;\n                        tasksList.push(this.makeOper(operName));\n                    }\n\n                    let newTimesList = []\n                    for (let i in timesList) {\n                        if (i < tasksList.length) {\n                            newTimesList.push(timesList[i].toString().replace('timeline-dot-', ''))\n                        }\n                    }\n                    await this.setState({\n                        timesList: newTimesList,//@:todo: TimesList to display above the timeline Dot\n                        tasksList: tasksList,//@:todo: 타임라인 Dot 위쪽에 표시해줄 tasksList\n                        currentTask: tasksList[0],\n                        currentTaskTime: timesList[0],\n                        isLoading: false,\n                    })\n\n                    this.props.handleLoadingSpinner(false);\n\n\n                }\n\n            }\n            //submit form\n            if (nextProps.onSubmit) {\n                console.log('20191030 send mail contents == ', nextProps.sendingContent)\n                // services.sendEmailAudit('SendMail',\n                //     {fromEmail:'support@mobiledgex.com', toEmail:'', traceId:tId, message:msg, title: title},\n                //     _self.resultReceive, _self)\n            }\n\n        };\n\n        componentWillUnmount() {\n            this.setState({mounted: false})\n        }\n\n\n        makeUnixUTC = (time) => {\n            let newTime = moment(time).unix()\n            return moment(newTime).utc().format('YYYY/MM/DD HH:mm:ss.SSS')\n        }\n        makeUTC = (time) => {\n            let newTime = moment(time).unix()\n            return moment(newTime).utc().format('YYYY/MM/DD')\n        }\n        makeNotUTC = (time) => {\n            let newTime = moment(time).unix();\n            let makeTime = moment(newTime).utc().format('HH:mm:ss:SSS');\n            if (makeTime === _self.sameTime) {\n                _self.addCount++;\n                makeTime = moment(newTime + 1000).utc().format('HH:mm:ss');\n                //makeTime = moment(newTime).utc().format('HH:mm:ss.SSS') + \"00\"+ (_self.addCount < 10)? '0'+_self.addCount : _self.addCount;\n            } else {\n                _self.addCount = 0;\n            }\n            _self.sameTime = makeTime;\n            return makeTime;\n        }\n        makeOper = (logName) => {\n            let lastSub = logName.substring(logName.lastIndexOf('/') + 1);\n            return lastSub\n        }\n\n\n        onHandleIndexClick = (value) => {\n            let selectedId = String(value.value);\n            if (!selectedId) return;\n            let selectedDom = document.getElementById(timesList[selectedId])\n            let selectChildNode = null\n            if (selectedDom) {\n                selectChildNode = selectedDom.childNodes\n                // reset style of circle\n                let oldSelected = document.getElementsByClassName('selectedCircle_timeline')\n                // if(oldSelected.length) oldSelected.map((element) => {\n                //     element.className = null;\n                // })\n                console.log('2019119 selet old..', oldSelected, \":\", [...oldSelected])\n                selectChildNode[1].className = 'selectedCircle_timeline'\n            }\n\n            _self.setAllView(_self.state.rawAllData[selectedId], selectedId)\n            _self.setRequestView(_self.state.rawAllData[selectedId], selectedId)\n            _self.setResponseView(_self.state.rawAllData[selectedId], selectedId)\n\n            if (_self.state.rawAllData[selectedId]) _self.props.handleSelectedAudit(_self.state.rawAllData[selectedId]);\n        }\n\n\n        setAllView(dummyConts, sId) {\n            if (dummyConts && dummyConts['traceid']) _self.setState({\n                rawViewData: dummyConts,\n                currentTraceid: dummyConts['traceid']\n            })\n        }\n\n        setRequestView(dummyConts, sId) {\n\n            if (dummyConts && dummyConts['request']) {\n                if (dummyConts['request'].indexOf('{') > -1) {\n                    let dataLenght = dummyConts['request'].split('{\"data\":').length;\n                    if (dataLenght > 1) {\n                        this.setState({requestData: {\"data\": dummyConts['request'].split('{\"data\":')}})\n                    } else {\n                        this.setState({requestData: JSON.parse(dummyConts['request'])})\n                    }\n                } else {\n                    this.setState({requestData: {'request': dummyConts['request']}})\n                }\n            }\n\n        }\n\n        setResponseView(dummyConts, sId) {\n\n            if (dummyConts && dummyConts['response'].indexOf('{') > -1) {\n                let dataLenght = dummyConts['response'].split('{\"data\":').length;\n                if (dataLenght > 1) {\n                    this.setState({responseData: {\"data\": dummyConts['response'].split('{\"data\":')}})\n                    //this.setState({responseData:{\"data\":\"test2222\"}})\n                } else {\n                    this.setState({responseData: JSON.parse((dummyConts['response'] !== \"\") ? dummyConts['response'] : {})})\n                }\n\n            }\n\n        }\n\n        submitSendEmail = () => {\n            alert('submit')\n        }\n        close = () => this.setState({openSendEmail: false})\n\n\n        render() {\n            const state = this.state;\n            return (\n                <div className=\"page_audit\">\n                    <div className=\"page_audit_history\">\n                        <div className=\"page_audit_history_option\">\n                            {/*@desc: ###############################.*/}\n                            {/*@desc: Display the Organizations title.*/}\n                            {/*@desc: ###############################.*/}\n                            <div style={{fontSize: 20, fontWeight: 'bold', color: 'white'}}>{this.state.orgName}</div>\n\n                            <div className=\"page_audit_history_option_period\">\n                                <Dropdown\n                                    placeholder='Custom Time Range'\n                                    fluid\n                                    search\n                                    selection\n                                    options={countryOptions}\n                                    style={{width: 200}}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"page_audit_history_timeline\">\n\n                            <div\n                                style={{\n                                    height: 160,\n                                    width: '100%',\n                                    overflow: 'auto',\n                                    marginTop: -50,\n                                    marginBottom: 100,\n                                    //backgroundColor: 'blue',\n                                    display: 'block',\n\n                                }}\n                            >\n                                {this.state.isLoading &&\n                                <FlexBox style={{position: 'absolute', top: '5%', zIndex: 9999999}}>\n                                    <CircularProgress style={{color: 'green', zIndex: 9999999, fontSize: 10}}/>\n                                </FlexBox>\n                                }\n                                {/*#######################################*/}\n                                {/*desc: Timeline Status (topLeft)        */}\n                                {/*#######################################*/}\n                              {/*  {!this.state.isLoading && <div style={{\n                                    top: -5,\n                                    color: '#f8f8f8',\n                                    borderWidth: 10,\n                                    borderColor: 'grey',\n                                    backgroundColor: 'blue',\n                                    height: 70,\n\n                                }}>\n                                    <div style={{color: 'orange'}}>{this.state.currentTask.toString()}</div>\n                                    <FlexBox style={{width: 10}}/>\n                                    <div>  {this.state.currentTaskTime.replace('timeline-dot-', '')}</div>\n                                </div>\n                                }*/}\n\n                                {/*#######################################*/}\n                                {/*desc: Timeline display part            */}\n                                {/*#######################################*/}\n                                {!this.state.isLoading && this.state.timesList.length !== 0 &&\n                                <HorizontalTimelineKJ\n                                    labelWidth={200}\n                                    //todo: 타임라인 Dot 위쪽의 라벨을 그리는 부분.\n                                    getLabel={(date, task, index) => {\n                                        return (\n                                            <View column={true}>\n                                                <div\n                                                    style={{\n                                                        height: 15,\n                                                        fontSize: 13,\n                                                        borderWidth: 1,\n                                                        borderColor: 'grey'\n                                                    }}>\n                                                    {date}\n                                                </div>\n                                                <FlexBox style={{\n                                                    fontSize: 15,\n                                                    fontWeight: '800',\n                                                    color: 'orange',\n                                                    marginTop: 5,\n                                                    marginBottom: 0,\n                                                    height: 30,\n                                                    alignItems: 'flex-end',\n                                                    justifyContent: 'center',\n                                                }}>\n                                                    {task}+ {index.toString()}\n                                                </FlexBox>\n                                            </View>\n                                        )\n                                    }}\n                                    index={this.state.timeLineIndex}\n                                    indexClick={async (timeLineIndex) => {\n                                        await this.setState({\n                                            timeLineIndex: timeLineIndex,\n                                            currentTask: this.state.tasksList[timeLineIndex],\n                                            currentTaskTime: this.state.timesList[timeLineIndex],\n                                        });\n\n                                        this.onHandleIndexClick({value: timeLineIndex, previous: this.state.value});\n                                    }}\n                                    values={this.state.timesList}\n                                    tasks={this.state.tasksList}\n                                    styles={{\n                                        outline: '#dfdfdf',\n                                        outline2: '#79BF14',\n                                        background: '#f8f8f8',\n                                        foreground: '#79BF14'\n                                    }}\n                                    linePadding={150}\n                                    /* slidingMotion={{\n                                         stiffness: 300,\n                                         damping: 30,\n                                     }}\n                                     fillingMotion={{\n                                         stiffness: 300,\n                                         damping: 30,\n                                     }}*/\n                                    isKeyboardEnabled={true}\n                                />\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"page_audit_code\">\n                        <div className=\"page_audit_code_left\">\n                            <div className=\"page_audit_code_rawviewer\">\n                                <div className=\"page_audit_code_rawviewer_title\">\n                                    Raw Viewer\n                                </div>\n                                <div className=\"page_audit_code_rawviewer_codebox\">\n                                    {(this.state.rawViewData) ? jsonView(this.state.rawViewData, this) : null}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"page_audit_code_right\">\n                            <div className=\"page_audit_code_request\">\n                                <div className=\"page_audit_code_request_title\">\n                                    Request\n                                </div>\n                                <div className=\"page_audit_code_request_codebox\">\n                                    {(this.state.requestData) ? jsonView(this.state.requestData, this) : null}\n                                </div>\n                            </div>\n                            <div className=\"page_audit_code_response\">\n                                <div className=\"page_audit_code_response_title\">\n                                    Response\n                                </div>\n                                <div className=\"page_audit_code_response_codebox\">\n                                    {(this.state.responseData) ? jsonView(this.state.responseData, this) : null}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <SendEmailView dimmer={true} open={this.state.openSendEmail} close={this.close}\n                                   callback={this.submitSendEmail}> </SendEmailView>\n                </div>\n            )\n        }\n    }\n)))\n\nclass SendEmailView extends React.Component {\n    onSubmit = () => {\n        this.setState({submitState: true})\n    }\n    onClear = () => {\n        this.setState({clearState: true})\n    }\n    state = {\n        submitState: false,\n        clearState: false\n    }\n\n    render() {\n        let {dimmer, open, close, callback} = this.props;\n        return (\n            <Modal dimmer={dimmer} open={open} onClose={close} closeIcon>\n                <Modal.Header>New Email</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <PopSendEmailView ref={form => this.formReference = form} submitState={this.state.submitState}\n                                          clearState={this.state.clearState}></PopSendEmailView>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='black' onClick={this.onClear}>\n                        Clear\n                    </Button>\n                    <Button\n                        positive\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Submit\"\n                        onClick={this.onSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}