{"ast":null,"code":"/*\n{\n            \"result\": {\n                \"fields\": [],\n                \"key\": {\n                    \"operator_key\": {\n                        \"name\": \"TDG\"\n                    },\n                    \"name\": \"bonn-niantic\"\n                },\n                \"access_uri\": \"\",\n                \"location\": {\n                    \"latitude\": 50.737,\n                    \"longitude\": 7.098,\n                    \"horizontal_accuracy\": 0,\n                    \"vertical_accuracy\": 0,\n                    \"altitude\": 0,\n                    \"course\": 0,\n                    \"speed\": 0,\n                    \"timestamp\": {\n                        \"seconds\": \"0\",\n                        \"nanos\": 0\n                    }\n                },\n                \"ip_support\": \"IpSupportDynamic\",\n                \"static_ips\": \"\",\n                \"num_dynamic_ips\": 5\n            }\n        }\n//\n\n */\nimport * as moment from 'moment';\n\nvar trimData = function trimData(datas) {\n  var newData = datas.splice(0, 1);\n  return datas;\n};\n\nvar week_kr = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\nvar week = moment().format('E');\nvar getWeek = week_kr[week - 1];\n\nvar numberDes = function numberDes(a, b) {\n  return b - a;\n};\n\nvar generateData = function generateData(datas) {\n  var result = datas;\n  var values = []; //20190409 transition string to json\n  //let toArray = result.data.split('\\n')\n\n  var toJson = result.data;\n\n  if (toJson) {\n    toJson.map(function (dataResult, i) {\n      if (dataResult.message) {} else {\n        var Index = i;\n        var Organization = dataResult.org || '-';\n        var Username = dataResult.username || '-';\n        var RoleType = dataResult.role || '-'; //let Email = dataResult.email || '-';\n\n        var newRegistKey = ['Organization', 'Username', 'Role Type'];\n        values.push({\n          Username: Username,\n          Organization: Organization,\n          'Role Type': RoleType,\n          Edit: newRegistKey\n        });\n      }\n    });\n  } else {\n    console.log('there is no result');\n  } //ascending or descending\n  //values.sort(numberDes);\n  //values.reverse();\n\n\n  return values;\n};\n\nvar retunDate = function retunDate(str) {\n  var year = str.substring(0, 4);\n  var month = str.substring(4, 6);\n  var day = str.substring(6, 8);\n  var hour = str.substring(8, 10);\n  var minute = str.substring(10, 12); //var second = str.substring(12, 14);\n\n  var date = new Date(year, month - 1, day, hour, minute);\n  return moment(date).format('hh:mm');\n};\n\nvar FormatComputeUsers = function FormatComputeUsers(props) {\n  return generateData(props);\n};\n\nexport default FormatComputeUsers;","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/services/formatter/formatComputeUsers.js"],"names":["moment","trimData","datas","newData","splice","week_kr","week","format","getWeek","numberDes","a","b","generateData","result","values","toJson","data","map","dataResult","i","message","Index","Organization","org","Username","username","RoleType","role","newRegistKey","push","Edit","console","log","retunDate","str","year","substring","month","day","hour","minute","date","Date","FormatComputeUsers","props"],"mappings":"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","sourcesContent":["/*\n{\n            \"result\": {\n                \"fields\": [],\n                \"key\": {\n                    \"operator_key\": {\n                        \"name\": \"TDG\"\n                    },\n                    \"name\": \"bonn-niantic\"\n                },\n                \"access_uri\": \"\",\n                \"location\": {\n                    \"latitude\": 50.737,\n                    \"longitude\": 7.098,\n                    \"horizontal_accuracy\": 0,\n                    \"vertical_accuracy\": 0,\n                    \"altitude\": 0,\n                    \"course\": 0,\n                    \"speed\": 0,\n                    \"timestamp\": {\n                        \"seconds\": \"0\",\n                        \"nanos\": 0\n                    }\n                },\n                \"ip_support\": \"IpSupportDynamic\",\n                \"static_ips\": \"\",\n                \"num_dynamic_ips\": 5\n            }\n        }\n//\n\n */\n\n\nimport * as moment from 'moment';\nlet trimData = (datas) => {\n    let newData = datas.splice(0,1);\n    return datas ;\n}\nconst week_kr = [\"월\",\"화\",\"수\",\"목\",\"금\",\"토\",\"일\"]\nlet week = moment().format('E');\nlet getWeek = week_kr[(week-1)];\nconst numberDes =(a,b)=> (\n    b-a\n)\n\nlet generateData = (datas) => {\n    let result = datas;\n    let values = [];\n    //20190409 transition string to json\n    //let toArray = result.data.split('\\n')\n\n    let toJson = result.data;\n\n    if(toJson){\n        toJson.map((dataResult, i) => {\n            if(dataResult.message) {\n\n            } else {\n                let Index = i;\n                let Organization = dataResult.org || '-';\n                let Username = dataResult.username || '-';\n                let RoleType = dataResult.role || '-';\n                //let Email = dataResult.email || '-';\n                let newRegistKey = ['Organization', 'Username', 'Role Type'];\n\n                values.push({Username:Username, Organization:Organization, 'Role Type':RoleType, Edit:newRegistKey})\n            }\n\n        })\n    } else {\n        console.log('there is no result')\n    }\n\n    //ascending or descending\n\n    //values.sort(numberDes);\n    //values.reverse();\n\n    return values\n\n}\nconst retunDate = (str) => {\n    var year = str.substring(0, 4);\n    var month = str.substring(4, 6);\n    var day = str.substring(6, 8);\n    var hour = str.substring(8, 10);\n    var minute = str.substring(10, 12);\n    //var second = str.substring(12, 14);\n    var date = new Date(year, month-1, day, hour, minute);\n    return moment(date).format('hh:mm');\n}\nconst FormatComputeUsers = (props) => (\n    generateData(props)\n)\n\nexport default FormatComputeUsers;\n"]},"metadata":{},"sourceType":"module"}