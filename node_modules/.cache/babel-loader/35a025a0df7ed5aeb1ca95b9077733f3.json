{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/pageDetailViewer.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Divider, Table, Grid, Header, Tab, Icon, Segment, Container } from \"semantic-ui-react\";\nimport ContainerDimensions from 'react-container-dimensions';\nimport * as moment from 'moment';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport ReactJson from 'react-json-view';\nimport * as serviceInstance from '../services/service_instance_service';\nimport * as aggregate from '../utils';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport MonitoringViewer from './monitoringViewer';\nimport CommandViewer from './commandViewer';\nimport './styles.css';\nvar ReactGridLayout = WidthProvider(RGL);\nvar pane = [{\n  menuItem: 'Details',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, detailViewer(props, 'detailViewer'));\n  }\n}];\nvar panes = [{\n  menuItem: 'Details',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, detailViewer(props, 'detailViewer'));\n  }\n}, {\n  menuItem: 'Monitoring',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(MonitoringViewer, {\n      data: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n}];\nvar panesCommand = [{\n  menuItem: 'Details',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, detailViewer(props, 'detailViewer'));\n  }\n}, {\n  menuItem: 'Monitoring',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(MonitoringViewer, {\n      data: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n}, {\n  menuItem: 'Command',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CommandViewer, {\n      data: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n}];\n\nvar detailViewer = function detailViewer(props, type) {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, type === 'detailViewer' ? React.createElement(Table, {\n    celled: true,\n    collapsing: true,\n    style: {\n      width: '100%',\n      height: '100%',\n      border: 'none',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Subject\")), React.createElement(Table.HeaderCell, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Value\")))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.data ? Object.keys(props.data).map(function (item, i) {\n    return makeTable(props.data, item, i);\n  }) : null)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nvar makeTable = function makeTable(values, label, i) {\n  return label !== 'Edit' ? React.createElement(Table.Row, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h4\",\n    image: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: 'dot',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Header.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, label == 'CloudletName' ? 'Cloudlet Name' : label == 'CloudletLocation' ? 'Cloudlet Location' : label == 'Ip_support' ? 'IP Support' : label == 'Num_dynamic_ips' ? 'Number of Dynamic IPs'\n  /* Cloudlets */\n  : label == 'ClusterName' ? 'Cluster Name' : label == 'OrganizationName' ? 'Organization Name' : label == 'IpAccess' ? 'IP Access'\n  /* Cluster Inst */\n  : label == 'Mapped_port' ? 'Mapped Port'\n  /* Cluster Inst */\n  : label == 'AppName' ? 'App Name' : label == 'ClusterInst' ? 'Cluster Instance' : label == 'Physical_name' ? 'Physical Name' : label == 'Platform_type' ? 'Platform Type' : label))), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, label === 'Ip_support' && String(values[label]) == '1' ? 'Static' : label === 'Ip_support' && String(values[label]) == '2' ? 'Dynamic'\n  /* Cloudlets */\n  : label === 'IpAccess' && String(values[label]) == '1' ? 'Dedicated' : label === 'IpAccess' && String(values[label]) == '3' ? 'Shared'\n  /* Cluster Inst */\n  : label === 'Created' ? String(makeUTC(values[label])) : label === 'State' ? _status[values[label]] : label === 'Liveness' ? _liveness[values[label]] : typeof values[label] === 'object' ? jsonView(values[label], label) : label === 'Platform_type' ? String(makePFT(values[label])) : String(values[label]))) : null;\n};\n\nvar jsonView = function jsonView(jsonObj, _label) {\n  if (_label === 'Mapped_port') {\n    jsonObj.map(function (item) {\n      if (item.proto == 1) item.proto = 'TCP';else if (item.proto == 2) item.proto = 'UDP';\n    });\n  }\n\n  return React.createElement(ReactJson, Object.assign({\n    src: jsonObj\n  }, _self.jsonViewProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};\n\nvar makeUTC = function makeUTC(time) {\n  return moment.unix(time.replace('seconds : ', '')).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n};\n\nvar makePFT = function makePFT(value) {\n  return value == 0 ? 'Fake' : value == 1 ? 'Docker in Docker' : value == 2 ? 'Openstack' : value == 3 ? 'Azure' : value == 4 ? 'GCP' : value == 5 ? 'Mobiledgex Docker in Docker' : '-';\n};\n\nvar _status = {\n  \"0\": \"Tracked State Unknown\",\n  \"1\": \"Not Present\",\n  \"2\": \"Create Requested\",\n  \"3\": \"Creating\",\n  \"4\": \"Create Error\",\n  \"5\": \"Ready\",\n  \"6\": \"Update Requested\",\n  \"7\": \"Updating\",\n  \"8\": \"Update Error\",\n  \"9\": \"Delete Requested\",\n  \"10\": \"Deleting\",\n  \"11\": \"Delete Error\",\n  \"12\": \"Delete Prepare\",\n  \"13\": \"CRM Init\"\n};\nvar _liveness = {\n  \"1\": \"Static\",\n  \"2\": \"Dynamic\"\n};\nvar layout = [{\n  \"w\": 19,\n  \"x\": 0,\n  \"y\": 0,\n  \"i\": \"0\",\n  \"minW\": 8,\n  \"moved\": false,\n  \"static\": false,\n  \"title\": \"Developer\"\n}];\nvar _self = null;\n\nvar PageDetailViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PageDetailViewer, _React$Component);\n\n  function PageDetailViewer() {\n    var _this;\n\n    _classCallCheck(this, PageDetailViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageDetailViewer).call(this));\n\n    _this.onChangeTab = function (e, data) {\n      console.log('20190923 on change tab ..data --- ', data);\n\n      if (data.activeIndex === 1 && _self.state.page) {\n        _self.getInstanceHealth(_self.state.page, _self.state.listData);\n\n        _self.props.handleLoadingSpinner(true);\n      } else {\n        _self.clearInterval();\n\n        _self.props.handleLoadingSpinner(false);\n      }\n    };\n\n    _this.getParams = function (page, data, store) {\n      return page === 'appInst' && _self.resources[page].length ? _self.resources[page].map(function (valid) {\n        return _this.makeFormApp(data, valid, store.userToken);\n      }) : page === 'cloudlet' && _self.resources[page].length ? _self.resources[page].map(function (valid) {\n        return _this.makeFormCloudlet(data, valid, store.userToken);\n      }) : _self.resources[page].map(function (valid) {\n        return _this.makeFormCluster(data, valid, store.userToken);\n      });\n    };\n\n    _this.makeFormCluster = function (inst, valid, store) {\n      return {\n        \"token\": store,\n        \"params\": {\n          \"region\": inst.Region,\n          \"clusterinst\": {\n            \"cluster_key\": {\n              \"name\": inst.ClusterName\n            },\n            \"cloudlet_key\": {\n              \"operator_key\": {\n                \"name\": inst.Operator\n              },\n              \"name\": inst.Cloudlet\n            },\n            \"developer\": inst.OrganizationName\n          },\n          \"selector\": valid,\n          \"last\": 1200\n        }\n      };\n    };\n\n    _this.getAppName = function (name) {\n      var lowerCaseName = name.toLowerCase();\n      return lowerCaseName.replace(/\\s+/g, '');\n    };\n\n    _this.makeFormApp = function (inst, valid, store) {\n      return {\n        \"token\": store,\n        \"params\": {\n          \"region\": inst.Region,\n          \"appinst\": {\n            \"app_key\": {\n              \"developer_key\": {\n                \"name\": inst.OrganizationName\n              },\n              \"name\": _this.getAppName(inst.AppName),\n              \"version\": inst.Version\n            },\n            \"cluster_inst_key\": {\n              \"cluster_key\": {\n                \"name\": inst.ClusterInst\n              },\n              \"cloudlet_key\": {\n                \"name\": inst.Cloudlet,\n                \"operator_key\": {\n                  \"name\": inst.Operator\n                }\n              }\n            }\n          },\n          \"selector\": valid,\n          \"last\": 1200\n        }\n      };\n    };\n\n    _this.makeFormCloudlet = function (inst, valid, store) {\n      return {\n        'token': store,\n        'params': {\n          \"region\": inst.Region,\n          \"cloudlet\": {\n            \"operator_key\": {\n              \"name\": inst.Operator\n            },\n            \"name\": inst.CloudletName\n          },\n          \"selector\": valid,\n          \"last\": 200\n        }\n      };\n    };\n\n    _this.handleTabChange = function (e, _ref) {\n      var activeIndex = _ref.activeIndex;\n      return _this.setState({\n        activeIndex: activeIndex\n      });\n    };\n\n    _this.makeList = function (values, label, i) {\n      return React.createElement(Grid.Row, {\n        columns: 2,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 5,\n        className: \"detail_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, label)), React.createElement(Grid.Column, {\n        width: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          wordWrap: 'break-word'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, typeof values[label] === 'object' ? JSON.stringify(values[label]) : String(values[label]))), React.createElement(Divider, {\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }));\n    };\n\n    _this.setCloudletList = function (operNm) {\n      var cl = [];\n\n      _self.state.cloudletResult[operNm].map(function (oper, i) {\n        if (i === 0) _self.setState({\n          dropdownValueThree: oper.CloudletName\n        });\n        cl.push({\n          key: i,\n          value: oper.CloudletName,\n          text: oper.CloudletName\n        });\n      });\n\n      _self.setState({\n        devOptionsThree: cl\n      });\n    };\n\n    var layout = _this.generateLayout();\n\n    _this.state = {\n      layout: layout,\n      listData: [],\n      monitorData: [],\n      selected: {},\n      open: false,\n      dimmer: '',\n      devOptionsOne: [],\n      devOptionsTwo: [],\n      devOptionsThree: [],\n      devOptionsFour: [],\n      devOptionsFive: [],\n      dropdownValueOne: '',\n      dropdownValueTwo: '',\n      dropdownValueThree: '',\n      dropdownValueFour: '',\n      dropdownValueFive: '',\n      cloudletResult: null,\n      appResult: null,\n      listOfDetail: null,\n      clusterName: null,\n      activeIndex: 0,\n      page: '',\n      user: 'AdminManager'\n    };\n    _self = _assertThisInitialized(_this);\n    _this.initData = null;\n    _this.activeInterval = null;\n    _this.jsonViewProps = {\n      name: null,\n      theme: \"monokai\",\n      collapsed: false,\n      collapseStringsAfter: 15,\n      onAdd: false,\n      onEdit: false,\n      onDelete: false,\n      displayObjectSize: false,\n      enableClipboard: true,\n      indentWidth: 4,\n      displayDataTypes: false,\n      iconStyle: \"triangle\"\n    };\n    /*\n    Valid selectors for cluster: “cpu”, “mem”, “disk”, “network”, “tcp”, “udp”\n    Valid selectors for app api: “cpu”, “mem”, “network”, \"connections\"\n     */\n\n    _this.resources = {\n      clusterInst: ['cpu', 'mem', 'disk', 'network', 'tcp', 'udp'],\n      appInst: ['cpu', 'mem', 'network', 'connections'],\n      cloudlet: ['utilization']\n    };\n    return _this;\n  }\n\n  _createClass(PageDetailViewer, [{\n    key: \"generateLayout\",\n    value: function generateLayout() {\n      return layout;\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout) {//this.props.onLayoutChange(layout);\n    }\n  }, {\n    key: \"generateDOM\",\n    value: function generateDOM(open, dimmer, data, mData, keysData, hideHeader, region, page) {\n      var _this2 = this;\n\n      var panelParams = {\n        data: data,\n        mData: mData,\n        keys: keysData,\n        page: page,\n        region: region,\n        handleLoadingSpinner: this.props.handleLoadingSpinner,\n        userrole: localStorage.selectRole\n      };\n      return layout.map(function (item, i) {\n        return i === 0 ? React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_table tabs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(Tab, Object.assign({\n          className: \"grid_tabs\",\n          menu: {\n            secondary: true,\n            pointing: true,\n            inverted: true,\n            attached: false,\n            tabular: false\n          },\n          panes: _this2.state.userRole === 'AdminManager' && page === 'appInst' ? panesCommand : (_this2.state.userRole === 'DeveloperManager' || _this2.state.userRole === 'DeveloperContributor' || _this2.state.userRole === 'DeveloperViewer') && page === 'cloudlet' ? pane : page === 'appInst' ? panesCommand : panes\n        }, panelParams, {\n          gotoUrl: _this2.gotoUrl,\n          toggleSubmit: _this2.state.toggleSubmit,\n          error: _this2.state.validateError,\n          onTabChange: _this2.onChangeTab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        })))) : React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"receiveInstanceInfo\",\n    value: function receiveInstanceInfo(result) {\n      _self.setState({\n        monitorData: result\n      });\n\n      _self.props.handleLoadingSpinner(false);\n    }\n  }, {\n    key: \"loopGetHealth\",\n    value: function loopGetHealth(page, data, store) {\n      page === 'appInst' && store.userToken ? serviceInstance.getAppinstHealth(_self.getParams(page, data, store), _self.receiveInstanceInfo) : page === 'cloudlet' && store.userToken ? serviceInstance.getCloudletHealth(_self.getParams(page, data, store), _self.receiveInstanceInfo) : serviceInstance.getClusterHealth(_self.getParams(page, data, store), _self.receiveInstanceInfo);\n    }\n  }, {\n    key: \"getInstanceHealth\",\n    value: function getInstanceHealth(page, data) {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      _self.activeInterval = setInterval(function () {\n        _self.loopGetHealth(page, data, store);\n      }, 15000);\n\n      _self.loopGetHealth(page, data, store);\n    }\n  }, {\n    key: \"clearInterval\",\n    value: function (_clearInterval) {\n      function clearInterval() {\n        return _clearInterval.apply(this, arguments);\n      }\n\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n\n      return clearInterval;\n    }(function () {\n      if (_self.activeInterval) clearInterval(_self.activeInterval);\n    })\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userRole = localStorage.getItem('selectRole');\n      this.setState({\n        userRole: localStorage.selectRole\n      });\n      this.props.handleLoadingSpinner(true);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var regKeys = [];\n      var component = null;\n      var data = [];\n\n      if (nextProps.data && !this.initData) {\n        this.setState({\n          listData: nextProps.data,\n          page: nextProps.page\n        });\n        this.initData = true;\n        this.props.handleLoadingSpinner(false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.initData = false;\n      this.clearInterval();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        open: false\n      });\n      this.clearInterval();\n      this.props.close();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          listData = _this$state.listData,\n          monitorData = _this$state.monitorData,\n          clusterName = _this$state.clusterName,\n          open = _this$state.open,\n          dimmer = _this$state.dimmer,\n          hiddenKeys = _this$state.hiddenKeys,\n          userRole = _this$state.userRole;\n      var loading = this.props.loading;\n      return React.createElement(\"div\", {\n        className: \"regis_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, this.generateDOM(open, dimmer, listData, monitorData, this.state.keysData, hiddenKeys, this.props.region, this.props.page));\n    }\n  }]);\n\n  return PageDetailViewer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var viewMode = null;\n\n  if (state.changeViewMode.mode && state.changeViewMode.mode.viewMode) {\n    viewMode = state.changeViewMode.mode.viewMode;\n  }\n\n  return {\n    viewMode: viewMode,\n    loading: state.loadingSpinner ? state.loadingSpinner.loading : null\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(PageDetailViewer);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/pageDetailViewer.js"],"names":["React","Fragment","Button","Divider","Table","Grid","Header","Tab","Icon","Segment","Container","ContainerDimensions","moment","RGL","WidthProvider","ReactJson","serviceInstance","aggregate","connect","actions","MonitoringViewer","CommandViewer","ReactGridLayout","pane","menuItem","render","props","detailViewer","panes","panesCommand","type","width","height","border","display","flexDirection","justifyContent","data","Object","keys","map","item","i","makeTable","values","label","String","makeUTC","_status","_liveness","jsonView","makePFT","jsonObj","_label","proto","_self","jsonViewProps","time","unix","replace","utc","format","value","layout","PageDetailViewer","onChangeTab","e","console","log","activeIndex","state","page","getInstanceHealth","listData","handleLoadingSpinner","clearInterval","getParams","store","resources","length","valid","makeFormApp","userToken","makeFormCloudlet","makeFormCluster","inst","Region","ClusterName","Operator","Cloudlet","OrganizationName","getAppName","name","lowerCaseName","toLowerCase","AppName","Version","ClusterInst","CloudletName","handleTabChange","setState","makeList","wordWrap","JSON","stringify","setCloudletList","operNm","cl","cloudletResult","oper","dropdownValueThree","push","key","text","devOptionsThree","generateLayout","monitorData","selected","open","dimmer","devOptionsOne","devOptionsTwo","devOptionsFour","devOptionsFive","dropdownValueOne","dropdownValueTwo","dropdownValueFour","dropdownValueFive","appResult","listOfDetail","clusterName","user","initData","activeInterval","theme","collapsed","collapseStringsAfter","onAdd","onEdit","onDelete","displayObjectSize","enableClipboard","indentWidth","displayDataTypes","iconStyle","clusterInst","appInst","cloudlet","mData","keysData","hideHeader","region","panelParams","userrole","localStorage","selectRole","secondary","pointing","inverted","attached","tabular","userRole","gotoUrl","toggleSubmit","validateError","result","getAppinstHealth","receiveInstanceInfo","getCloudletHealth","getClusterHealth","PROJECT_INIT","parse","setInterval","loopGetHealth","getItem","nextProps","nextContext","regKeys","component","close","hiddenKeys","loading","generateDOM","Component","mapStateToProps","viewMode","changeViewMode","mode","loadingSpinner","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {Button, Divider, Table, Grid, Header, Tab, Icon, Segment, Container} from \"semantic-ui-react\";\nimport ContainerDimensions from 'react-container-dimensions';\nimport * as moment from 'moment';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport ReactJson from 'react-json-view'\nimport * as serviceInstance from '../services/service_instance_service';\nimport * as aggregate from '../utils';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport MonitoringViewer from './monitoringViewer';\nimport CommandViewer from './commandViewer';\nimport './styles.css';\n\nconst ReactGridLayout = WidthProvider(RGL);\nconst pane = [\n    { menuItem: 'Details', render: (props) => <Tab.Pane>{detailViewer(props, 'detailViewer')}</Tab.Pane> }\n]\nconst panes = [\n    { menuItem: 'Details', render: (props) => <Tab.Pane>{detailViewer(props, 'detailViewer')}</Tab.Pane> },\n    { menuItem: 'Monitoring', render: (props) => <Tab.Pane><MonitoringViewer data={props}/></Tab.Pane> }\n]\nconst panesCommand = [\n    { menuItem: 'Details', render: (props) => <Tab.Pane>{detailViewer(props, 'detailViewer')}</Tab.Pane> },\n    { menuItem: 'Monitoring', render: (props) => <Tab.Pane><MonitoringViewer data={props}/></Tab.Pane> },\n    { menuItem: 'Command', render: (props) => <Tab.Pane><CommandViewer data={props}/></Tab.Pane> }\n]\nconst detailViewer = (props, type) => (\n    <Fragment>\n        {(type === 'detailViewer')?\n            <Table celled collapsing style={{width:'100%', height:'100%', border:'none', display:'flex', flexDirection:'column'}}>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width={6}><div style={{display:'flex', justifyContent:'center'}}>Subject</div></Table.HeaderCell>\n                        <Table.HeaderCell width={10}><div style={{display:'flex', justifyContent:'center'}}>Value</div></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {\n                        props.data ? Object.keys(props.data).map((item, i) => makeTable(props.data, item, i)) : null\n                    }\n                </Table.Body>\n            </Table>\n\n            :\n            <div></div>\n        }\n\n    </Fragment>\n)\n\nconst makeTable = (values, label, i) => (\n    (label !== 'Edit')?\n        <Table.Row key={i}>\n            <Table.Cell>\n                <Header as='h4' image>\n                    <Icon name={'dot'} />\n                    <Header.Content>\n                        {(label == 'CloudletName')?'Cloudlet Name'\n                            :(label == 'CloudletLocation')?'Cloudlet Location'\n                                :(label == 'Ip_support')?'IP Support'\n                                    :(label == 'Num_dynamic_ips')?'Number of Dynamic IPs' /* Cloudlets */\n                                        :(label == 'ClusterName')?'Cluster Name'\n                                            :(label == 'OrganizationName')?'Organization Name'\n                                                :(label == 'IpAccess')?'IP Access' /* Cluster Inst */\n                                                    :(label == 'Mapped_port')?'Mapped Port' /* Cluster Inst */\n                                                        :(label == 'AppName')?'App Name'\n                                                            :(label == 'ClusterInst')?'Cluster Instance'\n                                                                :(label == 'Physical_name')?'Physical Name'\n                                                                    :(label == 'Platform_type')?'Platform Type'\n                                                                        :label}\n                    </Header.Content>\n                </Header>\n            </Table.Cell>\n            <Table.Cell>\n                {(label === 'Ip_support' && String(values[label]) == '1')?'Static'\n                    :(label === 'Ip_support' && String(values[label]) == '2')?'Dynamic' /* Cloudlets */\n                        :(label === 'IpAccess' && String(values[label]) == '1')?'Dedicated'\n                            :(label === 'IpAccess' && String(values[label]) == '3')?'Shared' /* Cluster Inst */\n                                :(label === 'Created')? String( makeUTC(values[label]) )\n                                    :(label === 'State')? _status[values[label]]\n                                        :(label === 'Liveness')? _liveness[values[label]]\n                                            :(typeof values[label] === 'object')? jsonView(values[label],label)\n                                                :(label === 'Platform_type')? String( makePFT(values[label]) )\n                                                    :String(values[label])}\n            </Table.Cell>\n        </Table.Row> : null\n)\nconst jsonView = (jsonObj,_label) => {\n    if(_label === 'Mapped_port'){\n        jsonObj.map((item) => {\n            if(item.proto == 1) item.proto = 'TCP'\n            else if(item.proto == 2) item.proto = 'UDP'\n        })\n    }\n    return <ReactJson src={jsonObj} {..._self.jsonViewProps} />\n}\n\nconst makeUTC = (time) => (\n    moment.unix( time.replace('seconds : ', '') ).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC'\n)\n\nconst makePFT = (value) => (\n    (value == 0)? 'Fake':\n    (value == 1)? 'Docker in Docker':\n    (value == 2)? 'Openstack':\n    (value == 3)? 'Azure':\n    (value == 4)? 'GCP':\n    (value == 5)? 'Mobiledgex Docker in Docker': '-'\n)\n\nconst _status = {\n    \"0\" : \"Tracked State Unknown\",\n    \"1\" : \"Not Present\",\n    \"2\" : \"Create Requested\",\n    \"3\" : \"Creating\",\n    \"4\" : \"Create Error\",\n    \"5\" : \"Ready\",\n    \"6\" : \"Update Requested\",\n    \"7\" : \"Updating\",\n    \"8\" : \"Update Error\",\n    \"9\" : \"Delete Requested\",\n    \"10\" : \"Deleting\",\n    \"11\" : \"Delete Error\",\n    \"12\" : \"Delete Prepare\",\n    \"13\" : \"CRM Init\"\n}\nconst _liveness = {\n    \"1\" : \"Static\",\n    \"2\" : \"Dynamic\"\n}\nvar layout = [\n    {\"w\":19,\"x\":0,\"y\":0,\"i\":\"0\", \"minW\":8, \"moved\":false,\"static\":false, \"title\":\"Developer\"}\n]\nlet _self = null;\nclass PageDetailViewer extends React.Component {\n    constructor() {\n        super();\n        const layout = this.generateLayout();\n        this.state = {\n            layout,\n            listData:[],\n            monitorData:[],\n            selected:{},\n            open:false,\n            dimmer:'',\n            devOptionsOne:[],\n            devOptionsTwo:[],\n            devOptionsThree:[],\n            devOptionsFour:[],\n            devOptionsFive:[],\n            dropdownValueOne:'',\n            dropdownValueTwo:'',\n            dropdownValueThree:'',\n            dropdownValueFour:'',\n            dropdownValueFive:'',\n            cloudletResult:null,\n            appResult:null,\n            listOfDetail:null,\n            clusterName:null,\n            activeIndex:0,\n            page:'',\n            user:'AdminManager'\n        }\n        _self = this;\n        this.initData = null;\n        this.activeInterval = null;\n\n        this.jsonViewProps = {\n            name:null,\n            theme: \"monokai\",\n            collapsed: false,\n            collapseStringsAfter: 15,\n            onAdd: false,\n            onEdit: false,\n            onDelete: false,\n            displayObjectSize: false,\n            enableClipboard: true,\n            indentWidth: 4,\n            displayDataTypes: false,\n            iconStyle: \"triangle\"\n        }\n        /*\n        Valid selectors for cluster: “cpu”, “mem”, “disk”, “network”, “tcp”, “udp”\n        Valid selectors for app api: “cpu”, “mem”, “network”, \"connections\"\n         */\n        this.resources = {\n            clusterInst:['cpu', 'mem', 'disk', 'network', 'tcp', 'udp'],\n            appInst:['cpu', 'mem', 'network','connections'],\n            cloudlet:['utilization']\n        }\n\n    }\n    generateLayout() {\n\n        return layout\n    }\n    onLayoutChange(layout) {\n        //this.props.onLayoutChange(layout);\n    }\n    onChangeTab = (e, data) => {\n        console.log('20190923 on change tab ..data --- ',data)\n        if(data.activeIndex === 1 && _self.state.page) {\n            _self.getInstanceHealth(_self.state.page, _self.state.listData)\n            _self.props.handleLoadingSpinner(true);\n        } else {\n            _self.clearInterval();\n            _self.props.handleLoadingSpinner(false)\n        }\n    }\n    generateDOM(open, dimmer, data, mData, keysData, hideHeader, region, page) {\n\n        let panelParams = {data:data, mData:mData, keys:keysData, page:page, region:region, handleLoadingSpinner:this.props.handleLoadingSpinner, userrole:localStorage.selectRole}\n        return layout.map((item, i) => (\n\n            (i === 0)?\n                <div className=\"round_panel\" key={i} >\n\n                    <div className=\"grid_table tabs\">\n                        <Tab className=\"grid_tabs\" menu={{ secondary: true, pointing: true, inverted: true, attached: false, tabular: false }}\n                             panes={(this.state.userRole === 'AdminManager' && page === 'appInst')?panesCommand:((this.state.userRole === 'DeveloperManager' || this.state.userRole === 'DeveloperContributor' || this.state.userRole === 'DeveloperViewer') && page === 'cloudlet')?pane:(page === 'appInst')?panesCommand:panes}{...panelParams}\n                             gotoUrl={this.gotoUrl} toggleSubmit={this.state.toggleSubmit} error={this.state.validateError} onTabChange={this.onChangeTab}/>\n                    </div>\n                </div>\n                :\n                <div className=\"round_panel\" key={i} >\n\n                </div>\n\n\n        ))\n    }\n    receiveInstanceInfo(result) {\n        _self.setState({monitorData:result})\n        _self.props.handleLoadingSpinner(false)\n    }\n    getParams = (page, data, store) => (\n        (page === 'appInst' && _self.resources[page].length)?\n            _self.resources[page].map((valid) => this.makeFormApp(data, valid, store.userToken)) :\n            (page === 'cloudlet' && _self.resources[page].length)?\n                _self.resources[page].map((valid) => this.makeFormCloudlet(data, valid, store.userToken)) :\n            _self.resources[page].map((valid) => this.makeFormCluster(data, valid, store.userToken))\n    )\n    loopGetHealth (page, data, store) {\n        (page === 'appInst' && store.userToken)  ?\n            serviceInstance.getAppinstHealth( _self.getParams(page, data, store), _self.receiveInstanceInfo) :\n        (page === 'cloudlet' && store.userToken)  ?\n            serviceInstance.getCloudletHealth( _self.getParams(page, data, store), _self.receiveInstanceInfo) :\n        serviceInstance.getClusterHealth( _self.getParams(page, data, store), _self.receiveInstanceInfo)\n    }\n\n    getInstanceHealth (page, data) {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n        _self.activeInterval = setInterval(\n            () => {\n                _self.loopGetHealth(page, data, store);\n\n            },\n            15000\n        )\n        _self.loopGetHealth(page, data, store);\n    }\n\n    clearInterval() {\n        if(_self.activeInterval) clearInterval(_self.activeInterval);\n    }\n\n\n    makeFormCluster = (inst, valid, store) => (\n        {\n            \"token\":store,\n            \"params\":{\n                \"region\":inst.Region,\n                \"clusterinst\":{\n                    \"cluster_key\":{\"name\":inst.ClusterName},\n                    \"cloudlet_key\":{\n                        \"operator_key\":{\"name\":inst.Operator},\n                        \"name\":inst.Cloudlet\n                    },\n                    \"developer\":inst.OrganizationName\n                },\n                \"selector\":valid,\n                \"last\":1200\n\n            }\n\n        }\n    )\n\n\n\n\n    getAppName = (name) => {\n        let lowerCaseName = name.toLowerCase()\n        return lowerCaseName.replace(/\\s+/g, '');\n    }\n    makeFormApp = (inst, valid, store) => (\n        {\n            \"token\":store,\n            \"params\":{\n                \"region\":inst.Region,\n                \"appinst\":{\n                    \"app_key\":{\n                        \"developer_key\":{\"name\":inst.OrganizationName},\n                        \"name\":this.getAppName(inst.AppName),\n                        \"version\":inst.Version\n                    },\n                    \"cluster_inst_key\":{\n                        \"cluster_key\":{\"name\":inst.ClusterInst},\n                        \"cloudlet_key\":{\n                            \"name\":inst.Cloudlet,\n                            \"operator_key\":{\"name\":inst.Operator}\n                        }\n                    }\n                },\n                \"selector\":valid,\n                \"last\":1200\n            }\n        }\n    )\n\n\n\n    /*\n    http --verify=false --auth-type=jwt --auth=$SUPERPASS POST\n    https://mc-stage.mobiledgex.net:9900/api/v1/auth/metrics/cloudlet <<<\n    '{\"region\":\"EU\",\n        \"cloudlet\":{\n            \"operator_key\":{\"name\":\"TDG\"},\n            \"name\":\"frankfurt-eu\"\n        },\n        \"selector\":\"utilization\",\n        \"last\":2\n    }'\n    */\n    makeFormCloudlet =(inst, valid, store) => (\n        {\n            'token':store,\n            'params':{\n                \"region\":inst.Region,\n                \"cloudlet\":{\n                    \"operator_key\":{\"name\":inst.Operator},\n                    \"name\":inst.CloudletName\n                },\n                \"selector\":valid,\n                \"last\":200\n            }\n        }\n\n    )\n\n    componentDidMount() {\n        let userRole = localStorage.getItem('selectRole');\n        this.setState({userRole:localStorage.selectRole})\n        this.props.handleLoadingSpinner(true)\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n\n            let regKeys = [];\n            let component = null;\n            let data = [];\n            if(nextProps.data && !this.initData){\n                this.setState({listData:nextProps.data, page:nextProps.page})\n                this.initData = true;\n                this.props.handleLoadingSpinner(false)\n            }\n\n    }\n    componentWillUnmount() {\n        this.initData = false;\n        this.clearInterval();\n    }\n\n    handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex })\n    makeList = (values, label, i) => (\n        <Grid.Row columns={2} key={i}>\n            <Grid.Column width={5} className='detail_item'>\n                <div>{label}</div>\n            </Grid.Column>\n            <Grid.Column width={11}>\n                <div style={{wordWrap: 'break-word'}}>{(typeof values[label] === 'object')? JSON.stringify(values[label]):String(values[label])}</div>\n            </Grid.Column>\n            <Divider vertical></Divider>\n        </Grid.Row>\n    )\n\n\n    setCloudletList = (operNm) => {\n        let cl = [];\n        _self.state.cloudletResult[operNm].map((oper, i) => {\n            if(i === 0) _self.setState({dropdownValueThree: oper.CloudletName})\n            cl.push({ key: i, value: oper.CloudletName, text: oper.CloudletName })\n        })\n\n        _self.setState({devOptionsThree: cl})\n    }\n\n\n\n    close() {\n        this.setState({ open: false })\n        this.clearInterval();\n        this.props.close()\n    }\n\n\n\n\n    render() {\n        let { listData, monitorData, clusterName, open, dimmer, hiddenKeys, userRole } = this.state;\n        let { loading } = this.props;\n        return (\n            <div className=\"regis_container\">\n                {this.generateDOM(open, dimmer, listData, monitorData, this.state.keysData, hiddenKeys, this.props.region, this.props.page)}\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let viewMode = null;\n    if (state.changeViewMode.mode && state.changeViewMode.mode.viewMode) {\n        viewMode = state.changeViewMode.mode.viewMode;\n    }\n    return {\n        viewMode:viewMode,\n        loading:(state.loadingSpinner)?state.loadingSpinner.loading:null\n    }\n}\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))}\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(PageDetailViewer);\n"]},"metadata":{},"sourceType":"module"}