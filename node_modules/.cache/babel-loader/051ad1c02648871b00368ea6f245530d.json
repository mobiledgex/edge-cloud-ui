{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/monitoringViewer.js\";\nimport React from 'react';\nimport { Grid, Header, Segment, Container } from \"semantic-ui-react\";\nimport TimeSeries from '../charts/plotly/timeseries';\nimport EnvironmentStatus from '../container/envrmentStatus';\nimport UsageMaxColumn from '../charts/plotly/usageMaxColumn'; //import MethodCallChart from \"../charts/plotly/methodCallChart\";\n\nimport * as d3 from 'd3';\nimport './styles.css';\nvar formatInt = d3.format(\".0f\");\nvar formatComma = d3.format(\",\");\nvar formatFloat = d3.format(\".2f\");\nvar formatPercent = d3.format(\".1f\", \".1f\");\n\nvar MonitoringViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MonitoringViewer, _React$Component);\n\n  function MonitoringViewer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MonitoringViewer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MonitoringViewer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mProp: {\n        timeseriesDataCPUMEM: [[], []],\n        timeseriesDataCPU: [[], []],\n        timeseriesDataMEM: [[], []],\n        timeseriesDataCPUUSE: [[], []],\n        timeseriesCPUMEM: [[]],\n        timeseriesDataNET: [[], []],\n        timeseriesNET: [[]],\n        timeseriesDataDISK: [[]],\n        timeseriesDISK: [[]],\n        timeseriesDataTCP: [[], []],\n        timeseriesTCP: [[]],\n        timeseriesDataUDP: [[], [], []],\n        timeseriesUDP: [[]],\n        timeseriesDataACCEPTS: [[]],\n        timeseriesDataACTIVE: [[]],\n        timeseriesDataHANDLED: [[]],\n        timeseriesDataCONNECT: [[]],\n        timeseriesDataIpv4: [[], []],\n        timeseriesIpv4: [[], []],\n        timeseriesACCEPTS: [[]],\n        dataLabel: ['CPU', 'MEM'],\n        dataLabelNET: ['RCV', 'SND'],\n        dataLabelDISK: ['DISK'],\n        dataLabelCONN: [''],\n        dataLabelTCP: ['RCV', 'SND'],\n        dataLabelUDP: ['RCV', 'SND', 'ERROR']\n      },\n      lastCPU: 0,\n      lastMEM: 0,\n      lastDISK: 0,\n      lastNET: [0, 0],\n      lastUDP: [0, 0],\n      lastTCP: [0, 0],\n      maxCPU: 0,\n      maxMEM: 0,\n      maxDISK: 0,\n      lastIPv4: 0,\n      lastFloatingIPs: 0,\n      maxIPv4: 0,\n      maxFloatingIPs: 0,\n      data: []\n    };\n    _this.cpuCnt = 0;\n    _this.memCnt = 0;\n    _this.netCnt = 0;\n    _this.diskCnt = 0;\n    _this.tcpCnt = 0;\n    _this.udpCnt = 0;\n    _this.conCnt = 0;\n    _this.ipv4Cnt = 0;\n    _this.floipCnt = 0;\n\n    _this.bytesToString = function (bytes, inst) {\n      //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n      // One way to write it, not the prettiest way to write it.\n      var fmt = d3.format('.2f');\n\n      if (bytes < 1000) {\n        return fmt(bytes) + ' B';\n      } else if (bytes < 1000 * 1000) {\n        return fmt(bytes / 1000) + ' kB';\n      } else if (bytes < 1000 * 1000 * 1000) {\n        return fmt(bytes / 1000 / 1000) + ' MB';\n      } else {\n        return fmt(bytes / 1000 / 1000 / 1000) + ' GB';\n      }\n    };\n\n    _this.datasToString = function (datas, inst) {\n      //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n      // One way to write it, not the prettiest way to write it.\n      var fmt = d3.format('.2f');\n\n      if (datas < 1000) {\n        return fmt(datas) + '';\n      } else if (datas < 1000 * 1000) {\n        return fmt(datas / 1000) + 'K';\n      } else if (datas < 1000 * 1000 * 1000) {\n        return fmt(datas / 1000 / 1000) + 'M';\n      } else {\n        return fmt(datas / 1000 / 1000 / 1000) + 'G';\n      }\n    };\n\n    _this.bytesToPercent = function (bytes, inst) {\n      //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n      // One way to write it, not the prettiest way to write it.\n      var fmt = d3.format('.2f');\n      return bytes + ' %';\n    };\n\n    _this.gigabytesToString = function (bytes, inst) {\n      console.log(\"20190812 bytes..\", bytes, \":\", inst); // One way to write it, not the prettiest way to write it.\n\n      var p = d3.precisionFixed(1),\n          fmt = d3.format(\".\" + p + \"f\");\n\n      if (bytes < 1000) {\n        return fmt(bytes) + ' B';\n      } else if (bytes < 1000 * 1000) {\n        return fmt(bytes / 1000) + ' KB';\n      } else if (bytes < 1000 * 1000 * 1000) {\n        return fmt(bytes / 1000 / 1000) + ' MB';\n      } else {\n        return fmt(bytes / 1000 / 1000 / 1000) + ' GB';\n      }\n    };\n\n    _this.makeChartContainer = function (title, lastValue, maxValue, unit, type) {\n      return React.createElement(Segment, {\n        className: \"childPercentage cloudlet_monitoring\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, title ? title : 'No Title'), _this.props.data.page === 'cloudlet' ? React.createElement(Container, {\n        className: \"cloudlet_monitoring_charts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_gauge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(EnvironmentStatus, {\n        data: [lastValue, maxValue],\n        type: unit,\n        title: \"USED\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_max_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"MAX\"), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_max_value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_max_value_number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, _this.props.data.page === 'cloudlet' ? type === 'CPU' || type === 'IPv4' || type === 'floatingIPs' ? maxValue : maxValue / 1000 : null), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_max_value_unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, _this.props.data.page === 'cloudlet' ? unit : null))), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_used\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_used_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"USED\"), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_used_value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_used_value_number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, _this.props.data.page !== 'appInst' && _this.props.data.page !== 'cloudlet' ? lastValue : type === 'CPU' || type === 'IPv4' || type === 'floatingIPs' ? lastValue : lastValue / 1000), React.createElement(\"div\", {\n        className: \"cloudlet_monitoring_charts_counting_used_value_unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, _this.props.data.page !== 'appInst' && _this.props.data.page !== 'cloudlet' ? '%' : unit))))) : type === 'CPU' ? React.createElement(Container, {\n        className: \"cpu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, _this.state.lastCPU + (_this.props.data.page === 'cloudlet' ? 'Count' : ' %')) : type === 'DISK' ? React.createElement(Container, {\n        className: \"disk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, _this.props.data.page === 'clusterInst' ? _this.bytesToPercent(_this.state.lastDISK) : _this.bytesToString(_this.state.lastDISK)) : React.createElement(Container, {\n        className: \"memory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, _this.props.data.page === 'clusterInst' ? _this.bytesToPercent(_this.state.lastMEM) : _this.bytesToString(_this.state.lastMEM)));\n    };\n\n    return _this;\n  }\n\n  _createClass(MonitoringViewer, [{\n    key: \"setTimeseriesDataCPUMEM\",\n    value: function setTimeseriesDataCPUMEM(label, values, page) {\n      if (label === 'cpu') {\n        this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt] = formatFloat(values['cmsn']);\n        this.state.mProp['timeseriesCPUMEM'][0][this.cpuCnt] = values['time'];\n        this.cpuCnt++;\n      }\n\n      if (label === 'mem') {\n        this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt] = values['cmsn'];\n        this.memCnt++;\n      }\n\n      if (label === 'disk') {\n        this.state.mProp['timeseriesDataDISK'][0][this.diskCnt] = formatFloat(values['cmsn']);\n        this.state.mProp['timeseriesDISK'][0][this.diskCnt] = values['time'];\n        this.diskCnt++;\n      }\n\n      if (label === 'network') {\n        this.state.mProp['timeseriesDataNET'][0][this.netCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataNET'][1][this.netCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesNET'][0][this.netCnt] = values['time'];\n        this.netCnt++;\n      }\n\n      if (label === 'tcp') {\n        this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesTCP'][0][this.tcpCnt] = values['time'];\n        this.tcpCnt++;\n      }\n\n      if (label === 'udp') {\n        this.state.mProp['timeseriesDataUDP'][0][this.udpCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataUDP'][1][this.udpCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesDataUDP'][2][this.udpCnt] = values['cmsn'][2];\n        this.state.mProp['timeseriesUDP'][0][this.udpCnt] = values['time'];\n        this.udpCnt++;\n      }\n\n      if (label === 'connections') {\n        this.state.mProp['timeseriesDataACCEPTS'][0][this.connCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataACTIVE'][0][this.connCnt] = values['cmsn'][2];\n        this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataHANDLED'][0][this.connCnt] = values['cmsn'][7];\n        this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n        this.connCnt++;\n      }\n\n      this.setState({\n        props: this.state.mProp\n      });\n      this.setState({\n        lastDISK: this.state.mProp['timeseriesDataDISK'][0][0]\n      });\n      this.setState({\n        lastTCP: [this.state.mProp['timeseriesDataTCP'][0][0], this.state.mProp['timeseriesDataTCP'][1][0]]\n      });\n      this.setState({\n        lastUDP: [this.state.mProp['timeseriesDataUDP'][0][0], this.state.mProp['timeseriesDataUDP'][1][0]]\n      });\n\n      if (page === 'clusterInst') {\n        this.setState({\n          lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][0]\n        });\n        this.setState({\n          lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][0]\n        });\n        this.setState({\n          lastNET: [this.state.mProp['timeseriesDataNET'][0][0], this.state.mProp['timeseriesDataNET'][1][0]]\n        });\n      } else {\n        this.setState({\n          lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt - 1]\n        });\n        this.setState({\n          lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt - 1]\n        });\n        this.setState({\n          lastNET: [this.state.mProp['timeseriesDataNET'][0][this.netCnt - 1], this.state.mProp['timeseriesDataNET'][1][this.netCnt - 1]]\n        });\n      }\n    }\n  }, {\n    key: \"feedData\",\n    value: function feedData(data, page) {\n      var _this2 = this;\n\n      this.cpuCnt = 0;\n      this.memCnt = 0;\n      this.diskCnt = 0;\n      this.netCnt = 0;\n      this.tcpCnt = 0;\n      this.udpCnt = 0;\n      this.connCnt = 0;\n      console.log('20191206 feedData-- ', data);\n\n      if (data && data.mData.length) {\n        data.mData.map(function (item) {\n          if (item.name.indexOf('cpu') > -1) {\n            _this2.setTimeseriesDataCPUMEM('cpu', item['values'], page);\n          } else if (item.name.indexOf('mem') > -1) {\n            _this2.setTimeseriesDataCPUMEM('mem', item['values'], page);\n          } else if (item.name.indexOf('disk') > -1) {\n            _this2.setTimeseriesDataCPUMEM('disk', item['values'], page);\n          } else if (item.name.indexOf('network') > -1) {\n            _this2.setTimeseriesDataCPUMEM('network', item['values'], page);\n          } else if (item.name.indexOf('tcp') > -1) {\n            _this2.setTimeseriesDataCPUMEM('tcp', item['values'], page);\n          } else if (item.name.indexOf('udp') > -1) {\n            _this2.setTimeseriesDataCPUMEM('udp', item['values'], page);\n          } else if (item.name.indexOf('accepts') > -1) {\n            _this2.setTimeseriesDataCPUMEM('accepts', item['values'], page);\n          } else if (item.name.indexOf('connections') > -1) {\n            _this2.setTimeseriesDataCPUMEM('connections', item['values'], page);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"feedDataCloudlet\",\n    value: function feedDataCloudlet(data) {\n      var _this3 = this;\n\n      this.cpuCnt = 0;\n      this.memCnt = 0;\n      this.diskCnt = 0;\n      this.netCnt = 0;\n      this.tcpCnt = 0;\n      this.udpCnt = 0;\n      this.ipv4Cnt = 0;\n      this.floipCnt = 0;\n      console.log('20191007 feedData-- ', data);\n\n      if (data && data.length) {\n        var datas = Object.assign(data[0].values['cmsn'], data[1].values['cmsn']);\n        this.setState({\n          lastCPU: datas['vCpuUsed']\n        });\n        this.setState({\n          lastMEM: datas['memUsed']\n        });\n        this.setState({\n          lastDISK: datas['diskUsed']\n        });\n        this.setState({\n          lastIPv4: datas['ipv4Used']\n        });\n        this.setState({\n          lastFloatingIPs: datas['floatingIpsUsed']\n        });\n        this.setState({\n          maxCPU: datas['vCpuMax']\n        });\n        this.setState({\n          maxMEM: datas['memMax']\n        });\n        this.setState({\n          maxDISK: datas['diskMax']\n        });\n        this.setState({\n          maxIPv4: datas['ipv4Max']\n        });\n        this.setState({\n          maxFloatingIPs: datas['floatingIpsMax']\n        });\n      }\n\n      if (data.length) {\n        data.map(function (val) {\n          if (val.values['cmsn']['vCpuUsed']) {\n            _this3.state.mProp['timeseriesDataCPUMEM'][0][_this3.cpuCnt] = parseFloat(val.values['cmsn']['vCpuUsed']).toFixed(2);\n            _this3.state.mProp['timeseriesDataCPU'][0][_this3.cpuCnt] = parseFloat(val.values['cmsn']['vCpuUsed']).toFixed(2);\n            _this3.state.mProp['timeseriesCPUMEM'][0][_this3.cpuCnt] = val.values['time'];\n            _this3.cpuCnt++;\n          }\n\n          if (val.values['cmsn']['vCpuMax']) {\n            _this3.state.mProp['timeseriesDataCPU'][1][_this3.cpuCnt] = parseFloat(val.values['cmsn']['vCpuMax']).toFixed(2);\n          }\n\n          if (val.values['cmsn']['memUsed']) {\n            _this3.state.mProp['timeseriesDataCPUMEM'][1][_this3.memCnt] = val.values['cmsn']['memUsed'];\n            _this3.state.mProp['timeseriesDataMEM'][0][_this3.memCnt] = val.values['cmsn']['memUsed'];\n            _this3.memCnt++;\n          }\n\n          if (val.values['cmsn']['diskUsed']) {\n            _this3.state.mProp['timeseriesDataDISK'][0][_this3.diskCnt] = _this3.gigabytesToString(val.values['cmsn']['diskUsed']);\n            _this3.state.mProp['timeseriesDISK'][0][_this3.diskCnt] = val.values['time'];\n            _this3.diskCnt++;\n          }\n\n          if (val.values['cmsn']['ipv4Used']) {\n            _this3.state.mProp['timeseriesDataIpv4'][0][_this3.ipv4Cnt] = _this3.gigabytesToString(val.values['cmsn']['ipv4Used']);\n            _this3.state.mProp['timeseriesIpv4'][0][_this3.ipv4Cnt] = val.values['time'];\n            _this3.ipv4Cnt++;\n          }\n        });\n      }\n\n      this.setState({\n        props: this.state.mProp\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data) {\n        this.setState({\n          data: this.props.data\n        });\n        this.feedData(this.props.data);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.data.page === 'cloudlet' && nextProps.data.mData.length) {\n        this.feedDataCloudlet(nextProps.data.mData);\n      } else {\n        this.feedData(nextProps.data, nextProps.data.page);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid.Row, {\n        className: \"monitoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapperPercentage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, this.makeChartContainer(this.props.data.page === 'cloudlet' ? \"vCPUs\" : \"CPU\", this.state.lastCPU, this.state.maxCPU, ' Count', 'CPU'), this.makeChartContainer('MEMORY', this.state.lastMEM, this.state.maxMEM, ' GBs', 'MEM'), this.props.data.page !== 'appInst' ? this.makeChartContainer('DISK', this.state.lastDISK, this.state.maxDISK, this.props.data.page === 'cloudlet' ? 'TBs' : ' GBs', 'DISK') : null, this.props.data.page === 'cloudlet' ? this.makeChartContainer('Extrnal IPs', this.state.lastIPv4, this.state.maxIPv4, ' IPs', 'IPv4') : null, this.props.data.page === 'cloudlet' ? this.makeChartContainer('Floating IPs', this.state.lastFloatingIPs, this.state.maxFloatingIPs, ' IPS', 'floatingIPs') : null, this.props.data.page !== 'cloudlet' ? React.createElement(Segment, {\n        className: \"childPercentage\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"NETWORK\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"network_rcv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, this.props.data.page === 'clusterInst' ? 'Received' : 'RCV'), this.bytesToString(this.state.lastNET[0] / 1000)), React.createElement(Container, {\n        className: \"network_snd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, this.props.data.page === 'clusterInst' ? 'Sent' : 'SND'), this.bytesToString(this.state.lastNET[1] / 1000)))) : null, this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet' ? React.createElement(Segment, {\n        className: \"childPercentage\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"TCP\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"tcp_tcpretrans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \"Retransmissions\"), this.state.lastTCP[0] !== null ? this.state.lastTCP[0] : 0), React.createElement(Container, {\n        className: \"tcp_connsest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Established Connections\"), this.state.lastTCP[1] !== null ? this.state.lastTCP[1] : 0))) : null, this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet' ? React.createElement(Segment, {\n        className: \"childPercentage\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"UDP\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"udp_tcpretrans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Received\"), (this.state.lastUDP[0] != null ? this.datasToString(this.state.lastUDP[0]) : 0) + \" Datagrams\"), React.createElement(Container, {\n        className: \"est_connsest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Sent\"), (this.state.lastUDP[1] != null ? this.datasToString(this.state.lastUDP[1]) : 0) + \" Datagrams\"))) : null)), React.createElement(Grid.Column, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, // (this.props.data.page === 'cloudlet')?\n      //     null\n      //     :\n      React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, this.props.data.page === 'cloudlet' ? \"vCPUs\" : \"CPU\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataCPUMEM,\n        series: this.state.mProp.timeseriesCPUMEM,\n        showLegend: true,\n        single: \"0\",\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabel,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      })), // (this.props.data.page === 'cloudlet')?\n      //     null\n      //     :\n      React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"MEM\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataCPUMEM,\n        series: this.state.mProp.timeseriesCPUMEM,\n        showLegend: true,\n        single: \"1\",\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabel,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      })), this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, \"DISK\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataDISK,\n        series: this.state.mProp.timeseriesDISK,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelDISK,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      })) : null, this.props.data.page !== 'cloudlet' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \"NETWORK\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataNET,\n        series: this.state.mProp.timeseriesNET,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelNET,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      })) : null, this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"TCP\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataTCP,\n        series: this.state.mProp.timeseriesTCP,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelTCP,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      })) : null, this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400,\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, \"UDP\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataUDP,\n        series: this.state.mProp.timeseriesUDP,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelUDP,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      })) : null, this.props.data.page === 'appInst' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 35,\n          display: 'flex',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: 24,\n          color: '#c5fffc',\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"CONNECTIONS\")) : null, this.props.data.page === 'appInst' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"ACCEPTS\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataACCEPTS,\n        series: this.state.mProp.timeseriesACCEPTS,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelCONN,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      })) : null, this.props.data.page === 'appInst' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"ACTIVE\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataACTIVE,\n        series: this.state.mProp.timeseriesACCEPTS,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelCONN,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      })) : null, this.props.data.page === 'appInst' ? React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"HANDLED\"), React.createElement(TimeSeries, {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        chartData: this.state.mProp.timeseriesDataHANDLED,\n        series: this.state.mProp.timeseriesACCEPTS,\n        showLegend: true,\n        margin: {\n          l: 50,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 0\n        },\n        label: this.state.mProp.dataLabelCONN,\n        yRange: [0.001, 0.009],\n        y2Position: 0.94,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      })) : null));\n    }\n  }]);\n\n  return MonitoringViewer;\n}(React.Component);\n\nexport { MonitoringViewer as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/monitoringViewer.js"],"names":["React","Grid","Header","Segment","Container","TimeSeries","EnvironmentStatus","UsageMaxColumn","d3","formatInt","format","formatComma","formatFloat","formatPercent","MonitoringViewer","state","mProp","timeseriesDataCPUMEM","timeseriesDataCPU","timeseriesDataMEM","timeseriesDataCPUUSE","timeseriesCPUMEM","timeseriesDataNET","timeseriesNET","timeseriesDataDISK","timeseriesDISK","timeseriesDataTCP","timeseriesTCP","timeseriesDataUDP","timeseriesUDP","timeseriesDataACCEPTS","timeseriesDataACTIVE","timeseriesDataHANDLED","timeseriesDataCONNECT","timeseriesDataIpv4","timeseriesIpv4","timeseriesACCEPTS","dataLabel","dataLabelNET","dataLabelDISK","dataLabelCONN","dataLabelTCP","dataLabelUDP","lastCPU","lastMEM","lastDISK","lastNET","lastUDP","lastTCP","maxCPU","maxMEM","maxDISK","lastIPv4","lastFloatingIPs","maxIPv4","maxFloatingIPs","data","cpuCnt","memCnt","netCnt","diskCnt","tcpCnt","udpCnt","conCnt","ipv4Cnt","floipCnt","bytesToString","bytes","inst","fmt","datasToString","datas","bytesToPercent","gigabytesToString","console","log","p","precisionFixed","makeChartContainer","title","lastValue","maxValue","unit","type","props","page","label","values","connCnt","setState","mData","length","map","item","name","indexOf","setTimeseriesDataCPUMEM","Object","assign","val","parseFloat","toFixed","feedData","nextProps","nextContext","feedDataCloudlet","width","height","l","r","b","t","pad","marginTop","display","alignContent","fontSize","color","alignSelf","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Header, Segment, Container } from \"semantic-ui-react\";\nimport TimeSeries from '../charts/plotly/timeseries';\nimport EnvironmentStatus from '../container/envrmentStatus'\nimport UsageMaxColumn from '../charts/plotly/usageMaxColumn';\n//import MethodCallChart from \"../charts/plotly/methodCallChart\";\nimport * as d3 from 'd3';\nimport './styles.css'\n\nconst formatInt = d3.format(\".0f\");\nconst formatComma = d3.format(\",\");\nconst formatFloat = d3.format(\".2f\");\nconst formatPercent = d3.format(\".1f\",\".1f\");\n\nexport default class MonitoringViewer extends React.Component {\n    state = {\n        mProp : {\n            timeseriesDataCPUMEM:[\n                [],[]\n            ],\n            timeseriesDataCPU:[\n                [],[]\n            ],\n            timeseriesDataMEM:[\n                [],[]\n            ],\n            timeseriesDataCPUUSE:[\n                [],[]\n            ],\n            timeseriesCPUMEM:[\n                []\n            ],\n\n            timeseriesDataNET:[\n                [],[]\n            ],\n            timeseriesNET:[\n                []\n            ],\n            timeseriesDataDISK:[\n                []\n            ],\n            timeseriesDISK:[\n                []\n            ],\n            timeseriesDataTCP:[\n                [],[]\n            ],\n            timeseriesTCP:[\n                []\n            ],\n            timeseriesDataUDP:[\n                [],[],[]\n            ],\n            timeseriesUDP:[\n                []\n            ],\n            timeseriesDataACCEPTS:[\n                []\n            ],\n            timeseriesDataACTIVE:[\n                []\n            ],\n            timeseriesDataHANDLED:[\n                []\n            ],\n            timeseriesDataCONNECT:[\n                []\n            ],\n            timeseriesDataIpv4:[\n                [], []\n            ],\n            timeseriesIpv4:[\n                [], []\n            ],\n            timeseriesACCEPTS:[[]],\n            dataLabel:['CPU', 'MEM'],\n            dataLabelNET:['RCV', 'SND'],\n            dataLabelDISK:['DISK'],\n            dataLabelCONN:[''],\n            dataLabelTCP:['RCV', 'SND'],\n            dataLabelUDP:['RCV', 'SND', 'ERROR'],\n        },\n        lastCPU:0, lastMEM: 0, lastDISK:0, lastNET:[0,0], lastUDP:[0,0], lastTCP:[0,0],maxCPU:0,maxMEM:0, maxDISK:0,\n        lastIPv4: 0, lastFloatingIPs: 0, maxIPv4: 0, maxFloatingIPs: 0,\n        data:[]\n    }\n\n    cpuCnt = 0;\n    memCnt = 0;\n    netCnt = 0;\n    diskCnt = 0;\n    tcpCnt = 0;\n    udpCnt = 0;\n    conCnt = 0;\n    ipv4Cnt = 0;\n    floipCnt = 0;\n\n    setTimeseriesDataCPUMEM (label, values, page) {\n        if(label === 'cpu') {\n            this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt] = formatFloat(values['cmsn']);\n            this.state.mProp['timeseriesCPUMEM'][0][this.cpuCnt] = values['time'];\n            this.cpuCnt ++;\n        }\n        if(label === 'mem') {\n            this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt] = values['cmsn'];\n            this.memCnt ++;\n        }\n        if(label === 'disk') {\n            this.state.mProp['timeseriesDataDISK'][0][this.diskCnt] = formatFloat(values['cmsn']);\n            this.state.mProp['timeseriesDISK'][0][this.diskCnt] = values['time'];\n            this.diskCnt ++;\n        }\n        if(label === 'network') {\n            this.state.mProp['timeseriesDataNET'][0][this.netCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataNET'][1][this.netCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesNET'][0][this.netCnt] = values['time'];\n            this.netCnt ++;\n        }\n        if(label === 'tcp') {\n            this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesTCP'][0][this.tcpCnt] = values['time'];\n            this.tcpCnt ++;\n        }\n        if(label === 'udp') {\n            this.state.mProp['timeseriesDataUDP'][0][this.udpCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataUDP'][1][this.udpCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesDataUDP'][2][this.udpCnt] = values['cmsn'][2];\n            this.state.mProp['timeseriesUDP'][0][this.udpCnt] = values['time'];\n            this.udpCnt ++;\n        }\n        if(label === 'connections') {\n            this.state.mProp['timeseriesDataACCEPTS'][0][this.connCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n\n            this.state.mProp['timeseriesDataACTIVE'][0][this.connCnt] = values['cmsn'][2];\n            this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n\n            this.state.mProp['timeseriesDataHANDLED'][0][this.connCnt] = values['cmsn'][7];\n            this.state.mProp['timeseriesACCEPTS'][0][this.connCnt] = values['cmsn'][0];\n\n            this.connCnt ++;\n        }\n\n        this.setState({props: this.state.mProp})\n        this.setState({lastDISK: this.state.mProp['timeseriesDataDISK'][0][0]})\n        this.setState({lastTCP: [this.state.mProp['timeseriesDataTCP'][0][0], this.state.mProp['timeseriesDataTCP'][1][0] ]})\n        this.setState({lastUDP: [this.state.mProp['timeseriesDataUDP'][0][0], this.state.mProp['timeseriesDataUDP'][1][0] ]})\n        if(page === 'clusterInst'){\n            this.setState({lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][0]})\n            this.setState({lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][0]})\n            this.setState({lastNET: [this.state.mProp['timeseriesDataNET'][0][0], this.state.mProp['timeseriesDataNET'][1][0] ]})\n        } else {\n            this.setState({lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt-1]})\n            this.setState({lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt-1]})\n            this.setState({lastNET: [this.state.mProp['timeseriesDataNET'][0][this.netCnt-1], this.state.mProp['timeseriesDataNET'][1][this.netCnt-1] ]})\n        }\n\n\n    }\n    bytesToString =  (bytes, inst) => {\n        //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n        // One way to write it, not the prettiest way to write it.\n\n        var fmt = d3.format('.2f');\n        if (bytes < 1000) {\n            return fmt(bytes) + ' B';\n        } else if (bytes < 1000 * 1000) {\n            return fmt(bytes / 1000) + ' kB';\n        } else if (bytes < 1000 * 1000 * 1000) {\n            return fmt(bytes / 1000 / 1000) + ' MB';\n        } else {\n            return fmt(bytes / 1000 / 1000 / 1000) + ' GB';\n        }\n    }\n    datasToString =  (datas, inst) => {\n        //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n        // One way to write it, not the prettiest way to write it.\n\n        var fmt = d3.format('.2f');\n        if (datas < 1000) {\n            return fmt(datas) + '';\n        } else if (datas < 1000 * 1000) {\n            return fmt(datas / 1000) + 'K';\n        } else if (datas < 1000 * 1000 * 1000) {\n            return fmt(datas / 1000 / 1000) + 'M';\n        } else {\n            return fmt(datas / 1000 / 1000 / 1000) + 'G';\n        }\n    }\n    bytesToPercent=  (bytes, inst) => {\n        //console.log(\"20190812 bytes..\",bytes, \":\", inst)\n        // One way to write it, not the prettiest way to write it.\n\n        var fmt = d3.format('.2f');\n        return bytes + ' %'\n    }\n    gigabytesToString =  (bytes, inst) => {\n        console.log(\"20190812 bytes..\",bytes, \":\", inst)\n        // One way to write it, not the prettiest way to write it.\n        var p = d3.precisionFixed(1),\n            fmt = d3.format(\".\" + p + \"f\");\n\n        if (bytes < 1000) {\n            return fmt(bytes) + ' B';\n        } else if (bytes < 1000 * 1000) {\n            return fmt(bytes / 1000) + ' KB';\n        } else if (bytes < 1000 * 1000 * 1000) {\n            return fmt(bytes / 1000 / 1000) + ' MB';\n        } else {\n            return fmt(bytes / 1000 / 1000 / 1000) + ' GB';\n        }\n    }\n    feedData(data, page) {\n        this.cpuCnt = 0;\n        this.memCnt = 0;\n        this.diskCnt = 0;\n        this.netCnt = 0;\n        this.tcpCnt = 0;\n        this.udpCnt = 0;\n        this.connCnt = 0;\n\n        console.log('20191206 feedData-- ', data)\n        if(data && data.mData.length) {\n            data.mData.map(item => {\n                if(item.name.indexOf('cpu') > -1) {\n                    this.setTimeseriesDataCPUMEM('cpu',item['values'], page)\n                } else if(item.name.indexOf('mem') > -1) {\n                    this.setTimeseriesDataCPUMEM('mem',item['values'], page)\n                } else if(item.name.indexOf('disk') > -1) {\n                    this.setTimeseriesDataCPUMEM('disk',item['values'], page)\n                } else if(item.name.indexOf('network') > -1) {\n                    this.setTimeseriesDataCPUMEM('network',item['values'], page)\n                } else if(item.name.indexOf('tcp') > -1) {\n                    this.setTimeseriesDataCPUMEM('tcp',item['values'], page)\n                } else if(item.name.indexOf('udp') > -1) {\n                    this.setTimeseriesDataCPUMEM('udp',item['values'], page)\n                } else if(item.name.indexOf('accepts') > -1) {\n                    this.setTimeseriesDataCPUMEM('accepts',item['values'], page)\n                } else if(item.name.indexOf('connections') > -1) {\n                    this.setTimeseriesDataCPUMEM('connections',item['values'], page)\n                }\n            })\n        }\n    }\n\n    feedDataCloudlet(data) {\n        this.cpuCnt = 0;\n        this.memCnt = 0;\n        this.diskCnt = 0;\n        this.netCnt = 0;\n        this.tcpCnt = 0;\n        this.udpCnt = 0;\n        this.ipv4Cnt = 0;\n        this.floipCnt = 0;\n\n        console.log('20191007 feedData-- ', data)\n        if(data && data.length) {\n            var datas = Object.assign(data[0].values['cmsn'], data[1].values['cmsn']);\n\n            this.setState({lastCPU: datas['vCpuUsed']})\n            this.setState({lastMEM: datas['memUsed']})\n            this.setState({lastDISK: datas['diskUsed']})\n            this.setState({lastIPv4: datas['ipv4Used']})\n            this.setState({lastFloatingIPs: datas['floatingIpsUsed']})\n\n            this.setState({maxCPU: datas['vCpuMax']})\n            this.setState({maxMEM: datas['memMax']})\n            this.setState({maxDISK: datas['diskMax']})\n            this.setState({maxIPv4: datas['ipv4Max']})\n            this.setState({maxFloatingIPs: datas['floatingIpsMax']})\n\n        }\n        if(data.length){\n            data.map((val) => {\n                if(val.values['cmsn']['vCpuUsed']) {\n                    this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt] = parseFloat(val.values['cmsn']['vCpuUsed']).toFixed(2);\n                    this.state.mProp['timeseriesDataCPU'][0][this.cpuCnt] = parseFloat(val.values['cmsn']['vCpuUsed']).toFixed(2);\n                    this.state.mProp['timeseriesCPUMEM'][0][this.cpuCnt] = val.values['time'];\n                    this.cpuCnt ++;\n                }\n                if(val.values['cmsn']['vCpuMax']) {\n                    this.state.mProp['timeseriesDataCPU'][1][this.cpuCnt] = parseFloat(val.values['cmsn']['vCpuMax']).toFixed(2);\n\n                }\n                if(val.values['cmsn']['memUsed']) {\n                    this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt] = val.values['cmsn']['memUsed'];\n                    this.state.mProp['timeseriesDataMEM'][0][this.memCnt] = val.values['cmsn']['memUsed'];\n                    this.memCnt ++;\n                }\n                if(val.values['cmsn']['diskUsed']) {\n                    this.state.mProp['timeseriesDataDISK'][0][this.diskCnt] = this.gigabytesToString(val.values['cmsn']['diskUsed']);\n                    this.state.mProp['timeseriesDISK'][0][this.diskCnt] = val.values['time'];\n                    this.diskCnt ++;\n                }\n                if(val.values['cmsn']['ipv4Used']){\n                    this.state.mProp['timeseriesDataIpv4'][0][this.ipv4Cnt] = this.gigabytesToString(val.values['cmsn']['ipv4Used']);\n                    this.state.mProp['timeseriesIpv4'][0][this.ipv4Cnt] = val.values['time'];\n                    this.ipv4Cnt ++;\n                }\n\n            });\n        }\n\n        this.setState({props: this.state.mProp})\n    }\n\n    makeChartContainer = (title, lastValue, maxValue, unit, type) => (\n        <Segment className=\"childPercentage cloudlet_monitoring\" inverted>\n            <Header>\n                {title?title:'No Title'}\n            </Header>\n            {\n                (this.props.data.page === 'cloudlet') ?\n                    <Container className=\"cloudlet_monitoring_charts\">\n                        <div className=\"cloudlet_monitoring_charts_gauge\">\n                            <EnvironmentStatus data={[lastValue, maxValue]} type={unit} title='USED'/>\n                        </div>\n                        <div className=\"cloudlet_monitoring_charts_counting\">\n                            <div className=\"cloudlet_monitoring_charts_counting_max\">\n                                <div className=\"cloudlet_monitoring_charts_counting_max_title\">MAX</div>\n                                <div className=\"cloudlet_monitoring_charts_counting_max_value\">\n                                    <div className=\"cloudlet_monitoring_charts_counting_max_value_number\">\n                                        {\n                                            (this.props.data.page === 'cloudlet')? ((type === 'CPU' || type === 'IPv4' || type === 'floatingIPs')? maxValue : maxValue/1000) : null\n                                        }\n                                    </div>\n                                    <div className=\"cloudlet_monitoring_charts_counting_max_value_unit\">\n                                        {(this.props.data.page === 'cloudlet')?unit:null}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"cloudlet_monitoring_charts_counting_used\">\n                                <div className=\"cloudlet_monitoring_charts_counting_used_title\">USED</div>\n                                <div className=\"cloudlet_monitoring_charts_counting_used_value\">\n                                    <div className=\"cloudlet_monitoring_charts_counting_used_value_number\">\n                                        {(this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')? lastValue : ((type === 'CPU' || type === 'IPv4' || type === 'floatingIPs')? lastValue : lastValue/1000)}\n                                    </div>\n                                    <div className=\"cloudlet_monitoring_charts_counting_used_value_unit\">\n                                        {(this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?'%':unit}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Container>\n                    :\n                    (type === 'CPU')?<Container className=\"cpu\">{this.state.lastCPU + ((this.props.data.page === 'cloudlet')?'Count' : ' %')}</Container>\n                        : (type === 'DISK') ? <Container className=\"disk\">{\n                            (this.props.data.page === 'clusterInst') ? this.bytesToPercent(this.state.lastDISK) : this.bytesToString(this.state.lastDISK)\n                        }</Container>\n                        : <Container className=\"memory\">{\n                            (this.props.data.page === 'clusterInst') ? this.bytesToPercent(this.state.lastMEM) : this.bytesToString(this.state.lastMEM)\n                        }</Container>\n            }\n        </Segment>\n    )\n\n    componentDidMount() {\n\n        if(this.props.data) {\n            this.setState({data:this.props.data})\n            this.feedData(this.props.data)\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.data.page === 'cloudlet' && nextProps.data.mData.length) {\n            this.feedDataCloudlet(nextProps.data.mData);\n        } else {\n            this.feedData(nextProps.data, nextProps.data.page);\n        }\n\n\n    }\n\n    render() {\n        return (\n            <Grid.Row className=\"monitoring\">\n                <Grid.Column>\n                    <div className='wrapperPercentage'>\n                        {\n                            this.makeChartContainer((this.props.data.page === 'cloudlet')?\"vCPUs\" : \"CPU\", this.state.lastCPU,  this.state.maxCPU, ' Count', 'CPU')\n                        }\n\n                        {\n                            this.makeChartContainer('MEMORY', this.state.lastMEM, this.state.maxMEM, ' GBs', 'MEM')\n                        }\n\n                        {\n                            (this.props.data.page !== 'appInst')?\n                                this.makeChartContainer('DISK', this.state.lastDISK, this.state.maxDISK, (this.props.data.page === 'cloudlet')?'TBs':' GBs', 'DISK')\n                                :\n                                null\n                        }\n                        {\n                            (this.props.data.page === 'cloudlet')?\n                                this.makeChartContainer('Extrnal IPs', this.state.lastIPv4, this.state.maxIPv4, ' IPs', 'IPv4')\n                                :\n                                null\n                        }\n                        {\n                            (this.props.data.page === 'cloudlet')?\n                                this.makeChartContainer('Floating IPs', this.state.lastFloatingIPs, this.state.maxFloatingIPs, ' IPS', 'floatingIPs')\n                                :\n                                null\n                        }\n                        {\n                            (this.props.data.page !== 'cloudlet')?\n                                <Segment className=\"childPercentage\" inverted>\n                                    <Header>\n                                        NETWORK\n                                    </Header>\n                                    <div className=\"content\">\n                                        <Container className=\"network_rcv\">\n                                            <div className=\"title\">{(this.props.data.page === 'clusterInst') ? 'Received' : 'RCV'}</div>\n                                            {this.bytesToString(this.state.lastNET[0]/1000)}\n                                        </Container>\n                                        <Container className=\"network_snd\">\n                                            <div className=\"title\">{(this.props.data.page === 'clusterInst') ? 'Sent' : 'SND'}</div>\n                                            {this.bytesToString(this.state.lastNET[1]/1000)}\n                                        </Container>\n                                    </div>\n                                </Segment>\n                                :\n                                null\n                        }\n\n                        {\n                            (this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?\n                                <Segment className=\"childPercentage\" inverted>\n                                    <Header>\n                                        TCP\n                                    </Header>\n                                    <div className=\"content\">\n                                        <Container className=\"tcp_tcpretrans\">\n                                            <div className=\"title\">Retransmissions</div>\n                                            {\n                                                ((this.state.lastTCP[0] !== null)? this.state.lastTCP[0] : 0)\n                                            }\n                                        </Container>\n                                        <Container className=\"tcp_connsest\">\n                                            <div className=\"title\">Established Connections</div>\n                                            {\n                                                ((this.state.lastTCP[1] !== null)? this.state.lastTCP[1] : 0)\n                                            }\n                                        </Container>\n                                    </div>\n                                </Segment>\n                            :\n                            null\n                        }\n                        {\n                            (this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?\n                                <Segment className=\"childPercentage\" inverted>\n                                    <Header>\n                                        UDP\n                                    </Header>\n                                    <div className=\"content\">\n                                        <Container className=\"udp_tcpretrans\">\n                                            <div className=\"title\">Received</div>\n                                            {((this.state.lastUDP[0] != null)? this.datasToString(this.state.lastUDP[0]) : 0) + \" Datagrams\"}\n                                        </Container>\n                                        <Container className=\"est_connsest\">\n                                            <div className=\"title\">Sent</div>\n                                            {((this.state.lastUDP[1] != null)? this.datasToString(this.state.lastUDP[1]) : 0) + \" Datagrams\"}\n                                        </Container>\n                                    </div>\n                                </Segment>\n                            :\n                            null\n                        }\n\n                    </div>\n                </Grid.Column>\n\n                <Grid.Column style={{width:'100%', height:'100%'}}>\n                    {\n                        // (this.props.data.page === 'cloudlet')?\n                        //     null\n                        //     :\n                            <div style={{width:'100%', height:400}}>\n                                <Header>{(this.props.data.page === 'cloudlet')?\"vCPUs\" : \"CPU\"}</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataCPUMEM} series={this.state.mProp.timeseriesCPUMEM} showLegend={true} single='0'\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabel} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                    }\n\n                    {\n                        // (this.props.data.page === 'cloudlet')?\n                        //     null\n                        //     :\n                            <div style={{width:'100%', height:400}}>\n                                <Header>MEM</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataCPUMEM} series={this.state.mProp.timeseriesCPUMEM} showLegend={true} single='1'\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabel} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                    }\n\n\n\n\n                    {\n                        (this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>DISK</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataDISK} series={this.state.mProp.timeseriesDISK} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelDISK} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                        :\n                        null\n                    }\n                    {\n                        (this.props.data.page !== 'cloudlet')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>NETWORK</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataNET} series={this.state.mProp.timeseriesNET} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelNET} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                            :\n                            null\n\n                    }\n\n                    {\n                        (this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>TCP</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataTCP} series={this.state.mProp.timeseriesTCP} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelTCP} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                                :\n                            null\n                    }\n                    {\n                        (this.props.data.page !== 'appInst' && this.props.data.page !== 'cloudlet')?\n                            <div style={{width:'100%', height:400, marginTop:20}}>\n                                <Header>UDP</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataUDP} series={this.state.mProp.timeseriesUDP} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelUDP} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                                :\n                            null\n                    }\n                    {\n                        (this.props.data.page === 'appInst')?\n                            <div style={{width:'100%', height:35, display:'flex', alignContent:'center'}}>\n                                <div style={{fontSize:24, color:'#c5fffc', alignSelf:'center'}}>CONNECTIONS</div>\n                            </div>\n                            :\n                            null\n                    }\n                    {\n                        (this.props.data.page === 'appInst')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>ACCEPTS</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataACCEPTS} series={this.state.mProp.timeseriesACCEPTS} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelCONN} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                            :\n                            null\n                    }\n                    {\n                        (this.props.data.page === 'appInst')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>ACTIVE</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataACTIVE} series={this.state.mProp.timeseriesACCEPTS} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelCONN} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                            :\n                            null\n                    }\n                    {\n                        (this.props.data.page === 'appInst')?\n                            <div style={{width:'100%', height:400}}>\n                                <Header>HANDLED</Header>\n                                <TimeSeries style={{width:'100%', height:200}} chartData={this.state.mProp.timeseriesDataHANDLED} series={this.state.mProp.timeseriesACCEPTS} showLegend={true}\n                                            margin={{l: 50, r: 10, b: 45, t: 10, pad: 0}} label={this.state.mProp.dataLabelCONN} yRange={[0.001, 0.009]} y2Position={0.94}></TimeSeries>\n                            </div>\n                            :\n                            null\n                    }\n                </Grid.Column>\n\n\n\n            </Grid.Row>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}