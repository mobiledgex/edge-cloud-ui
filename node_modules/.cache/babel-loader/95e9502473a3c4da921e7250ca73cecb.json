{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registryViewer.js\";\nimport React from 'react';\nimport { Header, Button, Table, Icon, Input, Tab, Item } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport { withRouter } from \"react-router-dom\";\nimport PopDetailViewer from './popDetailViewer';\nimport PopUserViewer from './popUserViewer';\nimport PopAddUserViewer from './popAddUserViewer';\nimport './styles.css';\nimport ContainerDimensions from 'react-container-dimensions';\nimport _ from \"lodash\";\nimport * as reducer from '../utils';\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport SiteFourCreateFormAppDefault from \"./siteFourCreateFormAppDefault\";\nimport Alert from \"react-s-alert\";\nimport * as service from \"../services/service_compute_service\";\nvar ReactGridLayout = WidthProvider(RGL);\nvar itData = '';\nvar submitImgPath = '';\nvar headerStyle = {\n  backgroundImage: 'url()'\n};\nvar horizon = 6;\nvar vertical = 20;\nvar layout = [{\n  \"w\": 19,\n  \"h\": 20,\n  \"x\": 0,\n  \"y\": 0,\n  \"i\": \"0\",\n  \"minW\": 5,\n  \"minH\": 5,\n  \"moved\": false,\n  \"static\": false,\n  \"title\": \"Developer\"\n}];\nvar _self = null;\nvar colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey'];\nvar panes = [{\n  menuItem: 'App Deployment',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      style: {\n        overflow: 'auto'\n      },\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(SiteFourCreateFormAppDefault, {\n      data: props,\n      pId: 0,\n      getOptionData: props.regionf,\n      flavorData: props.devoptionsf,\n      getUserRole: props.userrole,\n      gotoUrl: props.gotoUrl,\n      toggleSubmit: props.toggleSubmit,\n      validError: props.error,\n      onSubmit: function onSubmit() {\n        return console.log('submit form');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n} // { menuItem: 'Docker Deployment', render: (props) => <Tab.Pane attached={false}><SiteFourCreateFormAppDefault data={props} pId={0} onSubmit={() => console.log('submit form')}/></Tab.Pane> },\n// { menuItem: 'VM Deployment', render: (props) => <Tab.Pane attached={false}><SiteFourCreateFormAppDefault data={props} pId={0} onSubmit={() => console.log('submit form')}/></Tab.Pane> },\n];\n\nvar RegistryViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistryViewer, _React$Component);\n\n  function RegistryViewer(props) {\n    var _this;\n\n    _classCallCheck(this, RegistryViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistryViewer).call(this, props));\n\n    _this.receiveResult = function (result, body, resuorce) {\n      console.log(\"bodybodybodysresult\", result, \":::\", body, \":::\", resuorce);\n      var resource = '';\n      if (resuorce == 'CreateApp') resource = 'created';else if (resuorce == 'UpdateApp') resource = 'updated';\n\n      _self.props.handleLoadingSpinner(false);\n\n      _this.setState({\n        toggleSubmit: false\n      });\n\n      if (result.data.error) {\n        if (result.data.error == 'Key already exists') result.data.error = 'App already exists';\n\n        _this.props.handleAlertInfo('error', result.data.error);\n      } else {\n        //this.props.gotoApp();\n        _this.props.handleAlertInfo('success', 'Your application ' + body.params.app.key.name + ' ' + resource + ' successfully');\n\n        setTimeout(function () {\n          _this.gotoUrl();\n        }, 1000); //this.gotoUrl();\n        //_self.props.handleChangeSite({mainPath:'/site4', subPath: 'pg=6'})\n      }\n    };\n\n    _this.show = function (dim) {\n      return _this.setState({\n        dimmer: dim,\n        openDetail: true\n      });\n    };\n\n    _this.close = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.handleInjectDeveloper(null);\n    };\n\n    _this.closeDetail = function () {\n      _this.setState({\n        openDetail: false\n      });\n    };\n\n    _this.closeUser = function () {\n      _this.setState({\n        openUser: false\n      });\n    };\n\n    _this.closeAddUser = function () {\n      _this.setState({\n        openAdd: false\n      });\n    };\n\n    _this.handleSort = function (clickedColumn) {\n      return function () {\n        var _this$state = _this.state,\n            column = _this$state.column,\n            dummyData = _this$state.dummyData,\n            direction = _this$state.direction;\n\n        if (column !== clickedColumn) {\n          _this.setState({\n            column: clickedColumn,\n            dummyData: _.sortBy(dummyData, [clickedColumn]),\n            direction: 'ascending'\n          });\n\n          return;\n        }\n\n        _this.setState({\n          dummyData: dummyData.reverse(),\n          direction: direction === 'ascending' ? 'descending' : 'ascending'\n        });\n      };\n    };\n\n    _this.roleMark = function (role) {\n      return role.indexOf('Developer') !== -1 && role.indexOf('Manager') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markD markM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"M\") : role.indexOf('Developer') !== -1 && role.indexOf('Contributor') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markD markC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"C\") : role.indexOf('Developer') !== -1 && role.indexOf('Viewer') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markD markV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"V\") : role.indexOf('Operator') !== -1 && role.indexOf('Manager') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markO markM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"M\") : role.indexOf('Operator') !== -1 && role.indexOf('Contributor') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markO markC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"C\") : role.indexOf('Operator') !== -1 && role.indexOf('Viewer') !== -1 ? React.createElement(\"div\", {\n        className: \"mark markO markV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"V\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      });\n    };\n\n    _this.getOptionData = function (region) {\n      if (localStorage.selectMenu == \"Apps\") {\n        var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null; // clusterFlavor\n\n        service.getMCService('ShowFlavor', {\n          token: store.userToken,\n          region: region\n        }, _self.receiveF);\n      }\n    };\n\n    _self = _assertThisInitialized(_this);\n\n    var layout = _this.generateLayout();\n\n    _this.state = {\n      layout: layout,\n      open: false,\n      openAdd: false,\n      openDetail: false,\n      dimmer: false,\n      activeItem: '',\n      dummyData: [],\n      detailViewData: null,\n      selected: {},\n      openUser: false,\n      orgData: {},\n      selectUse: null,\n      resultData: null,\n      devoptionsf: [],\n      toggleSubmit: false,\n      validateError: [],\n      keysData: [{\n        'Region': {\n          label: 'Region',\n          type: 'RegionSelect',\n          necessary: true,\n          tip: 'Allows developer to upload app info to different controllers',\n          active: true,\n          items: [],\n          editDisabled: true\n        },\n        'OrganizationName': {\n          label: 'Organization Name',\n          type: 'RenderInputDisabled',\n          necessary: true,\n          tip: 'Organization or Company Name that a Developer is part of',\n          active: true,\n          editDisabled: true\n        },\n        'AppName': {\n          label: 'App Name',\n          type: 'RenderInputApp',\n          necessary: true,\n          tip: 'App name',\n          active: true,\n          editDisabled: true\n        },\n        'Version': {\n          label: 'App Version',\n          type: 'RenderInput',\n          necessary: true,\n          tip: 'App version',\n          active: true,\n          editDisabled: true\n        },\n        'DeploymentType': {\n          label: 'Deployment Type',\n          type: 'RenderSelect',\n          necessary: true,\n          tip: 'Deployment type (Kubernetes, Docker, or VM)',\n          active: true,\n          items: ['Docker', 'Kubernetes', 'VM'],\n          editDisabled: true\n        },\n        'ImageType': {\n          label: 'Image Type',\n          type: 'RenderDT',\n          necessary: true,\n          tip: 'ImageType specifies image type of an App',\n          items: ''\n        },\n        'ImagePath': {\n          label: 'Image Path',\n          type: 'RenderPath',\n          necessary: true,\n          tip: 'URI of where image resides',\n          active: true,\n          items: ''\n        },\n        'AuthPublicKey': {\n          label: 'Auth Public Key',\n          type: 'RenderTextArea',\n          necessary: false,\n          tip: 'auth_public_key',\n          active: true\n        },\n        'DefaultFlavor': {\n          label: 'Default Flavor',\n          type: 'FlavorSelect',\n          necessary: true,\n          tip: 'FlavorKey uniquely identifies a Flavor.',\n          active: true\n        },\n        'Ports': {\n          label: 'Ports',\n          type: 'CustomPorts',\n          necessary: false,\n          tip: 'Comma separated list of protocol:port pairs that the App listens on i.e. TCP:80,UDP:10002,http:443',\n          active: true,\n          items: ['tcp', 'udp']\n        },\n        'DefaultFQDN': {\n          label: 'Official FQDN',\n          type: 'RenderInput',\n          necessary: false,\n          tip: 'Official FQDN',\n          active: true\n        },\n        'PackageName': {\n          label: 'Package Name',\n          type: 'RenderInput',\n          necessary: false,\n          tip: 'Package Name',\n          active: true\n        },\n        // 'IpAccess':{label:'IP Access', type:'IPSelect', necessary:false, tip:'aaa', active:true, items:['IpAccessShared', 'IpAcessDedicaterd']},\n        'ScaleWithCluster': {\n          label: 'Scale With Cluster',\n          type: 'RenderCheckbox',\n          necessary: false,\n          items: false\n        },\n        'Command': {\n          label: 'Command',\n          type: 'RenderInput',\n          necessary: false,\n          tip: 'Command that the container runs to start service',\n          active: true\n        },\n        'DeploymentMF': {\n          label: 'Deployment Manifest',\n          type: 'RenderTextArea',\n          necessary: false,\n          tip: 'Deployment manifest is the deployment specific manifest file/config For docker deployment, this can be a docker-compose or docker run file For kubernetes deployment, this can be a kubernetes yaml or helm chart file',\n          active: true\n        }\n      }, {}],\n      fakeData: [{\n        'Region': '',\n        'OrganizationName': '',\n        'AppName': '',\n        'Version': '',\n        'DeploymentType': '',\n        'ImageType': '',\n        'ImagePath': '',\n        'AuthPublicKey': '',\n        'DefaultFlavor': '',\n        'Ports': '',\n        'DefaultFQDN': '',\n        'PackageName': '',\n        // 'IpAccess':'',\n        'ScaleWithCluster': '',\n        'Command': '',\n        'DeploymentMF': ''\n      }],\n      editMode: false\n    }; //this.hiddenKeys = ['CloudletLocation', 'URI', 'Mapped_ports']\n\n    return _this;\n  }\n\n  _createClass(RegistryViewer, [{\n    key: \"onHandleClick\",\n    value: function onHandleClick(dim, data) {\n      this.setState({\n        dimmer: dim,\n        open: true,\n        selected: data\n      });\n    }\n  }, {\n    key: \"onHandleClicAdd\",\n    value: function onHandleClicAdd(dim, data) {\n      this.setState({\n        dimmer: dim,\n        openAdd: true,\n        selected: data\n      });\n    }\n  }, {\n    key: \"gotoUrl\",\n    value: function gotoUrl() {\n      _self.props.history.push({\n        pathname: '/site4',\n        search: 'pg=5'\n      });\n\n      _self.props.history.location.search = 'pg=5';\n\n      _self.props.handleChangeSite({\n        mainPath: '/site4',\n        subPath: 'pg=5'\n      });\n    }\n  }, {\n    key: \"generateDOM\",\n    value: function generateDOM(open, dimmer, data, keysData, hideHeader) {\n      var _this2 = this;\n\n      var panelParams = {\n        data: data,\n        keys: keysData,\n        regionf: this.getOptionData,\n        devoptionsf: this.state.devoptionsf,\n        userrole: localStorage.selectRole,\n        editMode: this.state.editMode,\n        editData: this.props.editData\n      };\n      return layout.map(function (item, i) {\n        return i === 0 ? React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Tab, Object.assign({\n          className: \"grid_tabs\",\n          menu: {\n            secondary: true,\n            pointing: true,\n            inverted: true,\n            attached: false,\n            tabular: false\n          },\n          panes: panes\n        }, panelParams, {\n          gotoUrl: _this2.gotoUrl,\n          toggleSubmit: _this2.state.toggleSubmit,\n          error: _this2.state.validateError,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        })))) : React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"generateLayout\",\n    value: function generateLayout() {\n      var p = this.props;\n      return layout;\n    }\n  }, {\n    key: \"makeHeader\",\n    value: function makeHeader(_keys, headL, visibles) {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          column = _this$state2.column,\n          direction = _this$state2.direction;\n      var keys = Object.keys(_keys); //hide column filtered...\n\n      var filteredKeys = visibles ? reducer.filterDefine(keys, visibles) : keys;\n      var widthDefault = Math.round(16 / filteredKeys.length);\n      return filteredKeys.map(function (key, i) {\n        return i === filteredKeys.length - 1 ? React.createElement(Table.HeaderCell, {\n          width: 3,\n          textAlign: \"center\",\n          sorted: column === key ? direction : null,\n          onClick: _this3.handleSort(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, key) : React.createElement(Table.HeaderCell, {\n          textAlign: \"center\",\n          width: headL ? headL[i] : widthDefault,\n          sorted: column === key ? direction : null,\n          onClick: _this3.handleSort(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, key);\n      });\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout) {//this.props.onLayoutChange(layout);\n    }\n  }, {\n    key: \"onPortClick\",\n    value: function onPortClick() {}\n  }, {\n    key: \"detailView\",\n    value: function detailView(item) {\n      if (!item['UserName']) {\n        this.setState({\n          detailViewData: item,\n          openDetail: true\n        });\n      } else {\n        this.setState({\n          detailViewData: item,\n          openUser: true\n        });\n      }\n    }\n  }, {\n    key: \"receiveF\",\n    value: function receiveF(result) {\n      var arr = [];\n      result.map(function (item, i) {\n        arr.push(item.FlavorName);\n      });\n\n      _self.setState({\n        devoptionsf: arr\n      });\n    }\n  }, {\n    key: \"updateFields\",\n    value: function updateFields(initData, updateData) {\n      var fieldArr = [];\n      var fields = {\n        AppFieldImagePath: \"4\",\n        AppFieldAccessPorts: \"7\",\n        AppFieldDefaultFlavorName: \"9.1\",\n        AppFieldAuthPublicKey: \"12\",\n        AppFieldCommand: \"13\",\n        AppFieldDeploymentManifest: \"16\",\n        AppFieldAndroidPackageName: \"18\",\n        AppFieldScaleWithCluster: \"22\",\n        AppFieldOfficialFqdn: \"25\"\n      };\n      if (initData.ImagePath !== updateData.image_path) fieldArr.push(fields.AppFieldImagePath);\n      if (initData.Ports !== updateData.access_ports) fieldArr.push(fields.AppFieldAccessPorts);\n      if (initData.DefaultFlavor !== updateData.default_flavor.name) fieldArr.push(fields.AppFieldDefaultFlavorName);\n      if (initData.AuthPublicKey !== updateData.auth_public_key) fieldArr.push(fields.AppFieldAuthPublicKey);\n      if (initData.Command !== updateData.command) fieldArr.push(fields.AppFieldCommand);\n      if (initData.DeploymentMF !== updateData.deployment_manifest) fieldArr.push(fields.AppFieldDeploymentManifest);\n      if (initData.PackageName !== updateData.android_package_name) fieldArr.push(fields.AppFieldAndroidPackageName);\n      if (initData.ScaleWithCluster !== updateData.scale_with_cluster) fieldArr.push(fields.AppFieldScaleWithCluster);\n      if (initData.DefaultFQDN !== updateData.official_fqdn) fieldArr.push(fields.AppFieldOfficialFqdn);\n      return fieldArr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //edit(call flavorlist)\n      if (this.props.editMode && this.props.editData) {\n        var region = this.props.editData.Region;\n        this.getOptionData(region);\n      }\n\n      if (this.props.devData.length > 0) {\n        this.setState({\n          dummyData: this.props.devData,\n          resultData: !this.state.resultData ? this.props.devData : this.state.resultData\n        });\n      } else {\n        this.setState({\n          dummyData: this.state.fakeData,\n          resultData: !this.state.resultData ? this.props.devData : this.state.resultData\n        });\n      }\n      /************\n       * set Organization Name\n       * **********/\n\n\n      var assObj = Object.assign([], this.state.fakeData);\n      assObj[0].OrganizationName = localStorage.selectOrg; //assObj[0].ImagePath.items = \"docker.mobiledgex.net/OrganizationName/images/AppName:AppVersion\";\n      //this.setState({fakeData:assObj});\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.accountInfo) {\n        this.setState({\n          dimmer: 'blurring',\n          open: true\n        });\n      }\n\n      if (nextProps.regionInfo.region.length) {\n        var assObj = Object.assign([], this.state.keysData);\n        assObj[0].Region.items = nextProps.regionInfo.region;\n      } ////////\n\n\n      if (nextProps.devData.length > 1) {\n        this.setState({\n          dummyData: nextProps.devData,\n          resultData: !this.state.resultData ? nextProps.devData : this.state.resultData\n        });\n      } else {\n        this.setState({\n          dummyData: this.state.fakeData,\n          resultData: !this.state.resultData ? nextProps.devData : this.state.resultData\n        });\n      } ///////\n\n\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      this.setState({\n        toggleSubmit: false\n      });\n\n      if (nextProps.submitValues && !this.state.toggleSubmit) {\n        var apps = ['Region', 'OrganizationName', 'AppName', 'Version', 'DeploymentType', 'DefaultFlavor'];\n        var error = [];\n        apps.map(function (item) {\n          if (!nextProps.validateValue[item]) {\n            error.push(item);\n          }\n        });\n\n        if (nextProps.formApps.submitSucceeded && error.length == 0) {\n          var serviceBody = {};\n          var serviceResource = 'CreateApp';\n\n          if (nextProps.editMode) {\n            serviceResource = 'UpdateApp';\n            nextProps.submitValues.app['fields'] = this.updateFields(nextProps.editData, nextProps.submitValues.app);\n          }\n\n          this.setState({\n            toggleSubmit: true,\n            validateError: error\n          });\n          this.props.handleLoadingSpinner(true); //TODO: // 20190430 add spinner...(loading)\n\n          serviceBody = {\n            \"token\": store ? store.userToken : 'null',\n            \"params\": nextProps.submitValues\n          };\n          services.createNewApp(serviceResource, serviceBody, this.receiveResult);\n        } else {\n          this.setState({\n            validateError: error,\n            toggleSubmit: true\n          });\n        }\n      }\n\n      if (nextProps.formApps.values && nextProps.formApps.values.DeploymentType) {\n        var _assObj = Object.assign([], this.state.keysData);\n\n        var selectType = '';\n        var defaultPath = '';\n\n        if (nextProps.formApps.values.DeploymentType == \"Kubernetes\" || nextProps.formApps.values.DeploymentType == \"Docker\") {\n          selectType = 'Docker';\n          defaultPath = 'docker.mobiledgex.net/OrganizationName/images/AppName:AppVersion';\n        } else if (nextProps.formApps.values.DeploymentType == \"VM\") {\n          selectType = 'Qcow';\n          defaultPath = 'https://artifactory.mobiledgex.net/artifactory/repo-OrganizationName';\n        }\n\n        console.log('nextProps.formApps.values.ImagePath', nextProps.formApps.values.ImagePath, \"::::\", this.props.formApps.values.ImagePath);\n        var ImagePath = nextProps.formApps.values.ImagePath ? nextProps.formApps.values.ImagePath : nextProps.formApps.values.ImagePath != this.props.formApps.values.ImagePath ? '' : defaultPath;\n        _assObj[0].ImageType.items = selectType;\n        itData = selectType == 'Docker' ? 'ImageTypeDocker' : selectType == 'Qcow' ? 'ImageTypeQcow' : selectType;\n\n        if (nextProps.formApps.values.OrganizationName) {\n          ImagePath = ImagePath.replace('OrganizationName', nextProps.formApps.values.DeploymentType == \"VM\" ? nextProps.formApps.values.OrganizationName : nextProps.formApps.values.OrganizationName.toLowerCase());\n        }\n\n        if (nextProps.formApps.values.AppName) {\n          ImagePath = ImagePath.replace('AppName', nextProps.formApps.values.AppName.toLowerCase().replace(/(\\s*)/g, \"\"));\n        }\n\n        if (nextProps.formApps.values.Version) {\n          ImagePath = ImagePath.replace('AppVersion', nextProps.formApps.values.Version.toLowerCase());\n        } //if(ImagePath == '') ImagePath = ''\n\n\n        _assObj[0].ImagePath.items = ImagePath;\n        console.log(\"ImagePathImagePath\", ImagePath);\n        submitImgPath = ImagePath;\n      }\n\n      if (nextProps.editMode) this.setState({\n        editMode: nextProps.editMode\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          open = _this$state3.open,\n          dimmer = _this$state3.dimmer,\n          dummyData = _this$state3.dummyData,\n          editMode = _this$state3.editMode;\n      var hiddenKeys = this.props.hiddenKeys;\n      return React.createElement(\"div\", {\n        className: \"regis_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({\n        draggableHandle: true,\n        layout: this.state.layout,\n        onLayoutChange: this.onLayoutChange\n      }, this.props, {\n        useCSSTransforms: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), this.generateDOM(open, dimmer, dummyData, this.state.keysData, hiddenKeys)), React.createElement(PopDetailViewer, {\n        data: this.state.detailViewData,\n        dimmer: false,\n        open: this.state.openDetail,\n        close: this.closeDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), React.createElement(PopUserViewer, {\n        data: this.state.detailViewData,\n        dimmer: false,\n        open: this.state.openUser,\n        close: this.closeUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(PopAddUserViewer, {\n        data: this.state.selected,\n        dimmer: false,\n        open: this.state.openAdd,\n        close: this.closeAddUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RegistryViewer;\n}(React.Component);\n\nRegistryViewer.defaultProps = {\n  className: \"layout\",\n  items: 20,\n  rowHeight: 30,\n  cols: 12,\n  width: 1600\n};\n\nvar createFormat = function createFormat(data) {\n  return {\n    \"region\": data['Region'],\n    \"app\": {\n      \"key\": {\n        \"developer_key\": {\n          \"name\": data['OrganizationName']\n        },\n        \"name\": data['AppName'],\n        \"version\": data['Version']\n      },\n      \"scale_with_cluster\": data['ScaleWithCluster'],\n      \"deployment\": data['DeploymentType'],\n      \"image_type\": itData,\n      \"image_path\": data['ImagePath'],\n      \"access_ports\": accessport(data),\n      \"default_flavor\": {\n        \"name\": data['DefaultFlavor']\n      },\n      \"cluster\": {\n        \"name\": \"\"\n      },\n      \"auth_public_key\": data['AuthPublicKey'],\n      \"official_fqdn\": data['DefaultFQDN'],\n      \"android_package_name\": data['PackageName'],\n      \"command\": data['Command'],\n      \"deployment_manifest\": data['DeploymentMF']\n    }\n  };\n}; // access_ports combine\n\n\nvar accessport = function accessport(data) {\n  var key = Object.keys(data);\n  var num = 0;\n  var portSum = '';\n  key.map(function (item, i) {\n    if (data['Ports_' + num] && data['Portsselect_' + num]) {\n      portSum = portSum + data['Portsselect_' + num] + \":\" + data['Ports_' + num] + ',';\n    }\n\n    num++;\n  });\n  portSum = portSum.substr(0, portSum.length - 1);\n  return portSum;\n}; //'{\"region\":\"US\",\"app\":{\"key\":{\"developer_key\":{\"name\":\"kgh0505\"},\"name\":\"kghtest22\",\"version\":\"1.0.0\"},\n//\"image_path\":\"registry.mobiledgex.net:5000/mobiledgex/simapp\",\n//\"image_type\":1,\"access_ports\":\"udp:12001,tcp:80,http:7777\",\"default_flavor\":{\"name\":\"x1.medium\"},\"cluster\":{\"name\":\"\"},\"ipaccess\":\"IpAccessShared\",\"command\":\"test\",\"deployment_manifest\":\"test1111\"}}'\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var account = state.registryAccount.account;\n  var dimm = state.btnMnmt;\n  var accountInfo = account ? account + Math.random() * 10000 : null;\n  var dimmInfo = dimm ? dimm : null;\n  var submitVal = null;\n  var selectedDeploymentType = null;\n  var validateValue = null;\n\n  if (state.form.createAppFormDefault) {\n    if (state.form.createAppFormDefault.value) {\n      if (state.form.createAppFormDefault.values.DeploymentType !== \"\") {\n        selectedDeploymentType = state.form.createAppFormDefault.values.DeploymentType;\n      }\n    }\n  }\n\n  if (state.form.createAppFormDefault && state.form.createAppFormDefault.values && state.form.createAppFormDefault.submitSucceeded) {\n    if (state.form && state.form.createAppFormDefault) {\n      var objArr = Object.keys(state.form.createAppFormDefault.values);\n      var first = [];\n      var second = [];\n      var num = [];\n      objArr.map(function (item) {\n        if (item.indexOf('multiF') > -1) {\n          first.push(state.form.createAppFormDefault.values[item]);\n          num.push(item.charAt(item.length - 1));\n        }\n\n        if (item.indexOf('multiS') > -1) {\n          second.push(state.form.createAppFormDefault.values[item]);\n        }\n      });\n\n      if (first.length && second.length && num.length) {\n        num.map(function (item, key) {\n          state.form.createAppFormDefault.values['Ports_' + item] = first[key] + \"-\" + second[key];\n        });\n      }\n    }\n\n    var enableValue = reducer.filterDeleteKey(state.form.createAppFormDefault.values, 'Edit');\n    if (enableValue.ImagePath == \"\") enableValue.ImagePath = submitImgPath;\n    if (enableValue.DeploymentType === \"Docker\") enableValue.DeploymentType = \"docker\";\n    if (enableValue.DeploymentType === \"Kubernetes\") enableValue.DeploymentType = \"kubernetes\";\n    if (enableValue.DeploymentType === \"VM\") enableValue.DeploymentType = \"vm\";\n    if (enableValue.ScaleWithCluster == \"\") enableValue.ScaleWithCluster = false;\n    submitVal = createFormat(enableValue);\n    validateValue = state.form.createAppFormDefault.values;\n  }\n\n  var region = state.changeRegion ? {\n    value: state.changeRegion.region\n  } : {};\n  var formApps = state.form.createAppFormDefault ? {\n    values: state.form.createAppFormDefault.values,\n    submitSucceeded: state.form.createAppFormDefault.submitSucceeded\n  } : {};\n  var regionInfo = state.regionInfo ? state.regionInfo : null;\n  return {\n    accountInfo: accountInfo,\n    dimmInfo: dimmInfo,\n    itemLabel: state.computeItem.item,\n    userToken: state.user.userToken ? state.userToken : null,\n    submitValues: submitVal,\n    region: region,\n    selectOrg: state.selectOrg.org ? state.selectOrg.org : null,\n    computeItem: state.computeItem ? state.computeItem.item : null,\n    userRole: state.showUserRole ? state.showUserRole.role : null,\n    selectedDeploymentType: selectedDeploymentType,\n    validateValue: validateValue,\n    formApps: formApps,\n    editData: state.editInstance.data,\n    regionInfo: regionInfo\n  }; // return (dimm) ? {\n  //     dimmInfo : dimm\n  // } : (account)? {\n  //     accountInfo: account + Math.random()*10000\n  // } : null;\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectDeveloper: function handleInjectDeveloper(data) {\n      dispatch(actions.registDeveloper(data));\n    },\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistryViewer));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registryViewer.js"],"names":["React","Header","Button","Table","Icon","Input","Tab","Item","connect","actions","RGL","WidthProvider","withRouter","PopDetailViewer","PopUserViewer","PopAddUserViewer","ContainerDimensions","_","reducer","MaterialIcon","services","SiteFourCreateFormAppDefault","Alert","service","ReactGridLayout","itData","submitImgPath","headerStyle","backgroundImage","horizon","vertical","layout","_self","colors","panes","menuItem","render","props","overflow","regionf","devoptionsf","userrole","gotoUrl","toggleSubmit","error","console","log","RegistryViewer","receiveResult","result","body","resuorce","resource","handleLoadingSpinner","setState","data","handleAlertInfo","params","app","key","name","setTimeout","show","dim","dimmer","openDetail","close","open","handleInjectDeveloper","closeDetail","closeUser","openUser","closeAddUser","openAdd","handleSort","clickedColumn","state","column","dummyData","direction","sortBy","reverse","roleMark","role","indexOf","getOptionData","region","localStorage","selectMenu","store","PROJECT_INIT","JSON","parse","getMCService","token","userToken","receiveF","generateLayout","activeItem","detailViewData","selected","orgData","selectUse","resultData","validateError","keysData","label","type","necessary","tip","active","items","editDisabled","fakeData","editMode","history","push","pathname","search","location","handleChangeSite","mainPath","subPath","hideHeader","panelParams","keys","selectRole","editData","map","item","i","secondary","pointing","inverted","attached","tabular","p","_keys","headL","visibles","Object","filteredKeys","filterDefine","widthDefault","Math","round","length","arr","FlavorName","initData","updateData","fieldArr","fields","AppFieldImagePath","AppFieldAccessPorts","AppFieldDefaultFlavorName","AppFieldAuthPublicKey","AppFieldCommand","AppFieldDeploymentManifest","AppFieldAndroidPackageName","AppFieldScaleWithCluster","AppFieldOfficialFqdn","ImagePath","image_path","Ports","access_ports","DefaultFlavor","default_flavor","AuthPublicKey","auth_public_key","Command","command","DeploymentMF","deployment_manifest","PackageName","android_package_name","ScaleWithCluster","scale_with_cluster","DefaultFQDN","official_fqdn","Region","devData","assObj","assign","OrganizationName","selectOrg","nextProps","nextContext","accountInfo","regionInfo","submitValues","apps","validateValue","formApps","submitSucceeded","serviceBody","serviceResource","updateFields","createNewApp","values","DeploymentType","selectType","defaultPath","ImageType","replace","toLowerCase","AppName","Version","hiddenKeys","onLayoutChange","generateDOM","Component","defaultProps","className","rowHeight","cols","width","createFormat","accessport","num","portSum","substr","mapStateToProps","account","registryAccount","dimm","btnMnmt","random","dimmInfo","submitVal","selectedDeploymentType","form","createAppFormDefault","value","objArr","first","second","charAt","enableValue","filterDeleteKey","changeRegion","itemLabel","computeItem","user","org","userRole","showUserRole","editInstance","mapDispatchProps","dispatch","changeSite","registDeveloper","loadingSpinner","mode","msg","alertInfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Header, Button, Table, Icon, Input, Tab, Item} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport {withRouter} from \"react-router-dom\";\n\nimport PopDetailViewer from './popDetailViewer';\nimport PopUserViewer from './popUserViewer';\nimport PopAddUserViewer from './popAddUserViewer';\nimport './styles.css';\nimport ContainerDimensions from 'react-container-dimensions'\nimport _ from \"lodash\";\nimport * as reducer from '../utils'\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport SiteFourCreateFormAppDefault from \"./siteFourCreateFormAppDefault\";\nimport Alert from \"react-s-alert\";\nimport * as service from \"../services/service_compute_service\";\nconst ReactGridLayout = WidthProvider(RGL);\n\n\nlet itData = '';\nlet submitImgPath = '';\nconst headerStyle = {\n    backgroundImage: 'url()'\n}\nvar horizon = 6;\nvar vertical = 20;\nvar layout = [\n    {\"w\":19,\"h\":20,\"x\":0,\"y\":0,\"i\":\"0\",\"minW\":5,\"minH\":5,\"moved\":false,\"static\":false, \"title\":\"Developer\"}\n\n]\nlet _self = null;\nconst colors = [\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'teal',\n    'blue',\n    'violet',\n    'purple',\n    'pink',\n    'brown',\n    'grey',\n]\n\nconst panes = [\n    { menuItem: 'App Deployment', render: (props) => <Tab.Pane style={{overflow:'auto'}} attached={false}><SiteFourCreateFormAppDefault data={props} pId={0} getOptionData={props.regionf} flavorData={props.devoptionsf} getUserRole={props.userrole} gotoUrl={props.gotoUrl} toggleSubmit={props.toggleSubmit} validError={props.error} onSubmit={() => console.log('submit form')}/></Tab.Pane> },\n    // { menuItem: 'Docker Deployment', render: (props) => <Tab.Pane attached={false}><SiteFourCreateFormAppDefault data={props} pId={0} onSubmit={() => console.log('submit form')}/></Tab.Pane> },\n    // { menuItem: 'VM Deployment', render: (props) => <Tab.Pane attached={false}><SiteFourCreateFormAppDefault data={props} pId={0} onSubmit={() => console.log('submit form')}/></Tab.Pane> },\n]\nclass RegistryViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        const layout = this.generateLayout();\n        this.state = {\n            layout,\n            open: false,\n            openAdd: false,\n            openDetail:false,\n            dimmer:false,\n            activeItem:'',\n            dummyData : [],\n            detailViewData:null,\n            selected:{},\n            openUser:false,\n            orgData:{},\n            selectUse:null,\n            resultData:null,\n            devoptionsf:[],\n            toggleSubmit:false,\n            validateError:[],\n            keysData:[\n                {\n                    'Region':{label:'Region', type:'RegionSelect', necessary:true, tip:'Allows developer to upload app info to different controllers', active:true, items:[], editDisabled:true},\n                    'OrganizationName':{label:'Organization Name', type:'RenderInputDisabled', necessary:true, tip:'Organization or Company Name that a Developer is part of', active:true, editDisabled:true},\n                    'AppName':{label:'App Name', type:'RenderInputApp', necessary:true, tip:'App name', active:true, editDisabled:true},\n                    'Version':{label:'App Version', type:'RenderInput', necessary:true, tip:'App version', active:true, editDisabled:true},\n                    'DeploymentType':{label:'Deployment Type', type:'RenderSelect', necessary:true, tip:'Deployment type (Kubernetes, Docker, or VM)', active:true, items:['Docker', 'Kubernetes', 'VM'], editDisabled:true},\n                    'ImageType':{label:'Image Type', type:'RenderDT', necessary:true, tip:'ImageType specifies image type of an App',items:''},\n                    'ImagePath':{label:'Image Path', type:'RenderPath', necessary:true, tip:'URI of where image resides', active:true,items:''},\n                    'AuthPublicKey':{label:'Auth Public Key', type:'RenderTextArea', necessary:false, tip:'auth_public_key', active:true},\n                    'DefaultFlavor':{label:'Default Flavor', type:'FlavorSelect', necessary:true, tip:'FlavorKey uniquely identifies a Flavor.', active:true},\n                    'Ports':{label:'Ports', type:'CustomPorts', necessary:false, tip:'Comma separated list of protocol:port pairs that the App listens on i.e. TCP:80,UDP:10002,http:443', active:true, items:['tcp', 'udp']},\n                    'DefaultFQDN':{label:'Official FQDN', type:'RenderInput', necessary:false, tip:'Official FQDN', active:true},\n                    'PackageName':{label:'Package Name', type:'RenderInput', necessary:false, tip:'Package Name', active:true},\n                    // 'IpAccess':{label:'IP Access', type:'IPSelect', necessary:false, tip:'aaa', active:true, items:['IpAccessShared', 'IpAcessDedicaterd']},\n                    'ScaleWithCluster':{label:'Scale With Cluster', type:'RenderCheckbox', necessary:false, items:false},\n                    'Command':{label:'Command', type:'RenderInput', necessary:false, tip:'Command that the container runs to start service', active:true},\n                    'DeploymentMF':{label:'Deployment Manifest', type:'RenderTextArea', necessary:false, tip:'Deployment manifest is the deployment specific manifest file/config For docker deployment, this can be a docker-compose or docker run file For kubernetes deployment, this can be a kubernetes yaml or helm chart file', active:true},\n                },\n                {\n\n                }\n            ],\n            fakeData:[\n                {\n                    'Region':'',\n                    'OrganizationName':'',\n                    'AppName':'',\n                    'Version':'',\n                    'DeploymentType':'',\n                    'ImageType':'',\n                    'ImagePath':'',\n                    'AuthPublicKey':'',\n                    'DefaultFlavor':'',\n                    'Ports':'',\n                    'DefaultFQDN':'',\n                    'PackageName':'',\n                    // 'IpAccess':'',\n                    'ScaleWithCluster':'',\n                    'Command':'',\n                    'DeploymentMF':'',\n                }\n            ],\n            editMode:false\n        };\n\n        //this.hiddenKeys = ['CloudletLocation', 'URI', 'Mapped_ports']\n\n\n    }\n\n    onHandleClick(dim, data) {\n        this.setState({ dimmer:dim, open: true, selected:data })\n    }\n    onHandleClicAdd(dim, data) {\n        this.setState({ dimmer:dim, openAdd: true, selected:data })\n    }\n\n    receiveResult = (result, body, resuorce) => {\n        console.log(\"bodybodybodysresult\",result,\":::\",body,\":::\",resuorce)\n        let resource = ''\n        if(resuorce == 'CreateApp') resource = 'created'\n        else if(resuorce == 'UpdateApp') resource = 'updated'\n\n        _self.props.handleLoadingSpinner(false);\n        this.setState({toggleSubmit:false})\n        if(result.data.error) {\n            if(result.data.error == 'Key already exists') result.data.error = 'App already exists';\n            this.props.handleAlertInfo('error',result.data.error)\n        } else {\n            //this.props.gotoApp();\n            this.props.handleAlertInfo('success','Your application '+body.params.app.key.name+' '+resource+' successfully')\n            setTimeout(() => {\n                this.gotoUrl();\n            }, 1000)\n            //this.gotoUrl();\n            //_self.props.handleChangeSite({mainPath:'/site4', subPath: 'pg=6'})\n        }\n    }\n\n    show = (dim) => this.setState({ dimmer:dim, openDetail: true })\n    close = () => {\n        this.setState({ open: false })\n        this.props.handleInjectDeveloper(null)\n    }\n    closeDetail = () => {\n        this.setState({ openDetail: false })\n    }\n    closeUser = () => {\n        this.setState({ openUser: false })\n    }\n    closeAddUser = () => {\n        this.setState({ openAdd: false })\n    }\n\n\n    gotoUrl() {\n        _self.props.history.push({\n            pathname: '/site4',\n            search: 'pg=5'\n        });\n        _self.props.history.location.search = 'pg=5';\n        _self.props.handleChangeSite({mainPath:'/site4', subPath: 'pg=5'})\n    }\n\n    generateDOM(open, dimmer, data, keysData, hideHeader) {\n\n        let panelParams = {data:data, keys:keysData, regionf:this.getOptionData, devoptionsf:this.state.devoptionsf, userrole:localStorage.selectRole, editMode:this.state.editMode, editData:this.props.editData}\n\n        return layout.map((item, i) => (\n\n            (i === 0)?\n                <div className=\"round_panel\" key={i}>\n                    <div className=\"grid_table\">\n\n                        <Tab className=\"grid_tabs\" menu={{ secondary: true, pointing: true, inverted: true, attached: false, tabular: false }} panes={panes}{...panelParams} gotoUrl={this.gotoUrl} toggleSubmit={this.state.toggleSubmit} error={this.state.validateError} />\n\n                    </div>\n                </div>\n                :\n                <div className=\"round_panel\" key={i}>\n\n                </div>\n\n\n        ))\n    }\n\n    generateLayout() {\n        const p = this.props;\n\n        return layout\n    }\n    handleSort = clickedColumn => () => {\n        const { column, dummyData, direction } = this.state\n\n        if (column !== clickedColumn) {\n            this.setState({\n                column: clickedColumn,\n                dummyData: _.sortBy(dummyData, [clickedColumn]),\n                direction: 'ascending',\n            })\n\n            return\n        }\n\n        this.setState({\n            dummyData: dummyData.reverse(),\n            direction: direction === 'ascending' ? 'descending' : 'ascending',\n        })\n    }\n    makeHeader(_keys, headL, visibles) {\n        const { column, direction } = this.state\n        let keys = Object.keys(_keys);\n        //hide column filtered...\n        let filteredKeys = (visibles) ? reducer.filterDefine(keys, visibles) : keys;\n\n        let widthDefault = Math.round(16/filteredKeys.length);\n        return filteredKeys.map((key, i) => (\n            (i === filteredKeys.length -1) ?\n                <Table.HeaderCell width={3} textAlign='center' sorted={column === key ? direction : null} onClick={this.handleSort(key)}>\n                    {key}\n                </Table.HeaderCell>\n                :\n                <Table.HeaderCell textAlign='center' width={(headL)?headL[i]:widthDefault} sorted={column === key ? direction : null} onClick={this.handleSort(key)}>\n                    {key}\n                </Table.HeaderCell>\n        ));\n    }\n\n    onLayoutChange(layout) {\n        //this.props.onLayoutChange(layout);\n    }\n    onPortClick() {\n\n    }\n    detailView(item) {\n        if(!item['UserName']){\n            this.setState({detailViewData:item, openDetail:true})\n        } else {\n            this.setState({detailViewData:item, openUser:true})\n        }\n    }\n    roleMark = (role) => (\n        (role.indexOf('Developer')!==-1 && role.indexOf('Manager')!==-1) ? <div className=\"mark markD markM\">M</div> :\n            (role.indexOf('Developer')!==-1 && role.indexOf('Contributor')!==-1) ? <div className=\"mark markD markC\">C</div> :\n                (role.indexOf('Developer')!==-1 && role.indexOf('Viewer')!==-1) ? <div className=\"mark markD markV\">V</div> :\n                    (role.indexOf('Operator')!==-1 && role.indexOf('Manager')!==-1) ? <div className=\"mark markO markM\">M</div> :\n                        (role.indexOf('Operator')!==-1 && role.indexOf('Contributor')!==-1) ? <div className=\"mark markO markC\">C</div> :\n                            (role.indexOf('Operator')!==-1 && role.indexOf('Viewer')!==-1) ? <div className=\"mark markO markV\">V</div> : <div></div>\n    )\n\n    getOptionData = (region) => {\n        if(localStorage.selectMenu == \"Apps\") {\n            let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n            // clusterFlavor\n            service.getMCService('ShowFlavor',{token:store.userToken,region:region}, _self.receiveF)\n        }\n    }\n\n    receiveF(result) {\n        let arr = []\n        result.map((item,i) => {\n            arr.push(item.FlavorName)\n        })\n        _self.setState({devoptionsf: arr});\n    }\n\n    updateFields(initData,updateData){\n        let fieldArr = [];\n        const fields = {\n            AppFieldImagePath:\"4\",\n            AppFieldAccessPorts:\"7\",\n            AppFieldDefaultFlavorName:\"9.1\",\n            AppFieldAuthPublicKey:\"12\",\n            AppFieldCommand:\"13\",\n            AppFieldDeploymentManifest:\"16\",\n            AppFieldAndroidPackageName:\"18\",\n            AppFieldScaleWithCluster:\"22\",\n            AppFieldOfficialFqdn:\"25\"\n        }\n\n        if(initData.ImagePath !== updateData.image_path) fieldArr.push(fields.AppFieldImagePath)\n        if(initData.Ports !== updateData.access_ports) fieldArr.push(fields.AppFieldAccessPorts)\n        if(initData.DefaultFlavor !== updateData.default_flavor.name) fieldArr.push(fields.AppFieldDefaultFlavorName)\n        if(initData.AuthPublicKey !== updateData.auth_public_key) fieldArr.push(fields.AppFieldAuthPublicKey)\n        if(initData.Command !== updateData.command) fieldArr.push(fields.AppFieldCommand)\n        if(initData.DeploymentMF !== updateData.deployment_manifest) fieldArr.push(fields.AppFieldDeploymentManifest)\n        if(initData.PackageName !== updateData.android_package_name) fieldArr.push(fields.AppFieldAndroidPackageName)\n        if(initData.ScaleWithCluster !== updateData.scale_with_cluster) fieldArr.push(fields.AppFieldScaleWithCluster)\n        if(initData.DefaultFQDN !== updateData.official_fqdn) fieldArr.push(fields.AppFieldOfficialFqdn)\n\n        return fieldArr;\n\n    }\n\n\n    componentDidMount() {\n        //edit(call flavorlist)\n        if(this.props.editMode && this.props.editData){\n            let region = this.props.editData.Region;\n            this.getOptionData(region);\n        }\n        if(this.props.devData.length > 0) {\n            this.setState({dummyData:this.props.devData, resultData:(!this.state.resultData)?this.props.devData:this.state.resultData})\n        } else {\n            this.setState({dummyData:this.state.fakeData, resultData:(!this.state.resultData)?this.props.devData:this.state.resultData})\n        }\n\n        /************\n         * set Organization Name\n         * **********/\n        let assObj = Object.assign([], this.state.fakeData);\n        assObj[0].OrganizationName = localStorage.selectOrg;\n        //assObj[0].ImagePath.items = \"docker.mobiledgex.net/OrganizationName/images/AppName:AppVersion\";\n        //this.setState({fakeData:assObj});\n\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.accountInfo){\n            this.setState({ dimmer:'blurring', open: true })\n        }\n        if(nextProps.regionInfo.region.length){\n            let assObj = Object.assign([], this.state.keysData);\n            assObj[0].Region.items = nextProps.regionInfo.region;\n        }\n        ////////\n        if(nextProps.devData.length > 1) {\n            this.setState({dummyData:nextProps.devData, resultData:(!this.state.resultData)?nextProps.devData:this.state.resultData})\n        } else {\n            this.setState({dummyData:this.state.fakeData, resultData:(!this.state.resultData)?nextProps.devData:this.state.resultData})\n        }\n        ///////\n\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        this.setState({toggleSubmit:false});\n        if(nextProps.submitValues && !this.state.toggleSubmit) {\n            const apps = ['Region','OrganizationName','AppName','Version','DeploymentType','DefaultFlavor']\n            let error = [];\n            apps.map((item) => {\n                if(!nextProps.validateValue[item]) {\n                    error.push(item)\n                }\n            })\n            if(nextProps.formApps.submitSucceeded && error.length == 0){\n                let serviceBody = {}\n                let serviceResource = 'CreateApp'\n                if(nextProps.editMode){\n                    serviceResource = 'UpdateApp'\n                    nextProps.submitValues.app['fields'] = this.updateFields(nextProps.editData,nextProps.submitValues.app)\n                }\n                this.setState({toggleSubmit:true,validateError:error});\n                this.props.handleLoadingSpinner(true);\n                //TODO: // 20190430 add spinner...(loading)\n                serviceBody = {\n                    \"token\":store ? store.userToken : 'null',\n                    \"params\": nextProps.submitValues\n                }\n\n                services.createNewApp(serviceResource, serviceBody, this.receiveResult)\n            } else {\n                this.setState({validateError:error,toggleSubmit:true})\n            }\n\n        }\n\n        if(nextProps.formApps.values && nextProps.formApps.values.DeploymentType) {\n            let assObj = Object.assign([], this.state.keysData);\n            let selectType = '';\n            let defaultPath = '';\n            if(nextProps.formApps.values.DeploymentType == \"Kubernetes\" || nextProps.formApps.values.DeploymentType == \"Docker\") {\n                selectType = 'Docker';\n                defaultPath = 'docker.mobiledgex.net/OrganizationName/images/AppName:AppVersion';\n            } else if(nextProps.formApps.values.DeploymentType == \"VM\") {\n                selectType = 'Qcow';\n                defaultPath = 'https://artifactory.mobiledgex.net/artifactory/repo-OrganizationName';\n            }\n            console.log('nextProps.formApps.values.ImagePath',nextProps.formApps.values.ImagePath,\"::::\",this.props.formApps.values.ImagePath)\n            let ImagePath = (nextProps.formApps.values.ImagePath)? nextProps.formApps.values.ImagePath : (nextProps.formApps.values.ImagePath != this.props.formApps.values.ImagePath)? '': defaultPath;\n\n            assObj[0].ImageType.items = selectType;\n            itData = (selectType == 'Docker') ? 'ImageTypeDocker' :\n                (selectType == 'Qcow') ? 'ImageTypeQcow' :\n                    selectType;\n            if(nextProps.formApps.values.OrganizationName){\n                ImagePath = ImagePath.replace('OrganizationName',(nextProps.formApps.values.DeploymentType == \"VM\")?nextProps.formApps.values.OrganizationName:nextProps.formApps.values.OrganizationName.toLowerCase())\n            }\n            if(nextProps.formApps.values.AppName) {\n                ImagePath = ImagePath.replace('AppName', nextProps.formApps.values.AppName.toLowerCase().replace(/(\\s*)/g, \"\"))\n            }\n            if(nextProps.formApps.values.Version) {\n                ImagePath = ImagePath.replace('AppVersion',nextProps.formApps.values.Version.toLowerCase())\n            }\n            //if(ImagePath == '') ImagePath = ''\n            assObj[0].ImagePath.items = ImagePath;\n            console.log(\"ImagePathImagePath\",ImagePath)\n            submitImgPath = ImagePath;\n\n        }\n\n        if(nextProps.editMode) this.setState({editMode:nextProps.editMode})\n    }\n\n    render() {\n        const { open, dimmer, dummyData, editMode } = this.state;\n        const { hiddenKeys } = this.props;\n        return (\n            <div className=\"regis_container\">\n                {/*<RegistNewListItem data={this.state.dummyData} resultData={this.state.resultData} dimmer={this.state.dimmer} open={this.state.open} selected={this.state.selected} close={this.close}/>*/}\n                <div\n                    draggableHandle\n                    layout={this.state.layout}\n                    onLayoutChange={this.onLayoutChange}\n                    {...this.props}\n                    useCSSTransforms={false}\n                >\n                    {this.generateDOM(open, dimmer, dummyData, this.state.keysData, hiddenKeys)}\n                </div>\n                <PopDetailViewer data={this.state.detailViewData} dimmer={false} open={this.state.openDetail} close={this.closeDetail}></PopDetailViewer>\n                <PopUserViewer data={this.state.detailViewData} dimmer={false} open={this.state.openUser} close={this.closeUser}></PopUserViewer>\n                <PopAddUserViewer data={this.state.selected} dimmer={false} open={this.state.openAdd} close={this.closeAddUser}></PopAddUserViewer>\n            </div>\n        );\n    }\n    static defaultProps = {\n        className: \"layout\",\n        items: 20,\n        rowHeight: 30,\n        cols: 12,\n        width: 1600\n    };\n}\nconst createFormat = (data) => (\n    {\n        \"region\":data['Region'],\n        \"app\":\n            {\n                \"key\":{\"developer_key\":{\"name\":data['OrganizationName']},\"name\":data['AppName'],\"version\":data['Version']},\n                \"scale_with_cluster\":data['ScaleWithCluster'],\n                \"deployment\":data['DeploymentType'],\n                \"image_type\":itData,\n                \"image_path\":data['ImagePath'],\n                \"access_ports\":accessport(data),\n                \"default_flavor\":{\"name\":data['DefaultFlavor']},\n                \"cluster\":{\"name\":\"\"},\n                \"auth_public_key\":data['AuthPublicKey'],\n                \"official_fqdn\":data['DefaultFQDN'],\n                \"android_package_name\":data['PackageName'],\n                \"command\":data['Command'],\n                \"deployment_manifest\":data['DeploymentMF']\n            }\n    }\n)\n// access_ports combine\nconst accessport = (data) => {\n    let key = Object.keys(data);\n    let num = 0;\n    let portSum = '';\n    key.map((item,i) => {\n        if(data['Ports_'+num] && data['Portsselect_'+num]){\n            portSum = portSum + data['Portsselect_'+num]+\":\"+data['Ports_'+num]+',';\n        }\n        num++;\n    })\n    portSum = portSum.substr(0, portSum.length -1)\n    return portSum;\n}\n\n//'{\"region\":\"US\",\"app\":{\"key\":{\"developer_key\":{\"name\":\"kgh0505\"},\"name\":\"kghtest22\",\"version\":\"1.0.0\"},\n//\"image_path\":\"registry.mobiledgex.net:5000/mobiledgex/simapp\",\n//\"image_type\":1,\"access_ports\":\"udp:12001,tcp:80,http:7777\",\"default_flavor\":{\"name\":\"x1.medium\"},\"cluster\":{\"name\":\"\"},\"ipaccess\":\"IpAccessShared\",\"command\":\"test\",\"deployment_manifest\":\"test1111\"}}'\nconst mapStateToProps = (state) => {\n\n\n    let account = state.registryAccount.account;\n    let dimm =  state.btnMnmt;\n    let accountInfo = account ? account + Math.random()*10000 : null;\n    let dimmInfo = dimm ? dimm : null;\n    let submitVal = null;\n    let selectedDeploymentType = null;\n    let validateValue = null;\n    if(state.form.createAppFormDefault) {\n        if(state.form.createAppFormDefault.value) {\n            if(state.form.createAppFormDefault.values.DeploymentType !== \"\") {\n                selectedDeploymentType = state.form.createAppFormDefault.values.DeploymentType;\n            }\n        }\n    }\n\n    if(state.form.createAppFormDefault && state.form.createAppFormDefault.values && state.form.createAppFormDefault.submitSucceeded) {\n        if(state.form && state.form.createAppFormDefault){\n            let objArr = Object.keys(state.form.createAppFormDefault.values)\n            let first = [];\n            let second = [];\n            let num = [];\n            objArr.map((item) => {\n                if(item.indexOf('multiF')>-1){\n                    first.push(state.form.createAppFormDefault.values[item]);\n                    num.push(item.charAt(item.length-1));\n                }\n                if(item.indexOf('multiS')>-1){\n                    second.push(state.form.createAppFormDefault.values[item]);\n                }\n            })\n            if(first.length && second.length && num.length){\n                num.map((item,key) => {\n                    state.form.createAppFormDefault.values['Ports_'+item] = first[key]+\"-\"+second[key];\n                })\n            }\n        }\n\n        let enableValue = reducer.filterDeleteKey(state.form.createAppFormDefault.values, 'Edit')\n\n        if(enableValue.ImagePath == \"\") enableValue.ImagePath = submitImgPath;\n        if(enableValue.DeploymentType === \"Docker\") enableValue.DeploymentType = \"docker\"\n        if(enableValue.DeploymentType === \"Kubernetes\") enableValue.DeploymentType = \"kubernetes\"\n        if(enableValue.DeploymentType === \"VM\") enableValue.DeploymentType = \"vm\"\n        if(enableValue.ScaleWithCluster == \"\") enableValue.ScaleWithCluster = false\n        submitVal = createFormat(enableValue)\n        validateValue = state.form.createAppFormDefault.values;\n    }\n\n    let region = state.changeRegion\n        ? {\n            value: state.changeRegion.region\n        }\n        : {};\n\n    let formApps= state.form.createAppFormDefault\n        ? {\n            values: state.form.createAppFormDefault.values,\n            submitSucceeded: state.form.createAppFormDefault.submitSucceeded\n        }\n        : {};\n    let regionInfo = (state.regionInfo)?state.regionInfo:null;\n    return {\n        accountInfo,\n        dimmInfo,\n        itemLabel: state.computeItem.item,\n        userToken : (state.user.userToken) ? state.userToken: null,\n        submitValues: submitVal,\n        region: region,\n        selectOrg : state.selectOrg.org?state.selectOrg.org:null,\n        computeItem : state.computeItem?state.computeItem.item:null,\n        userRole : state.showUserRole?state.showUserRole.role:null,\n        selectedDeploymentType : selectedDeploymentType,\n        validateValue:validateValue,\n        formApps : formApps,\n        editData : state.editInstance.data,\n        regionInfo: regionInfo\n    }\n\n    // return (dimm) ? {\n    //     dimmInfo : dimm\n    // } : (account)? {\n    //     accountInfo: account + Math.random()*10000\n    // } : null;\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectDeveloper: (data) => { dispatch(actions.registDeveloper(data))},\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistryViewer));\n\n\n"]},"metadata":{},"sourceType":"module"}