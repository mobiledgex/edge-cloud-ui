{"ast":null,"code":"//! moment-timezone.js\n//! version : 0.5.13\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n(function (root, factory) {\n  \"use strict\";\n  /*global define*/\n\n  if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('moment')); // Node\n  } else {\n    factory(root.moment); // Browser\n  }\n})(this, function (moment) {\n  \"use strict\"; // Do not load moment-timezone a second time.\n  // if (moment.tz !== undefined) {\n  // \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n  // \treturn moment;\n  // }\n\n  var VERSION = \"0.5.13\",\n      zones = {},\n      links = {},\n      names = {},\n      guesses = {},\n      cachedGuess,\n      momentVersion = moment.version.split('.'),\n      major = +momentVersion[0],\n      minor = +momentVersion[1]; // Moment.js version check\n\n  if (major < 2 || major === 2 && minor < 6) {\n    logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n  }\n  /************************************\r\n  \tUnpacking\r\n  ************************************/\n\n\n  function charCodeToInt(charCode) {\n    if (charCode > 96) {\n      return charCode - 87;\n    } else if (charCode > 64) {\n      return charCode - 29;\n    }\n\n    return charCode - 48;\n  }\n\n  function unpackBase60(string) {\n    var i = 0,\n        parts = string.split('.'),\n        whole = parts[0],\n        fractional = parts[1] || '',\n        multiplier = 1,\n        num,\n        out = 0,\n        sign = 1; // handle negative numbers\n\n    if (string.charCodeAt(0) === 45) {\n      i = 1;\n      sign = -1;\n    } // handle digits before the decimal\n\n\n    for (i; i < whole.length; i++) {\n      num = charCodeToInt(whole.charCodeAt(i));\n      out = 60 * out + num;\n    } // handle digits after the decimal\n\n\n    for (i = 0; i < fractional.length; i++) {\n      multiplier = multiplier / 60;\n      num = charCodeToInt(fractional.charCodeAt(i));\n      out += num * multiplier;\n    }\n\n    return out * sign;\n  }\n\n  function arrayToInt(array) {\n    for (var i = 0; i < array.length; i++) {\n      array[i] = unpackBase60(array[i]);\n    }\n  }\n\n  function intToUntil(array, length) {\n    for (var i = 0; i < length; i++) {\n      array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000); // minutes to milliseconds\n    }\n\n    array[length - 1] = Infinity;\n  }\n\n  function mapIndices(source, indices) {\n    var out = [],\n        i;\n\n    for (i = 0; i < indices.length; i++) {\n      out[i] = source[indices[i]];\n    }\n\n    return out;\n  }\n\n  function unpack(string) {\n    var data = string.split('|'),\n        offsets = data[2].split(' '),\n        indices = data[3].split(''),\n        untils = data[4].split(' ');\n    arrayToInt(offsets);\n    arrayToInt(indices);\n    arrayToInt(untils);\n    intToUntil(untils, indices.length);\n    return {\n      name: data[0],\n      abbrs: mapIndices(data[1].split(' '), indices),\n      offsets: mapIndices(offsets, indices),\n      untils: untils,\n      population: data[5] | 0\n    };\n  }\n  /************************************\r\n  \tZone object\r\n  ************************************/\n\n\n  function Zone(packedString) {\n    if (packedString) {\n      this._set(unpack(packedString));\n    }\n  }\n\n  Zone.prototype = {\n    _set: function _set(unpacked) {\n      this.name = unpacked.name;\n      this.abbrs = unpacked.abbrs;\n      this.untils = unpacked.untils;\n      this.offsets = unpacked.offsets;\n      this.population = unpacked.population;\n    },\n    _index: function _index(timestamp) {\n      var target = +timestamp,\n          untils = this.untils,\n          i;\n\n      for (i = 0; i < untils.length; i++) {\n        if (target < untils[i]) {\n          return i;\n        }\n      }\n    },\n    parse: function parse(timestamp) {\n      var target = +timestamp,\n          offsets = this.offsets,\n          untils = this.untils,\n          max = untils.length - 1,\n          offset,\n          offsetNext,\n          offsetPrev,\n          i;\n\n      for (i = 0; i < max; i++) {\n        offset = offsets[i];\n        offsetNext = offsets[i + 1];\n        offsetPrev = offsets[i ? i - 1 : i];\n\n        if (offset < offsetNext && tz.moveAmbiguousForward) {\n          offset = offsetNext;\n        } else if (offset > offsetPrev && tz.moveInvalidForward) {\n          offset = offsetPrev;\n        }\n\n        if (target < untils[i] - offset * 60000) {\n          return offsets[i];\n        }\n      }\n\n      return offsets[max];\n    },\n    abbr: function abbr(mom) {\n      return this.abbrs[this._index(mom)];\n    },\n    offset: function offset(mom) {\n      return this.offsets[this._index(mom)];\n    }\n  };\n  /************************************\r\n  \tCurrent Timezone\r\n  ************************************/\n\n  function OffsetAt(at) {\n    var timeString = at.toTimeString();\n    var abbr = timeString.match(/\\([a-z ]+\\)/i);\n\n    if (abbr && abbr[0]) {\n      // 17:56:31 GMT-0600 (CST)\n      // 17:56:31 GMT-0600 (Central Standard Time)\n      abbr = abbr[0].match(/[A-Z]/g);\n      abbr = abbr ? abbr.join('') : undefined;\n    } else {\n      // 17:56:31 CST\n      // 17:56:31 GMT+0800 (台北標準時間)\n      abbr = timeString.match(/[A-Z]{3,5}/g);\n      abbr = abbr ? abbr[0] : undefined;\n    }\n\n    if (abbr === 'GMT') {\n      abbr = undefined;\n    }\n\n    this.at = +at;\n    this.abbr = abbr;\n    this.offset = at.getTimezoneOffset();\n  }\n\n  function ZoneScore(zone) {\n    this.zone = zone;\n    this.offsetScore = 0;\n    this.abbrScore = 0;\n  }\n\n  ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n    this.offsetScore += Math.abs(this.zone.offset(offsetAt.at) - offsetAt.offset);\n\n    if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n      this.abbrScore++;\n    }\n  };\n\n  function findChange(low, high) {\n    var mid, diff;\n\n    while (diff = ((high.at - low.at) / 12e4 | 0) * 6e4) {\n      mid = new OffsetAt(new Date(low.at + diff));\n\n      if (mid.offset === low.offset) {\n        low = mid;\n      } else {\n        high = mid;\n      }\n    }\n\n    return low;\n  }\n\n  function userOffsets() {\n    var startYear = new Date().getFullYear() - 2,\n        last = new OffsetAt(new Date(startYear, 0, 1)),\n        offsets = [last],\n        change,\n        next,\n        i;\n\n    for (i = 1; i < 48; i++) {\n      next = new OffsetAt(new Date(startYear, i, 1));\n\n      if (next.offset !== last.offset) {\n        change = findChange(last, next);\n        offsets.push(change);\n        offsets.push(new OffsetAt(new Date(change.at + 6e4)));\n      }\n\n      last = next;\n    }\n\n    for (i = 0; i < 4; i++) {\n      offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n      offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n    }\n\n    return offsets;\n  }\n\n  function sortZoneScores(a, b) {\n    if (a.offsetScore !== b.offsetScore) {\n      return a.offsetScore - b.offsetScore;\n    }\n\n    if (a.abbrScore !== b.abbrScore) {\n      return a.abbrScore - b.abbrScore;\n    }\n\n    return b.zone.population - a.zone.population;\n  }\n\n  function addToGuesses(name, offsets) {\n    var i, offset;\n    arrayToInt(offsets);\n\n    for (i = 0; i < offsets.length; i++) {\n      offset = offsets[i];\n      guesses[offset] = guesses[offset] || {};\n      guesses[offset][name] = true;\n    }\n  }\n\n  function guessesForUserOffsets(offsets) {\n    var offsetsLength = offsets.length,\n        filteredGuesses = {},\n        out = [],\n        i,\n        j,\n        guessesOffset;\n\n    for (i = 0; i < offsetsLength; i++) {\n      guessesOffset = guesses[offsets[i].offset] || {};\n\n      for (j in guessesOffset) {\n        if (guessesOffset.hasOwnProperty(j)) {\n          filteredGuesses[j] = true;\n        }\n      }\n    }\n\n    for (i in filteredGuesses) {\n      if (filteredGuesses.hasOwnProperty(i)) {\n        out.push(names[i]);\n      }\n    }\n\n    return out;\n  }\n\n  function rebuildGuess() {\n    // use Intl API when available and returning valid time zone\n    try {\n      var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n      if (intlName) {\n        var name = names[normalizeName(intlName)];\n\n        if (name) {\n          return name;\n        }\n\n        logError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n      }\n    } catch (e) {// Intl unavailable, fall back to manual guessing.\n    }\n\n    var offsets = userOffsets(),\n        offsetsLength = offsets.length,\n        guesses = guessesForUserOffsets(offsets),\n        zoneScores = [],\n        zoneScore,\n        i,\n        j;\n\n    for (i = 0; i < guesses.length; i++) {\n      zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\n      for (j = 0; j < offsetsLength; j++) {\n        zoneScore.scoreOffsetAt(offsets[j]);\n      }\n\n      zoneScores.push(zoneScore);\n    }\n\n    zoneScores.sort(sortZoneScores);\n    return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n  }\n\n  function guess(ignoreCache) {\n    if (!cachedGuess || ignoreCache) {\n      cachedGuess = rebuildGuess();\n    }\n\n    return cachedGuess;\n  }\n  /************************************\r\n  \tGlobal Methods\r\n  ************************************/\n\n\n  function normalizeName(name) {\n    return (name || '').toLowerCase().replace(/\\//g, '_');\n  }\n\n  function addZone(packed) {\n    var i, name, split, normalized;\n\n    if (typeof packed === \"string\") {\n      packed = [packed];\n    }\n\n    for (i = 0; i < packed.length; i++) {\n      split = packed[i].split('|');\n      name = split[0];\n      normalized = normalizeName(name);\n      zones[normalized] = packed[i];\n      names[normalized] = name;\n\n      if (split[5]) {\n        addToGuesses(normalized, split[2].split(' '));\n      }\n    }\n  }\n\n  function getZone(name, caller) {\n    name = normalizeName(name);\n    var zone = zones[name];\n    var link;\n\n    if (zone instanceof Zone) {\n      return zone;\n    }\n\n    if (typeof zone === 'string') {\n      zone = new Zone(zone);\n      zones[name] = zone;\n      return zone;\n    } // Pass getZone to prevent recursion more than 1 level deep\n\n\n    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n      zone = zones[name] = new Zone();\n\n      zone._set(link);\n\n      zone.name = names[name];\n      return zone;\n    }\n\n    return null;\n  }\n\n  function getNames() {\n    var i,\n        out = [];\n\n    for (i in names) {\n      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n        out.push(names[i]);\n      }\n    }\n\n    return out.sort();\n  }\n\n  function addLink(aliases) {\n    var i, alias, normal0, normal1;\n\n    if (typeof aliases === \"string\") {\n      aliases = [aliases];\n    }\n\n    for (i = 0; i < aliases.length; i++) {\n      alias = aliases[i].split('|');\n      normal0 = normalizeName(alias[0]);\n      normal1 = normalizeName(alias[1]);\n      links[normal0] = normal1;\n      names[normal0] = alias[0];\n      links[normal1] = normal0;\n      names[normal1] = alias[1];\n    }\n  }\n\n  function loadData(data) {\n    addZone(data.zones);\n    addLink(data.links);\n    tz.dataVersion = data.version;\n  }\n\n  function zoneExists(name) {\n    if (!zoneExists.didShowError) {\n      zoneExists.didShowError = true;\n      logError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n    }\n\n    return !!getZone(name);\n  }\n\n  function needsOffset(m) {\n    return !!(m._a && m._tzm === undefined);\n  }\n\n  function logError(message) {\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message);\n    }\n  }\n  /************************************\r\n  \tmoment.tz namespace\r\n  ************************************/\n\n\n  function tz(input) {\n    var args = Array.prototype.slice.call(arguments, 0, -1),\n        name = arguments[arguments.length - 1],\n        zone = getZone(name),\n        out = moment.utc.apply(null, args);\n\n    if (zone && !moment.isMoment(input) && needsOffset(out)) {\n      out.add(zone.parse(out), 'minutes');\n    }\n\n    out.tz(name);\n    return out;\n  }\n\n  tz.version = VERSION;\n  tz.dataVersion = '';\n  tz._zones = zones;\n  tz._links = links;\n  tz._names = names;\n  tz.add = addZone;\n  tz.link = addLink;\n  tz.load = loadData;\n  tz.zone = getZone;\n  tz.zoneExists = zoneExists; // deprecated in 0.1.0\n\n  tz.guess = guess;\n  tz.names = getNames;\n  tz.Zone = Zone;\n  tz.unpack = unpack;\n  tz.unpackBase60 = unpackBase60;\n  tz.needsOffset = needsOffset;\n  tz.moveInvalidForward = true;\n  tz.moveAmbiguousForward = false;\n  /************************************\r\n  \tInterface with Moment.js\r\n  ************************************/\n\n  var fn = moment.fn;\n  moment.tz = tz;\n  moment.defaultZone = null;\n\n  moment.updateOffset = function (mom, keepTime) {\n    var zone = moment.defaultZone,\n        offset;\n\n    if (mom._z === undefined) {\n      if (zone && needsOffset(mom) && !mom._isUTC) {\n        mom._d = moment.utc(mom._a)._d;\n        mom.utc().add(zone.parse(mom), 'minutes');\n      }\n\n      mom._z = zone;\n    }\n\n    if (mom._z) {\n      offset = mom._z.offset(mom);\n\n      if (Math.abs(offset) < 16) {\n        offset = offset / 60;\n      }\n\n      if (mom.utcOffset !== undefined) {\n        mom.utcOffset(-offset, keepTime);\n      } else {\n        mom.zone(offset, keepTime);\n      }\n    }\n  };\n\n  fn.tz = function (name) {\n    if (name) {\n      this._z = getZone(name);\n\n      if (this._z) {\n        moment.updateOffset(this);\n      } else {\n        logError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n      }\n\n      return this;\n    }\n\n    if (this._z) {\n      return this._z.name;\n    }\n  };\n\n  function abbrWrap(old) {\n    return function () {\n      if (this._z) {\n        return this._z.abbr(this);\n      }\n\n      return old.call(this);\n    };\n  }\n\n  function resetZoneWrap(old) {\n    return function () {\n      this._z = null;\n      return old.apply(this, arguments);\n    };\n  }\n\n  fn.zoneName = abbrWrap(fn.zoneName);\n  fn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n  fn.utc = resetZoneWrap(fn.utc);\n\n  moment.tz.setDefault = function (name) {\n    if (major < 2 || major === 2 && minor < 9) {\n      logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n    }\n\n    moment.defaultZone = name ? getZone(name) : null;\n    return moment;\n  }; // Cloning a moment should include the _z property.\n\n\n  var momentProperties = moment.momentProperties;\n\n  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n    // moment 2.8.1+\n    momentProperties.push('_z');\n    momentProperties.push('_a');\n  } else if (momentProperties) {\n    // moment 2.7.0\n    momentProperties._z = null;\n  } // INJECT DATA\n\n\n  return moment;\n});","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/moment-timezone/moment-timezone.js"],"names":["root","factory","define","amd","module","exports","require","moment","VERSION","zones","links","names","guesses","cachedGuess","momentVersion","version","split","major","minor","logError","charCodeToInt","charCode","unpackBase60","string","i","parts","whole","fractional","multiplier","num","out","sign","charCodeAt","length","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbrs","population","Zone","packedString","_set","prototype","unpacked","_index","timestamp","target","parse","max","offset","offsetNext","offsetPrev","tz","moveAmbiguousForward","moveInvalidForward","abbr","mom","OffsetAt","at","timeString","toTimeString","match","join","undefined","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","scoreOffsetAt","offsetAt","abs","replace","findChange","low","high","mid","diff","Date","userOffsets","startYear","getFullYear","last","change","next","push","sortZoneScores","a","b","addToGuesses","guessesForUserOffsets","offsetsLength","filteredGuesses","j","guessesOffset","hasOwnProperty","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","e","zoneScores","zoneScore","getZone","sort","guess","ignoreCache","toLowerCase","addZone","packed","normalized","caller","link","getNames","addLink","aliases","alias","normal0","normal1","loadData","dataVersion","zoneExists","didShowError","needsOffset","m","_a","_tzm","message","console","error","input","args","Array","slice","call","arguments","utc","apply","isMoment","add","_zones","_links","_names","load","fn","defaultZone","updateOffset","keepTime","_z","_isUTC","_d","utcOffset","abbrWrap","old","resetZoneWrap","zoneName","zoneAbbr","setDefault","momentProperties","Object","toString"],"mappings":"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","sourcesContent":["//! moment-timezone.js\r\n//! version : 0.5.13\r\n//! Copyright (c) JS Foundation and other contributors\r\n//! license : MIT\r\n//! github.com/moment/moment-timezone\r\n\r\n(function (root, factory) {\r\n\t\"use strict\";\r\n\r\n\t/*global define*/\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(['moment'], factory);                 // AMD\r\n\t} else if (typeof module === 'object' && module.exports) {\r\n\t\tmodule.exports = factory(require('moment')); // Node\r\n\t} else {\r\n\t\tfactory(root.moment);                        // Browser\r\n\t}\r\n}(this, function (moment) {\r\n\t\"use strict\";\r\n\r\n\t// Do not load moment-timezone a second time.\r\n\t// if (moment.tz !== undefined) {\r\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\r\n\t// \treturn moment;\r\n\t// }\r\n\r\n\tvar VERSION = \"0.5.13\",\r\n\t\tzones = {},\r\n\t\tlinks = {},\r\n\t\tnames = {},\r\n\t\tguesses = {},\r\n\t\tcachedGuess,\r\n\r\n\t\tmomentVersion = moment.version.split('.'),\r\n\t\tmajor = +momentVersion[0],\r\n\t\tminor = +momentVersion[1];\r\n\r\n\t// Moment.js version check\r\n\tif (major < 2 || (major === 2 && minor < 6)) {\r\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\r\n\t}\r\n\r\n\t/************************************\r\n\t\tUnpacking\r\n\t************************************/\r\n\r\n\tfunction charCodeToInt(charCode) {\r\n\t\tif (charCode > 96) {\r\n\t\t\treturn charCode - 87;\r\n\t\t} else if (charCode > 64) {\r\n\t\t\treturn charCode - 29;\r\n\t\t}\r\n\t\treturn charCode - 48;\r\n\t}\r\n\r\n\tfunction unpackBase60(string) {\r\n\t\tvar i = 0,\r\n\t\t\tparts = string.split('.'),\r\n\t\t\twhole = parts[0],\r\n\t\t\tfractional = parts[1] || '',\r\n\t\t\tmultiplier = 1,\r\n\t\t\tnum,\r\n\t\t\tout = 0,\r\n\t\t\tsign = 1;\r\n\r\n\t\t// handle negative numbers\r\n\t\tif (string.charCodeAt(0) === 45) {\r\n\t\t\ti = 1;\r\n\t\t\tsign = -1;\r\n\t\t}\r\n\r\n\t\t// handle digits before the decimal\r\n\t\tfor (i; i < whole.length; i++) {\r\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\r\n\t\t\tout = 60 * out + num;\r\n\t\t}\r\n\r\n\t\t// handle digits after the decimal\r\n\t\tfor (i = 0; i < fractional.length; i++) {\r\n\t\t\tmultiplier = multiplier / 60;\r\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\r\n\t\t\tout += num * multiplier;\r\n\t\t}\r\n\r\n\t\treturn out * sign;\r\n\t}\r\n\r\n\tfunction arrayToInt (array) {\r\n\t\tfor (var i = 0; i < array.length; i++) {\r\n\t\t\tarray[i] = unpackBase60(array[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction intToUntil (array, length) {\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\r\n\t\t}\r\n\r\n\t\tarray[length - 1] = Infinity;\r\n\t}\r\n\r\n\tfunction mapIndices (source, indices) {\r\n\t\tvar out = [], i;\r\n\r\n\t\tfor (i = 0; i < indices.length; i++) {\r\n\t\t\tout[i] = source[indices[i]];\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tfunction unpack (string) {\r\n\t\tvar data = string.split('|'),\r\n\t\t\toffsets = data[2].split(' '),\r\n\t\t\tindices = data[3].split(''),\r\n\t\t\tuntils  = data[4].split(' ');\r\n\r\n\t\tarrayToInt(offsets);\r\n\t\tarrayToInt(indices);\r\n\t\tarrayToInt(untils);\r\n\r\n\t\tintToUntil(untils, indices.length);\r\n\r\n\t\treturn {\r\n\t\t\tname       : data[0],\r\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\r\n\t\t\toffsets    : mapIndices(offsets, indices),\r\n\t\t\tuntils     : untils,\r\n\t\t\tpopulation : data[5] | 0\r\n\t\t};\r\n\t}\r\n\r\n\t/************************************\r\n\t\tZone object\r\n\t************************************/\r\n\r\n\tfunction Zone (packedString) {\r\n\t\tif (packedString) {\r\n\t\t\tthis._set(unpack(packedString));\r\n\t\t}\r\n\t}\r\n\r\n\tZone.prototype = {\r\n\t\t_set : function (unpacked) {\r\n\t\t\tthis.name       = unpacked.name;\r\n\t\t\tthis.abbrs      = unpacked.abbrs;\r\n\t\t\tthis.untils     = unpacked.untils;\r\n\t\t\tthis.offsets    = unpacked.offsets;\r\n\t\t\tthis.population = unpacked.population;\r\n\t\t},\r\n\r\n\t\t_index : function (timestamp) {\r\n\t\t\tvar target = +timestamp,\r\n\t\t\t\tuntils = this.untils,\r\n\t\t\t\ti;\r\n\r\n\t\t\tfor (i = 0; i < untils.length; i++) {\r\n\t\t\t\tif (target < untils[i]) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tparse : function (timestamp) {\r\n\t\t\tvar target  = +timestamp,\r\n\t\t\t\toffsets = this.offsets,\r\n\t\t\t\tuntils  = this.untils,\r\n\t\t\t\tmax     = untils.length - 1,\r\n\t\t\t\toffset, offsetNext, offsetPrev, i;\r\n\r\n\t\t\tfor (i = 0; i < max; i++) {\r\n\t\t\t\toffset     = offsets[i];\r\n\t\t\t\toffsetNext = offsets[i + 1];\r\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\r\n\r\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\r\n\t\t\t\t\toffset = offsetNext;\r\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\r\n\t\t\t\t\toffset = offsetPrev;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\r\n\t\t\t\t\treturn offsets[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn offsets[max];\r\n\t\t},\r\n\r\n\t\tabbr : function (mom) {\r\n\t\t\treturn this.abbrs[this._index(mom)];\r\n\t\t},\r\n\r\n\t\toffset : function (mom) {\r\n\t\t\treturn this.offsets[this._index(mom)];\r\n\t\t}\r\n\t};\r\n\r\n\t/************************************\r\n\t\tCurrent Timezone\r\n\t************************************/\r\n\r\n\tfunction OffsetAt(at) {\r\n\t\tvar timeString = at.toTimeString();\r\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\r\n\t\tif (abbr && abbr[0]) {\r\n\t\t\t// 17:56:31 GMT-0600 (CST)\r\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\r\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\r\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\r\n\t\t} else {\r\n\t\t\t// 17:56:31 CST\r\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\r\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\r\n\t\t\tabbr = abbr ? abbr[0] : undefined;\r\n\t\t}\r\n\r\n\t\tif (abbr === 'GMT') {\r\n\t\t\tabbr = undefined;\r\n\t\t}\r\n\r\n\t\tthis.at = +at;\r\n\t\tthis.abbr = abbr;\r\n\t\tthis.offset = at.getTimezoneOffset();\r\n\t}\r\n\r\n\tfunction ZoneScore(zone) {\r\n\t\tthis.zone = zone;\r\n\t\tthis.offsetScore = 0;\r\n\t\tthis.abbrScore = 0;\r\n\t}\r\n\r\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\r\n\t\tthis.offsetScore += Math.abs(this.zone.offset(offsetAt.at) - offsetAt.offset);\r\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\r\n\t\t\tthis.abbrScore++;\r\n\t\t}\r\n\t};\r\n\r\n\tfunction findChange(low, high) {\r\n\t\tvar mid, diff;\r\n\r\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\r\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\r\n\t\t\tif (mid.offset === low.offset) {\r\n\t\t\t\tlow = mid;\r\n\t\t\t} else {\r\n\t\t\t\thigh = mid;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn low;\r\n\t}\r\n\r\n\tfunction userOffsets() {\r\n\t\tvar startYear = new Date().getFullYear() - 2,\r\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\r\n\t\t\toffsets = [last],\r\n\t\t\tchange, next, i;\r\n\r\n\t\tfor (i = 1; i < 48; i++) {\r\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\r\n\t\t\tif (next.offset !== last.offset) {\r\n\t\t\t\tchange = findChange(last, next);\r\n\t\t\t\toffsets.push(change);\r\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\r\n\t\t\t}\r\n\t\t\tlast = next;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < 4; i++) {\r\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\r\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\r\n\t\t}\r\n\r\n\t\treturn offsets;\r\n\t}\r\n\r\n\tfunction sortZoneScores (a, b) {\r\n\t\tif (a.offsetScore !== b.offsetScore) {\r\n\t\t\treturn a.offsetScore - b.offsetScore;\r\n\t\t}\r\n\t\tif (a.abbrScore !== b.abbrScore) {\r\n\t\t\treturn a.abbrScore - b.abbrScore;\r\n\t\t}\r\n\t\treturn b.zone.population - a.zone.population;\r\n\t}\r\n\r\n\tfunction addToGuesses (name, offsets) {\r\n\t\tvar i, offset;\r\n\t\tarrayToInt(offsets);\r\n\t\tfor (i = 0; i < offsets.length; i++) {\r\n\t\t\toffset = offsets[i];\r\n\t\t\tguesses[offset] = guesses[offset] || {};\r\n\t\t\tguesses[offset][name] = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction guessesForUserOffsets (offsets) {\r\n\t\tvar offsetsLength = offsets.length,\r\n\t\t\tfilteredGuesses = {},\r\n\t\t\tout = [],\r\n\t\t\ti, j, guessesOffset;\r\n\r\n\t\tfor (i = 0; i < offsetsLength; i++) {\r\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\r\n\t\t\tfor (j in guessesOffset) {\r\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\r\n\t\t\t\t\tfilteredGuesses[j] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i in filteredGuesses) {\r\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\r\n\t\t\t\tout.push(names[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tfunction rebuildGuess () {\r\n\r\n\t\t// use Intl API when available and returning valid time zone\r\n\t\ttry {\r\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\t\t\tif (intlName){\r\n\t\t\t\tvar name = names[normalizeName(intlName)];\r\n\t\t\t\tif (name) {\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}\r\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// Intl unavailable, fall back to manual guessing.\r\n\t\t}\r\n\r\n\t\tvar offsets = userOffsets(),\r\n\t\t\toffsetsLength = offsets.length,\r\n\t\t\tguesses = guessesForUserOffsets(offsets),\r\n\t\t\tzoneScores = [],\r\n\t\t\tzoneScore, i, j;\r\n\r\n\t\tfor (i = 0; i < guesses.length; i++) {\r\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\r\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\r\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\r\n\t\t\t}\r\n\t\t\tzoneScores.push(zoneScore);\r\n\t\t}\r\n\r\n\t\tzoneScores.sort(sortZoneScores);\r\n\r\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\r\n\t}\r\n\r\n\tfunction guess (ignoreCache) {\r\n\t\tif (!cachedGuess || ignoreCache) {\r\n\t\t\tcachedGuess = rebuildGuess();\r\n\t\t}\r\n\t\treturn cachedGuess;\r\n\t}\r\n\r\n\t/************************************\r\n\t\tGlobal Methods\r\n\t************************************/\r\n\r\n\tfunction normalizeName (name) {\r\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\r\n\t}\r\n\r\n\tfunction addZone (packed) {\r\n\t\tvar i, name, split, normalized;\r\n\r\n\t\tif (typeof packed === \"string\") {\r\n\t\t\tpacked = [packed];\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < packed.length; i++) {\r\n\t\t\tsplit = packed[i].split('|');\r\n\t\t\tname = split[0];\r\n\t\t\tnormalized = normalizeName(name);\r\n\t\t\tzones[normalized] = packed[i];\r\n\t\t\tnames[normalized] = name;\r\n\t\t\tif (split[5]) {\r\n\t\t\t\taddToGuesses(normalized, split[2].split(' '));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getZone (name, caller) {\r\n\t\tname = normalizeName(name);\r\n\r\n\t\tvar zone = zones[name];\r\n\t\tvar link;\r\n\r\n\t\tif (zone instanceof Zone) {\r\n\t\t\treturn zone;\r\n\t\t}\r\n\r\n\t\tif (typeof zone === 'string') {\r\n\t\t\tzone = new Zone(zone);\r\n\t\t\tzones[name] = zone;\r\n\t\t\treturn zone;\r\n\t\t}\r\n\r\n\t\t// Pass getZone to prevent recursion more than 1 level deep\r\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\r\n\t\t\tzone = zones[name] = new Zone();\r\n\t\t\tzone._set(link);\r\n\t\t\tzone.name = names[name];\r\n\t\t\treturn zone;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction getNames () {\r\n\t\tvar i, out = [];\r\n\r\n\t\tfor (i in names) {\r\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\r\n\t\t\t\tout.push(names[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn out.sort();\r\n\t}\r\n\r\n\tfunction addLink (aliases) {\r\n\t\tvar i, alias, normal0, normal1;\r\n\r\n\t\tif (typeof aliases === \"string\") {\r\n\t\t\taliases = [aliases];\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < aliases.length; i++) {\r\n\t\t\talias = aliases[i].split('|');\r\n\r\n\t\t\tnormal0 = normalizeName(alias[0]);\r\n\t\t\tnormal1 = normalizeName(alias[1]);\r\n\r\n\t\t\tlinks[normal0] = normal1;\r\n\t\t\tnames[normal0] = alias[0];\r\n\r\n\t\t\tlinks[normal1] = normal0;\r\n\t\t\tnames[normal1] = alias[1];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadData (data) {\r\n\t\taddZone(data.zones);\r\n\t\taddLink(data.links);\r\n\t\ttz.dataVersion = data.version;\r\n\t}\r\n\r\n\tfunction zoneExists (name) {\r\n\t\tif (!zoneExists.didShowError) {\r\n\t\t\tzoneExists.didShowError = true;\r\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\r\n\t\t}\r\n\t\treturn !!getZone(name);\r\n\t}\r\n\r\n\tfunction needsOffset (m) {\r\n\t\treturn !!(m._a && (m._tzm === undefined));\r\n\t}\r\n\r\n\tfunction logError (message) {\r\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\r\n\t\t\tconsole.error(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/************************************\r\n\t\tmoment.tz namespace\r\n\t************************************/\r\n\r\n\tfunction tz (input) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\r\n\t\t\tname = arguments[arguments.length - 1],\r\n\t\t\tzone = getZone(name),\r\n\t\t\tout  = moment.utc.apply(null, args);\r\n\r\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\r\n\t\t\tout.add(zone.parse(out), 'minutes');\r\n\t\t}\r\n\r\n\t\tout.tz(name);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\ttz.version      = VERSION;\r\n\ttz.dataVersion  = '';\r\n\ttz._zones       = zones;\r\n\ttz._links       = links;\r\n\ttz._names       = names;\r\n\ttz.add          = addZone;\r\n\ttz.link         = addLink;\r\n\ttz.load         = loadData;\r\n\ttz.zone         = getZone;\r\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\r\n\ttz.guess        = guess;\r\n\ttz.names        = getNames;\r\n\ttz.Zone         = Zone;\r\n\ttz.unpack       = unpack;\r\n\ttz.unpackBase60 = unpackBase60;\r\n\ttz.needsOffset  = needsOffset;\r\n\ttz.moveInvalidForward   = true;\r\n\ttz.moveAmbiguousForward = false;\r\n\r\n\t/************************************\r\n\t\tInterface with Moment.js\r\n\t************************************/\r\n\r\n\tvar fn = moment.fn;\r\n\r\n\tmoment.tz = tz;\r\n\r\n\tmoment.defaultZone = null;\r\n\r\n\tmoment.updateOffset = function (mom, keepTime) {\r\n\t\tvar zone = moment.defaultZone,\r\n\t\t\toffset;\r\n\r\n\t\tif (mom._z === undefined) {\r\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\r\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\r\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\r\n\t\t\t}\r\n\t\t\tmom._z = zone;\r\n\t\t}\r\n\t\tif (mom._z) {\r\n\t\t\toffset = mom._z.offset(mom);\r\n\t\t\tif (Math.abs(offset) < 16) {\r\n\t\t\t\toffset = offset / 60;\r\n\t\t\t}\r\n\t\t\tif (mom.utcOffset !== undefined) {\r\n\t\t\t\tmom.utcOffset(-offset, keepTime);\r\n\t\t\t} else {\r\n\t\t\t\tmom.zone(offset, keepTime);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfn.tz = function (name) {\r\n\t\tif (name) {\r\n\t\t\tthis._z = getZone(name);\r\n\t\t\tif (this._z) {\r\n\t\t\t\tmoment.updateOffset(this);\r\n\t\t\t} else {\r\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (this._z) { return this._z.name; }\r\n\t};\r\n\r\n\tfunction abbrWrap (old) {\r\n\t\treturn function () {\r\n\t\t\tif (this._z) { return this._z.abbr(this); }\r\n\t\t\treturn old.call(this);\r\n\t\t};\r\n\t}\r\n\r\n\tfunction resetZoneWrap (old) {\r\n\t\treturn function () {\r\n\t\t\tthis._z = null;\r\n\t\t\treturn old.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n\r\n\tfn.zoneName = abbrWrap(fn.zoneName);\r\n\tfn.zoneAbbr = abbrWrap(fn.zoneAbbr);\r\n\tfn.utc      = resetZoneWrap(fn.utc);\r\n\r\n\tmoment.tz.setDefault = function(name) {\r\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\r\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\r\n\t\t}\r\n\t\tmoment.defaultZone = name ? getZone(name) : null;\r\n\t\treturn moment;\r\n\t};\r\n\r\n\t// Cloning a moment should include the _z property.\r\n\tvar momentProperties = moment.momentProperties;\r\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\r\n\t\t// moment 2.8.1+\r\n\t\tmomentProperties.push('_z');\r\n\t\tmomentProperties.push('_a');\r\n\t} else if (momentProperties) {\r\n\t\t// moment 2.7.0\r\n\t\tmomentProperties._z = null;\r\n\t}\r\n\r\n\t// INJECT DATA\r\n\r\n\treturn moment;\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}