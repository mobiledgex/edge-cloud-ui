{"ast":null,"code":"/*\n{ Name: 'bickhcho1',\n       Email: 'whrjsgml111@naver.com',\n       EmailVerified: true,\n       Passhash: '',\n       Salt: '',\n       Iter: 0,\n       FamilyName: '',\n       GivenName: '',\n       Picture: '',\n       Nickname: '',\n       CreatedAt: '2019-05-23T06:29:01.794715Z',\n       UpdatedAt: '2019-05-23T06:30:42.082077Z',\n       Locked: false }\n\n */\nimport * as moment from 'moment';\n\nvar trimData = function trimData(datas) {\n  var newData = datas.splice(0, 1);\n  return datas;\n};\n\nvar week_kr = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\nvar week = moment().format('E');\nvar getWeek = week_kr[week - 1];\n\nvar numberDes = function numberDes(a, b) {\n  return b - a;\n};\n\nvar generateData = function generateData(datas) {\n  var result = datas;\n  var values = []; //20190409 transition string to json\n  //let toArray = result.data.split('\\n')\n\n  var toJson = result.data;\n\n  if (toJson) {\n    toJson.map(function (dataResult, i) {\n      if (dataResult.message) {\n        values.push({\n          Username: '',\n          Email: '',\n          EmailVerified: '',\n          Passhash: '',\n          Salt: '',\n          Iter: '',\n          FamilyName: '',\n          GivenName: '',\n          Picture: '',\n          Nickname: '',\n          CreatedAt: '',\n          UpdatedAt: '',\n          Locked: '',\n          Edit: null\n        });\n      } else {\n        var Index = i;\n        var Username = dataResult.Name || '-';\n        var Email = dataResult.Email || '-';\n        var EmailVerified = dataResult.EmailVerified || '-';\n        var Passhash = dataResult.Passhash || '-';\n        var Salt = dataResult.Salt || '-';\n        var Iter = dataResult.Iter || '-';\n        var FamilyName = dataResult.FamilyName || '-';\n        var GivenName = dataResult.GivenName || '-';\n        var Picture = dataResult.Picture || '-';\n        var Nickname = dataResult.Nickname || '-';\n        var CreatedAt = dataResult.CreatedAt || '-';\n        var UpdatedAt = dataResult.UpdatedAt || '-';\n        var Locked = dataResult.Locked || '-';\n        var newRegistKey = ['Username', 'Email'];\n        values.push({\n          Username: Username,\n          Email: Email,\n          EmailVerified: EmailVerified,\n          Passhash: Passhash,\n          Salt: Salt,\n          Iter: Iter,\n          FamilyName: FamilyName,\n          GivenName: GivenName,\n          Picture: Picture,\n          Nickname: Nickname,\n          CreatedAt: CreatedAt,\n          UpdatedAt: UpdatedAt,\n          Locked: Locked,\n          Edit: newRegistKey\n        });\n      }\n    });\n  } else {\n    console.log('there is no result');\n  } //ascending or descending\n  //values.sort(numberDes);\n  //values.reverse();\n\n\n  return values;\n};\n\nvar retunDate = function retunDate(str) {\n  var year = str.substring(0, 4);\n  var month = str.substring(4, 6);\n  var day = str.substring(6, 8);\n  var hour = str.substring(8, 10);\n  var minute = str.substring(10, 12); //var second = str.substring(12, 14);\n\n  var date = new Date(year, month - 1, day, hour, minute);\n  return moment(date).format('hh:mm');\n};\n\nvar FormatComputeAccounts = function FormatComputeAccounts(props) {\n  return generateData(props);\n};\n\nexport default FormatComputeAccounts;","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/services/formatter/formatComputeAccounts.js"],"names":["moment","trimData","datas","newData","splice","week_kr","week","format","getWeek","numberDes","a","b","generateData","result","values","toJson","data","map","dataResult","i","message","push","Username","Email","EmailVerified","Passhash","Salt","Iter","FamilyName","GivenName","Picture","Nickname","CreatedAt","UpdatedAt","Locked","Edit","Index","Name","newRegistKey","console","log","retunDate","str","year","substring","month","day","hour","minute","date","Date","FormatComputeAccounts","props"],"mappings":"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","sourcesContent":["/*\n{ Name: 'bickhcho1',\n       Email: 'whrjsgml111@naver.com',\n       EmailVerified: true,\n       Passhash: '',\n       Salt: '',\n       Iter: 0,\n       FamilyName: '',\n       GivenName: '',\n       Picture: '',\n       Nickname: '',\n       CreatedAt: '2019-05-23T06:29:01.794715Z',\n       UpdatedAt: '2019-05-23T06:30:42.082077Z',\n       Locked: false }\n\n */\n\n\nimport * as moment from 'moment';\nlet trimData = (datas) => {\n    let newData = datas.splice(0,1);\n    return datas ;\n}\nconst week_kr = [\"월\",\"화\",\"수\",\"목\",\"금\",\"토\",\"일\"]\nlet week = moment().format('E');\nlet getWeek = week_kr[(week-1)];\nconst numberDes =(a,b)=> (\n    b-a\n)\n\nlet generateData = (datas) => {\n    let result = datas;\n    let values = [];\n    //20190409 transition string to json\n    //let toArray = result.data.split('\\n')\n\n    let toJson = result.data;\n\n    if(toJson){\n        toJson.map((dataResult, i) => {\n            if(dataResult.message) {\n                values.push({\n                    Username:'',\n                    Email:'',\n                    EmailVerified:'',\n                    Passhash:'',\n                    Salt:'',\n                    Iter:'',\n                    FamilyName:'',\n                    GivenName:'',\n                    Picture:'',\n                    Nickname:'',\n                    CreatedAt:'',\n                    UpdatedAt:'',\n                    Locked:'',\n                    Edit:null\n                })\n            } else {\n                let Index = i;\n                let Username = dataResult.Name || '-';\n                let Email = dataResult.Email || '-';\n                let EmailVerified = dataResult.EmailVerified || '-';\n                let Passhash = dataResult.Passhash || '-';\n                let Salt = dataResult.Salt || '-';\n                let Iter = dataResult.Iter || '-';\n                let FamilyName = dataResult.FamilyName || '-';\n                let GivenName = dataResult.GivenName || '-';\n                let Picture = dataResult.Picture || '-';\n                let Nickname = dataResult.Nickname || '-';\n                let CreatedAt = dataResult.CreatedAt || '-';\n                let UpdatedAt = dataResult.UpdatedAt || '-';\n                let Locked = dataResult.Locked || '-';\n                let newRegistKey = [ 'Username', 'Email'];\n\n                values.push({\n                    Username:Username,\n                    Email:Email,\n                    EmailVerified:EmailVerified,\n                    Passhash:Passhash,\n                    Salt:Salt,\n                    Iter:Iter,\n                    FamilyName:FamilyName,\n                    GivenName:GivenName,\n                    Picture:Picture,\n                    Nickname:Nickname,\n                    CreatedAt:CreatedAt,\n                    UpdatedAt:UpdatedAt,\n                    Locked:Locked,\n                    Edit:newRegistKey\n                })\n            }\n\n        })\n    } else {\n        console.log('there is no result')\n    }\n\n    //ascending or descending\n\n    //values.sort(numberDes);\n    //values.reverse();\n\n    return values\n\n}\nconst retunDate = (str) => {\n    var year = str.substring(0, 4);\n    var month = str.substring(4, 6);\n    var day = str.substring(6, 8);\n    var hour = str.substring(8, 10);\n    var minute = str.substring(10, 12);\n    //var second = str.substring(12, 14);\n    var date = new Date(year, month-1, day, hour, minute);\n    return moment(date).format('hh:mm');\n}\nconst FormatComputeAccounts = (props) => (\n    generateData(props)\n)\n\nexport default FormatComputeAccounts;\n"]},"metadata":{},"sourceType":"module"}