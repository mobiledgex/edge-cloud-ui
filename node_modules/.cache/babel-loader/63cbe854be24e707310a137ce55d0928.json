{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/charts/plotly/usageMaxColumn.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { connect } from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\";\nimport * as aggregation from \"../../utils\";\nimport * as moment from 'moment'; //https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\nvar trace1 = {\n  x: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  y: [20, 14, 25, 16, 18, 22, 19, 15, 12, 16, 14, 17],\n  type: 'bar',\n  name: 'Primary Product',\n  marker: {\n    color: 'rgb(49,130,189)',\n    opacity: 0.7\n  }\n};\nvar trace2 = {\n  x: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  y: [19, 14, 22, 14, 16, 19, 15, 14, 10, 12, 12, 16],\n  type: 'bar',\n  name: 'Secondary Product',\n  marker: {\n    color: 'rgb(204,204,204)',\n    opacity: 0.5\n  }\n};\n\nvar UsageMaxColumn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsageMaxColumn, _React$Component);\n\n  function UsageMaxColumn() {\n    var _this;\n\n    _classCallCheck(this, UsageMaxColumn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsageMaxColumn).call(this));\n    _this.state = {\n      vWidth: 600,\n      vHeight: 300,\n      data: [],\n      chartData: [trace1, trace2],\n      layout: {\n        datarevision: 0\n      },\n      currentKey: '',\n      revision: 10,\n      fromToDate: '09:27:23 ~ 09:28:23 '\n    };\n    _this.colors = ['#6699ff', '#22cccc', '#aa77ff', '#ffce03'];\n    _this.colorsErr = ['#22cccc', '#ff3355', '#6699ff', '#ffce03'];\n    return _this;\n  }\n\n  _createClass(UsageMaxColumn, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.chartData) {\n        this.reloadChart(nextProps.chartData, nextProps.series);\n      }\n    }\n  }, {\n    key: \"reloadChart\",\n    value: function reloadChart(data, series) {\n      var maxData = {\n        x: [],\n        y: [],\n        text: '',\n        textposition: 'auto',\n        name: 'MAX',\n        type: 'bar',\n        marker: {\n          color: 'indianred'\n        }\n      };\n      var usageData = {\n        x: [],\n        y: [],\n        text: '',\n        textposition: 'auto',\n        name: 'USED',\n        type: 'bar',\n        marker: {\n          color: 'lightsalmon'\n        }\n      };\n\n      if (series && series[0].length === 0) {\n        return;\n      }\n\n      data.map(function (item, i) {\n        //console.log('20191007 item..', item)\n        if (i === 0) {\n          usageData.y = item;\n        } else {\n          data[0].map(function (itm, i) {\n            maxData.y.push(data[1][i]);\n          });\n        }\n      });\n      usageData.x = series[0];\n      maxData.x = series[0];\n      var dataComp = [usageData, maxData]; //console.log('20191007 dataComp == ', dataComp)\n\n      this.setState({\n        chartData: dataComp,\n        fromToDate: moment(series[0][0]).format('YYYYMMDD HH:mm:ss') + '  ~  ' + moment(series[0][series[0].length - 1], 'YYYYMMDD HH:mm:ss').format('HH:mm:ss') //fromToDate:timeKeys[0] +'  ~  '+ timeKeys[timeKeys.length-1]\n\n      });\n      this.setState({\n        revision: this.state.revision + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var error = this.props.error;\n      return React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, function (_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n        return React.createElement(\"div\", {\n          className: \"plotContainer\",\n          style: {\n            width: width,\n            height: height - 2,\n            display: 'flex',\n            flexDirection: 'column',\n            overflowY: 'hidden',\n            overflowX: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Range of date ::: \".concat(_this2.state.fromToDate)), React.createElement(Plot, {\n          style: {\n            backgroundColor: 'transparent',\n            overflow: 'hidden',\n            width: width,\n            height: height\n          },\n          data: _this2.state.chartData,\n          layout: {\n            barmode: 'group',\n            title: null,\n            autosize: false,\n            width: width - _this2.props.marginRight,\n            height: height,\n            margin: _this2.props.margin,\n            paper_bgcolor: 'transparent',\n            plot_bgcolor: 'transparent',\n            legend: {\n              x: 1,\n              y: 1\n            },\n            xaxis: {\n              showgrid: false,\n              zeroline: true,\n              showline: true,\n              mirror: 'ticks',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              domain: [0, 0.94],\n              wrap: true,\n              tickangle: 13 // domain: [0, 0.94]\n\n            },\n            yaxis: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)'\n            },\n            yaxis2: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              overlaying: 'y',\n              side: 'right',\n              position: _this2.props.y2Position,\n              range: _this2.props.y2Range\n            },\n            yaxis3: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              overlaying: 'y',\n              side: 'right',\n              position: _this2.props.y3Position,\n              range: _this2.props.y3Range\n            },\n            bargap: 0.2,\n            bargroupgap: 0.1,\n            showlegend: _this2.props.showLegend,\n            points: {\n              width: 0.5\n            },\n            hoverlabel: {\n              bordercolor: 'rgba(255,255,255,.3)',\n              font: {\n                color: 'rgba(255,255,255,.7)'\n              }\n            },\n            datarevision: _this2.state.datarevision + 1\n          },\n          revision: _this2.state.revision,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return UsageMaxColumn;\n}(React.Component);\n\nUsageMaxColumn.defaultProps = {\n  margin: {\n    l: 50,\n    r: 15,\n    b: 35,\n    t: 5,\n    pad: 0\n  },\n  marginRight: 0,\n  showLegend: false,\n  y2Range: null,\n  y3Range: null,\n  y2Position: null,\n  y3Position: null\n}; //\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    currentKey: state.cityChanger.city\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    },\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectNetworkData(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(UsageMaxColumn);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/charts/plotly/usageMaxColumn.js"],"names":["React","Plot","ContainerDimensions","connect","actions","aggregation","moment","trace1","x","y","type","name","marker","color","opacity","trace2","UsageMaxColumn","state","vWidth","vHeight","data","chartData","layout","datarevision","currentKey","revision","fromToDate","colors","colorsErr","nextProps","nextContext","reloadChart","series","maxData","text","textposition","usageData","length","map","item","i","itm","push","dataComp","setState","format","error","props","width","height","display","flexDirection","overflowY","overflowX","backgroundColor","overflow","barmode","title","autosize","marginRight","margin","paper_bgcolor","plot_bgcolor","legend","xaxis","showgrid","zeroline","showline","mirror","gridcolor","gridwidth","zerolinecolor","zerolinewidth","linecolor","linewidth","domain","wrap","tickangle","yaxis","ticklen","tickcolor","yaxis2","overlaying","side","position","y2Position","range","y2Range","yaxis3","y3Position","y3Range","bargap","bargroupgap","showlegend","showLegend","points","hoverlabel","bordercolor","font","Component","defaultProps","l","r","b","t","pad","mapStateToProps","ownProps","cityChanger","city","mapDispatchProps","dispatch","handleChangeCity","changeCity","handleInjectData","injectNetworkData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport {connect} from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\";\nimport * as aggregation from \"../../utils\";\nimport * as moment from 'moment';\n//https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\n\nvar trace1 = {\n    x: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    y: [20, 14, 25, 16, 18, 22, 19, 15, 12, 16, 14, 17],\n    type: 'bar',\n    name: 'Primary Product',\n    marker: {\n        color: 'rgb(49,130,189)',\n        opacity: 0.7,\n    }\n};\n\nvar trace2 = {\n    x: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    y: [19, 14, 22, 14, 16, 19, 15, 14, 10, 12, 12, 16],\n    type: 'bar',\n    name: 'Secondary Product',\n    marker: {\n        color: 'rgb(204,204,204)',\n        opacity: 0.5\n    }\n};\n\n\nclass UsageMaxColumn extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            vWidth: 600,\n            vHeight: 300,\n            data:[],\n            chartData:[trace1, trace2],\n            layout: {\n                datarevision: 0,\n            },\n            currentKey:'',\n            revision: 10,\n            fromToDate:'09:27:23 ~ 09:28:23 '\n        }\n        this.colors = ['#6699ff','#22cccc', '#aa77ff', '#ffce03' ];\n        this.colorsErr = ['#22cccc','#ff3355', '#6699ff', '#ffce03' ];\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.chartData) {\n            this.reloadChart(nextProps.chartData, nextProps.series);\n        }\n\n    }\n    reloadChart(data, series) {\n        let maxData = {\n            x: [],\n            y: [],\n            text: '',\n            textposition: 'auto',\n            name: 'MAX',\n            type: 'bar',\n            marker:{color:'indianred'}\n        }\n        let usageData = {\n            x: [],\n            y: [],\n            text: '',\n            textposition: 'auto',\n            name: 'USED',\n            type: 'bar',\n            marker:{color:'lightsalmon'}\n        }\n        if(series && series[0].length === 0) {\n            return;\n        }\n        data.map((item, i) => {\n            //console.log('20191007 item..', item)\n            if(i === 0) {\n                usageData.y = item;\n\n            } else {\n                data[0].map((itm, i) => {\n                    maxData.y.push(data[1][i]);\n                })\n            }\n\n        })\n\n\n        usageData.x = series[0];\n        maxData.x = series[0];\n\n        let dataComp = [usageData, maxData]\n        //console.log('20191007 dataComp == ', dataComp)\n        this.setState({\n            chartData:dataComp,\n            fromToDate:moment(series[0][0]).format('YYYYMMDD HH:mm:ss') +'  ~  '+ moment(series[0][series[0].length-1] , 'YYYYMMDD HH:mm:ss').format('HH:mm:ss')\n            //fromToDate:timeKeys[0] +'  ~  '+ timeKeys[timeKeys.length-1]\n        })\n\n        this.setState({ revision: this.state.revision + 1 });\n    }\n\n    render() {\n        let {error} = this.props;\n        return (\n            <ContainerDimensions>\n                { ({ width, height }) =>\n                    <div className=\"plotContainer\" style={{width:width, height:height-2, display:'flex', flexDirection:'column', overflowY:'hidden', overflowX:'auto'}}>\n                        <div style={{width:'100%'}}>{`Range of date ::: ${this.state.fromToDate}`}</div>\n                        <Plot style={{backgroundColor:'transparent', overflow:'hidden', width:width, height:height}}\n                              data={this.state.chartData}\n                              layout={{\n                                  barmode:'group',\n                                  title: null,\n                                  autosize: false,\n                                  width:width-this.props.marginRight,\n                                  height:height,\n                                  margin:this.props.margin,\n                                  paper_bgcolor: 'transparent',\n                                  plot_bgcolor: 'transparent',\n                                  legend: {\n                                      x: 1,\n                                      y: 1\n                                  },\n                                  xaxis: {\n                                      showgrid: false,\n                                      zeroline: true,\n                                      showline: true,\n                                      mirror: 'ticks',\n                                      gridcolor: 'rgba(255,255,255,.05)',\n                                      gridwidth: 1,\n                                      zerolinecolor: 'rgba(255,255,255,0)',\n                                      zerolinewidth: 1,\n                                      linecolor: 'rgba(255,255,255,.2)',\n                                      linewidth: 1,\n                                      color: 'rgba(255,255,255,.4)',\n                                      domain: [0, 0.94],\n                                      wrap: true,\n                                      tickangle: 13,\n\n                                      // domain: [0, 0.94]\n                                  },\n                                  yaxis: {\n                                      showgrid: true,\n                                      zeroline: false,\n                                      showline: true,\n                                      mirror: 'ticks',\n                                      ticklen: 3,\n                                      tickcolor: 'rgba(0,0,0,0)',\n                                      gridcolor: 'rgba(255,255,255,.05)',\n                                      gridwidth:1,\n                                      zerolinecolor: 'rgba(255,255,255,0)',\n                                      zerolinewidth: 1,\n                                      linecolor: 'rgba(255,255,255,.2)',\n                                      linewidth: 1,\n                                      color: 'rgba(255,255,255,.4)'\n                                  },\n                                  yaxis2:{\n                                      showgrid: true,\n                                      zeroline: false,\n                                      showline: true,\n                                      mirror: 'ticks',\n                                      ticklen: 3,\n                                      tickcolor: 'rgba(0,0,0,0)',\n                                      gridcolor: 'rgba(255,255,255,.05)',\n                                      gridwidth:1,\n                                      zerolinecolor: 'rgba(255,255,255,0)',\n                                      zerolinewidth: 1,\n                                      linecolor: 'rgba(255,255,255,.2)',\n                                      linewidth: 1,\n                                      color: 'rgba(255,255,255,.4)',\n                                      overlaying: 'y',\n                                      side: 'right',\n                                      position:this.props.y2Position,\n                                      range:this.props.y2Range\n                                  },\n                                  yaxis3:{\n                                      showgrid: true,\n                                      zeroline: false,\n                                      showline: true,\n                                      mirror: 'ticks',\n                                      ticklen: 3,\n                                      tickcolor: 'rgba(0,0,0,0)',\n                                      gridcolor: 'rgba(255,255,255,.05)',\n                                      gridwidth:1,\n                                      zerolinecolor: 'rgba(255,255,255,0)',\n                                      zerolinewidth: 1,\n                                      linecolor: 'rgba(255,255,255,.2)',\n                                      linewidth: 1,\n                                      color: 'rgba(255,255,255,.4)',\n                                      overlaying: 'y',\n                                      side: 'right',\n                                      position:this.props.y3Position,\n                                      range:this.props.y3Range\n                                  },\n                                  bargap: 0.2,\n                                  bargroupgap: 0.1,\n                                  showlegend: this.props.showLegend,\n                                  points: {\n                                      width: 0.5\n                                  },\n                                  hoverlabel: {\n                                      bordercolor: 'rgba(255,255,255,.3)',\n                                      font: {color:'rgba(255,255,255,.7)'},\n                                  },\n                                  datarevision: this.state.datarevision + 1\n\n                              }}\n                              revision={this.state.revision}\n                        />\n                    </div>\n\n                }\n            </ContainerDimensions>\n\n\n\n        );\n    }\n}\nUsageMaxColumn.defaultProps = {\n    margin: {\n        l: 50,\n        r: 15,\n        b: 35,\n        t: 5,\n        pad: 0\n    },\n    marginRight:0,\n    showLegend:false,\n    y2Range:null,\n    y3Range:null,\n    y2Position:null,\n    y3Position:null\n}\n\n\n//\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        currentKey: state.cityChanger.city\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) },\n        handleInjectData: (data) => { dispatch(actions.injectNetworkData(data))},\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(UsageMaxColumn);\n"]},"metadata":{},"sourceType":"module"}