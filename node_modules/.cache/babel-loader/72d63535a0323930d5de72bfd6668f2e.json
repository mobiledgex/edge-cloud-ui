{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/verifyContent.js\";\nimport React, { Component } from 'react';\nimport { Label, Loader } from 'semantic-ui-react';\nimport RSAKey from 'react-native-rsa';\nimport Login from '../components/login'; //ajax test\n//redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'; //service\n\nimport * as service from \"../services/service_compute_service\";\nimport { GridLoader } from \"react-spinners\";\nimport Alert from 'react-s-alert';\nvar _self = null;\n\nvar VerifyContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VerifyContent, _Component);\n\n  function VerifyContent(props) {\n    var _this;\n\n    _classCallCheck(this, VerifyContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerifyContent).call(this, props));\n    _this.state = {\n      isReady: false,\n      isError: false,\n      focused: false,\n      loginState: false,\n      uid: null,\n      publicKey: null,\n      exponent: null,\n      loading: true\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(VerifyContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('verify content props.. ', this.props);\n      var strArr = this.props.params.subPath.split('=');\n      var token = strArr[1]; //verify user email as user token\n\n      this.requestVerify(token);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      console.log('verify content props.. ', nextProps);\n    }\n  }, {\n    key: \"goToNext\",\n    value: function goToNext(site) {\n      //브라우져 입력창에 주소 기록\n      var mainPath = site;\n      var subPath = 'pg=0';\n\n      _self.props.history.push({\n        pathname: mainPath,\n        search: subPath,\n        state: {\n          some: 'state'\n        }\n      });\n\n      _self.props.history.location.search = subPath;\n\n      _self.props.handleChangeSite({\n        mainPath: mainPath,\n        subPath: subPath\n      });\n    }\n  }, {\n    key: \"receiveData\",\n    value: function receiveData(result) {\n      console.log('receive result...', result.data);\n\n      if (result.data.error) {\n        Alert.error(result.data.error, {\n          position: 'top-right',\n          effect: 'slide',\n          timeout: 5000\n        });\n      } else {\n        Alert.success(result.data.message, {\n          position: 'top-right',\n          effect: 'slide',\n          timeout: 5000\n        });\n        setTimeout(function () {\n          return _self.goToNext('/site1');\n        }, 3000);\n      }\n    }\n  }, {\n    key: \"requestVerify\",\n    value: function requestVerify(token) {\n      service.getMCService('UpdateVerify', {\n        service: 'verifyemail',\n        token: token\n      }, this.receiveData, this);\n    }\n    /* http://docs.nativebase.io/docs/examples/ReduxFormExample.html */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"loadingBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(GridLoader, {\n        sizeUnit: \"px\",\n        size: 20,\n        color: '#70b2bc',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Verifying...\"));\n    }\n  }]);\n\n  return VerifyContent;\n}(Component); // const mapStateToProps = (state, ownProps) => {\n//     return {\n//         data: state.receiveDataReduce.data,\n//         tabIdx: state.tabChanger\n//     };\n// };\n\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.setUser(data));\n    },\n    handleChangeTab: function handleChangeTab(data) {\n      dispatch(actions.changeTab(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchProps)(VerifyContent);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/verifyContent.js"],"names":["React","Component","Label","Loader","RSAKey","Login","connect","actions","service","GridLoader","Alert","_self","VerifyContent","props","state","isReady","isError","focused","loginState","uid","publicKey","exponent","loading","console","log","strArr","params","subPath","split","token","requestVerify","nextProps","nextContext","site","mainPath","history","push","pathname","search","some","location","handleChangeSite","result","data","error","position","effect","timeout","success","message","setTimeout","goToNext","getMCService","receiveData","mapDispatchProps","dispatch","changeSite","handleInjectData","setUser","handleChangeTab","changeTab"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label, Loader } from 'semantic-ui-react'\nimport RSAKey from 'react-native-rsa';\nimport Login from '../components/login';\n\n//ajax test\n\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n//service\nimport * as service from \"../services/service_compute_service\";\nimport {GridLoader} from \"react-spinners\";\nimport Alert from 'react-s-alert';\n\n\n\nlet _self = null;\nclass VerifyContent extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isReady : false,\n            isError: false,\n            focused : false,\n            loginState: false,\n            uid:null,\n            publicKey:null,\n            exponent:null,\n            loading: true\n        };\n        _self = this;\n\n    }\n    componentDidMount() {\n        console.log('verify content props.. ', this.props)\n        let strArr = this.props.params.subPath.split('=')\n        let token = strArr[1];\n        //verify user email as user token\n        this.requestVerify(token);\n\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('verify content props.. ', nextProps)\n    }\n\n    goToNext(site) {\n        //브라우져 입력창에 주소 기록\n        let mainPath = site;\n        let subPath = 'pg=0';\n        _self.props.history.push({\n            pathname: mainPath,\n            search: subPath,\n            state: { some: 'state' }\n        });\n        _self.props.history.location.search = subPath;\n        _self.props.handleChangeSite({mainPath:mainPath, subPath: subPath})\n\n    }\n    receiveData(result) {\n        console.log('receive result...', result.data)\n        if(result.data.error) {\n            Alert.error(result.data.error, {\n                position: 'top-right',\n                effect: 'slide',\n                timeout: 5000\n            });\n        } else {\n            Alert.success(result.data.message, {\n                position: 'top-right',\n                effect: 'slide',\n                timeout: 5000\n            });\n\n            setTimeout(() => _self.goToNext('/site1'),3000)\n        }\n\n\n    }\n    requestVerify(token) {\n        service.getMCService('UpdateVerify',{service:'verifyemail',token:token}, this.receiveData, this)\n    }\n\n\n    /* http://docs.nativebase.io/docs/examples/ReduxFormExample.html */\n    render() {\n        return (\n\n\n            <div className=\"loadingBox\">\n                <GridLoader\n                    sizeUnit={\"px\"}\n                    size={20}\n                    color={'#70b2bc'}\n                    loading={this.state.loading}\n                />\n                <div>Verifying...</div>\n            </div>\n\n\n\n        );\n    }\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//     return {\n//         data: state.receiveDataReduce.data,\n//         tabIdx: state.tabChanger\n//     };\n// };\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectData: (data) => { dispatch(actions.setUser(data)) },\n        handleChangeTab: (data) => { dispatch(actions.changeTab(data)) }\n    };\n};\n\nexport default connect(null, mapDispatchProps)(VerifyContent);\n"]},"metadata":{},"sourceType":"module"}