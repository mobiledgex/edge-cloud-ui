{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Popper, Manager, Reference } from 'react-popper';\nvar TooltipContext = React.createContext({}); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar callAll = function callAll() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return fns.forEach(function (fn) {\n      return fn && fn.apply(void 0, args);\n    });\n  };\n};\n\nvar noop = function noop() {};\n\nvar canUseDOM = function canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n};\n\nvar MUTATION_OBSERVER_CONFIG = {\n  childList: true,\n  subtree: true\n};\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tooltip, _Component);\n\n  function Tooltip() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.observer = void 0;\n    _this.tooltipRef = void 0;\n\n    _this.handleOutsideClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideClickHandler = _this.context.parentOutsideClickHandler;\n        var _this$props = _this.props,\n            hideTooltip = _this$props.hideTooltip,\n            clearScheduled = _this$props.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideClickHandler) {\n          parentOutsideClickHandler(event);\n        }\n      }\n    };\n\n    _this.handleOutsideRightClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideRightClickHandler = _this.context.parentOutsideRightClickHandler;\n        var _this$props2 = _this.props,\n            hideTooltip = _this$props2.hideTooltip,\n            clearScheduled = _this$props2.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideRightClickHandler) {\n          parentOutsideRightClickHandler(event);\n        }\n      }\n    };\n\n    _this.addOutsideClickHandler = function () {\n      document.body.addEventListener('touchend', _this.handleOutsideClick);\n      document.body.addEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.removeOutsideClickHandler = function () {\n      document.body.removeEventListener('touchend', _this.handleOutsideClick);\n      document.body.removeEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.addOutsideRightClickHandler = function () {\n      return document.body.addEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.removeOutsideRightClickHandler = function () {\n      return document.body.removeEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.getTooltipRef = function (ref) {\n      _this.tooltipRef = ref;\n\n      _this.props.innerRef(ref);\n    };\n\n    _this.getArrowProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        style: _extends({}, props.style, {}, _this.props.arrowProps.style)\n      });\n    };\n\n    _this.getTooltipProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      var isHoverTriggered = _this.props.trigger === 'hover';\n      return _extends({}, props, {}, isHoverTriggered && {\n        onMouseEnter: callAll(_this.props.clearScheduled, props.onMouseEnter),\n        onMouseLeave: callAll(_this.props.hideTooltip, props.onMouseLeave)\n      }, {\n        style: _extends({}, props.style, {}, _this.props.style)\n      });\n    };\n\n    _this.contextValue = {\n      isParentNoneTriggered: _this.props.trigger === 'none',\n      addParentOutsideClickHandler: _this.addOutsideClickHandler,\n      addParentOutsideRightClickHandler: _this.addOutsideRightClickHandler,\n      parentOutsideClickHandler: _this.handleOutsideClick,\n      parentOutsideRightClickHandler: _this.handleOutsideRightClick,\n      removeParentOutsideClickHandler: _this.removeOutsideClickHandler,\n      removeParentOutsideRightClickHandler: _this.removeOutsideRightClickHandler\n    };\n    return _this;\n  }\n\n  var _proto = Tooltip.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var trigger = this.props.trigger;\n    var observer = this.observer = new MutationObserver(function () {\n      _this2.props.scheduleUpdate();\n    });\n    observer.observe(this.tooltipRef, MUTATION_OBSERVER_CONFIG);\n\n    if (trigger !== 'none' && trigger !== 'focus') {\n      var _this$context = this.context,\n          removeParentOutsideClickHandler = _this$context.removeParentOutsideClickHandler,\n          removeParentOutsideRightClickHandler = _this$context.removeParentOutsideRightClickHandler;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.closeOnOutOfBoundaries && this.props.outOfBoundaries) {\n      this.props.hideTooltip();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var trigger = this.props.trigger;\n\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (trigger !== 'none' && trigger !== 'focus') {\n      var _this$context2 = this.context,\n          isParentNoneTriggered = _this$context2.isParentNoneTriggered,\n          addParentOutsideClickHandler = _this$context2.addParentOutsideClickHandler,\n          addParentOutsideRightClickHandler = _this$context2.addParentOutsideRightClickHandler;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        arrowProps = _this$props3.arrowProps,\n        placement = _this$props3.placement,\n        tooltip = _this$props3.tooltip;\n    return React.createElement(TooltipContext.Provider, {\n      value: this.contextValue\n    }, tooltip({\n      arrowRef: arrowProps.ref,\n      getArrowProps: this.getArrowProps,\n      getTooltipProps: this.getTooltipProps,\n      placement: placement,\n      tooltipRef: this.getTooltipRef\n    }));\n  };\n\n  return Tooltip;\n}(Component);\n\nTooltip.contextType = TooltipContext;\nvar DEFAULT_MODIFIERS = {\n  preventOverflow: {\n    boundariesElement: 'viewport'\n  }\n};\n\nvar TooltipTrigger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TooltipTrigger, _Component);\n\n  function TooltipTrigger() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      tooltipShown: _this.props.defaultTooltipShown\n    };\n    _this.hideTimeout = void 0;\n    _this.showTimeout = void 0;\n    _this.popperOffset = void 0;\n\n    _this.setTooltipState = function (state) {\n      var cb = function cb() {\n        return _this.props.onVisibilityChange(state.tooltipShown);\n      };\n\n      _this.isControlled() ? cb() : _this.setState(state, cb);\n    };\n\n    _this.clearScheduled = function () {\n      clearTimeout(_this.hideTimeout);\n      clearTimeout(_this.showTimeout);\n    };\n\n    _this.showTooltip = function (_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n\n      _this.clearScheduled();\n\n      var state = {\n        tooltipShown: true\n      };\n\n      if (_this.props.followCursor) {\n        state = _extends({}, state, {\n          pageX: pageX,\n          pageY: pageY\n        });\n      }\n\n      _this.showTimeout = window.setTimeout(function () {\n        return _this.setTooltipState(state);\n      }, _this.props.delayShow);\n    };\n\n    _this.hideTooltip = function () {\n      _this.clearScheduled();\n\n      _this.hideTimeout = window.setTimeout(function () {\n        return _this.setTooltipState({\n          tooltipShown: false\n        });\n      }, _this.props.delayHide);\n    };\n\n    _this.toggleTooltip = function (_ref2) {\n      var pageX = _ref2.pageX,\n          pageY = _ref2.pageY;\n      var action = _this.getState() ? 'hideTooltip' : 'showTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.clickToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.contextMenuToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.getTriggerProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {}, _this.isTriggeredBy('click') && {\n        onClick: callAll(_this.clickToggle, props.onClick),\n        onTouchEnd: callAll(_this.clickToggle, props.onTouchEnd)\n      }, {}, _this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(_this.contextMenuToggle, props.onContextMenu)\n      }, {}, _this.isTriggeredBy('hover') && _extends({\n        onMouseEnter: callAll(_this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(_this.hideTooltip, props.onMouseLeave)\n      }, _this.props.followCursor && {\n        onMouseMove: callAll(_this.showTooltip, props.onMouseMove)\n      }), {}, _this.isTriggeredBy('focus') && {\n        onFocus: callAll(_this.showTooltip, props.onFocus),\n        onBlur: callAll(_this.hideTooltip, props.onBlur)\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = TooltipTrigger.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearScheduled();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        tooltip = _this$props.tooltip,\n        placement = _this$props.placement,\n        trigger = _this$props.trigger,\n        getTriggerRef = _this$props.getTriggerRef,\n        modifiers = _this$props.modifiers,\n        closeOnOutOfBoundaries = _this$props.closeOnOutOfBoundaries,\n        usePortal = _this$props.usePortal,\n        portalContainer = _this$props.portalContainer,\n        followCursor = _this$props.followCursor,\n        getTooltipRef = _this$props.getTooltipRef;\n    var popper = React.createElement(Popper, {\n      innerRef: getTooltipRef,\n      placement: placement,\n      modifiers: _extends({}, DEFAULT_MODIFIERS, {}, followCursor && {\n        followCursorModifier: {\n          enabled: true,\n          fn: function fn(data) {\n            _this2.popperOffset = data.offsets.popper;\n            return data;\n          },\n          order: 1000\n        }\n      }, {}, modifiers)\n    }, function (_ref3) {\n      var ref = _ref3.ref,\n          style = _ref3.style,\n          placement = _ref3.placement,\n          arrowProps = _ref3.arrowProps,\n          outOfBoundaries = _ref3.outOfBoundaries,\n          scheduleUpdate = _ref3.scheduleUpdate;\n\n      if (followCursor && _this2.popperOffset) {\n        var _this2$state = _this2.state,\n            pageX = _this2$state.pageX,\n            pageY = _this2$state.pageY;\n        var _this2$popperOffset = _this2.popperOffset,\n            width = _this2$popperOffset.width,\n            height = _this2$popperOffset.height;\n        var x = pageX + width > window.scrollX + document.body.offsetWidth ? pageX - width : pageX;\n        var y = pageY + height > window.scrollY + document.body.offsetHeight ? pageY - height : pageY;\n        style.transform = \"translate3d(\" + x + \"px, \" + y + \"px, 0\";\n      }\n\n      return React.createElement(Tooltip, _extends({\n        arrowProps: arrowProps,\n        closeOnOutOfBoundaries: closeOnOutOfBoundaries,\n        outOfBoundaries: outOfBoundaries,\n        placement: placement,\n        scheduleUpdate: scheduleUpdate,\n        style: style,\n        tooltip: tooltip,\n        trigger: trigger\n      }, {\n        clearScheduled: _this2.clearScheduled,\n        hideTooltip: _this2.hideTooltip,\n        innerRef: ref\n      }));\n    });\n    return React.createElement(Manager, null, React.createElement(Reference, {\n      innerRef: getTriggerRef\n    }, function (_ref4) {\n      var ref = _ref4.ref;\n      return children({\n        getTriggerProps: _this2.getTriggerProps,\n        triggerRef: ref\n      });\n    }), this.getState() && (usePortal ? createPortal(popper, portalContainer) : popper));\n  };\n\n  _proto.isControlled = function isControlled() {\n    return this.props.tooltipShown !== undefined;\n  };\n\n  _proto.getState = function getState() {\n    return this.isControlled() ? this.props.tooltipShown : this.state.tooltipShown;\n  };\n\n  _proto.isTriggeredBy = function isTriggeredBy(event) {\n    var trigger = this.props.trigger;\n    return trigger === event || Array.isArray(trigger) && trigger.includes(event);\n  };\n\n  return TooltipTrigger;\n}(Component);\n\nTooltipTrigger.defaultProps = {\n  closeOnOutOfBoundaries: true,\n  defaultTooltipShown: false,\n  delayHide: 0,\n  delayShow: 0,\n  followCursor: false,\n  onVisibilityChange: noop,\n  placement: 'right',\n  portalContainer: canUseDOM() ? document.body : null,\n  trigger: 'hover',\n  usePortal: canUseDOM()\n};\nexport default TooltipTrigger;","map":{"version":3,"sources":["../../src/utils.ts","../../src/Tooltip.tsx","../../src/TooltipTrigger.tsx"],"names":["TooltipContext","React","callAll","fns","args","fn","noop","canUseDOM","window","MUTATION_OBSERVER_CONFIG","childList","subtree","Tooltip","Component","contextType","observer","tooltipRef","componentDidMount","trigger","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","componentDidUpdate","componentWillUnmount","isParentNoneTriggered","addParentOutsideClickHandler","addParentOutsideRightClickHandler","render","arrowProps","placement","tooltip","contextValue","arrowRef","getArrowProps","getTooltipProps","getTooltipRef","handleOutsideClick","event","parentOutsideClickHandler","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","addOutsideClickHandler","document","removeOutsideClickHandler","addOutsideRightClickHandler","removeOutsideRightClickHandler","props","style","isHoverTriggered","onMouseEnter","onMouseLeave","DEFAULT_MODIFIERS","preventOverflow","boundariesElement","TooltipTrigger","defaultProps","closeOnOutOfBoundaries","defaultTooltipShown","delayHide","delayShow","followCursor","onVisibilityChange","portalContainer","usePortal","state","tooltipShown","hideTimeout","showTimeout","popperOffset","children","getTriggerRef","modifiers","popper","followCursorModifier","enabled","data","order","ref","outOfBoundaries","scheduleUpdate","pageX","pageY","width","height","x","y","getTriggerProps","triggerRef","createPortal","isControlled","getState","setTooltipState","cb","clearTimeout","showTooltip","toggleTooltip","action","clickToggle","contextMenuToggle","isTriggeredBy","Array","onClick","onTouchEnd","onContextMenu","onMouseMove","onFocus","onBlur"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const TooltipContext = React.createContext({});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = (...args: any[]) => void;\ntype FnOrBool = undefined | Fn;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: FnOrBool[]) => (...args: any[]) =>\n  fns.forEach(fn => fn && fn(...args));\n\nexport const noop = () => {};\n\nexport const canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  );\n","import React, {Component} from 'react';\nimport {GetArrowPropsArg, GetTooltipPropsArg, TooltipProps} from './types';\nimport {callAll, TooltipContext} from './utils';\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  subtree: true\n};\n\nclass Tooltip extends Component<TooltipProps> {\n  public static contextType = TooltipContext;\n\n  private observer?: MutationObserver;\n  private tooltipRef!: HTMLElement | null;\n\n  public componentDidMount() {\n    const {trigger} = this.props;\n    const observer = (this.observer = new MutationObserver(() => {\n      this.props.scheduleUpdate();\n    }));\n    observer.observe(this.tooltipRef!, MUTATION_OBSERVER_CONFIG);\n\n    if (trigger !== 'none' && trigger !== 'focus') {\n      const {\n        removeParentOutsideClickHandler,\n        removeParentOutsideRightClickHandler\n      } = this.context;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.closeOnOutOfBoundaries && this.props.outOfBoundaries) {\n      this.props.hideTooltip();\n    }\n  }\n\n  public componentWillUnmount() {\n    const {trigger} = this.props;\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (trigger !== 'none' && trigger !== 'focus') {\n      const {\n        isParentNoneTriggered,\n        addParentOutsideClickHandler,\n        addParentOutsideRightClickHandler\n      } = this.context;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public render() {\n    const {arrowProps, placement, tooltip} = this.props;\n\n    return (\n      <TooltipContext.Provider value={this.contextValue}>\n        {tooltip({\n          arrowRef: arrowProps.ref,\n          getArrowProps: this.getArrowProps,\n          getTooltipProps: this.getTooltipProps,\n          placement,\n          tooltipRef: this.getTooltipRef\n        })}\n      </TooltipContext.Provider>\n    );\n  }\n\n  private handleOutsideClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideClickHandler) {\n        parentOutsideClickHandler(event);\n      }\n    }\n  };\n\n  private handleOutsideRightClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideRightClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideRightClickHandler) {\n        parentOutsideRightClickHandler(event);\n      }\n    }\n  };\n\n  private addOutsideClickHandler = () => {\n    document.body.addEventListener('touchend', this.handleOutsideClick!);\n    document.body.addEventListener('click', this.handleOutsideClick!);\n  };\n\n  private removeOutsideClickHandler = () => {\n    document.body.removeEventListener('touchend', this.handleOutsideClick!);\n    document.body.removeEventListener('click', this.handleOutsideClick!);\n  };\n\n  private addOutsideRightClickHandler = () =>\n    document.body.addEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private removeOutsideRightClickHandler = () =>\n    document.body.removeEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private getTooltipRef = (ref: HTMLElement | null) => {\n    this.tooltipRef = ref;\n    this.props.innerRef(ref);\n  };\n\n  private getArrowProps = (props: GetArrowPropsArg = {}) => ({\n    ...props,\n    style: {...props.style, ...this.props.arrowProps.style}\n  });\n\n  private getTooltipProps = (props: GetTooltipPropsArg = {}) => {\n    const isHoverTriggered = this.props.trigger === 'hover';\n\n    return {\n      ...props,\n      ...(isHoverTriggered && {\n        onMouseEnter: callAll(this.props.clearScheduled, props.onMouseEnter),\n        onMouseLeave: callAll(this.props.hideTooltip, props.onMouseLeave)\n      }),\n      style: {...props.style, ...this.props.style}\n    };\n  };\n\n  private contextValue = {\n    isParentNoneTriggered: this.props.trigger === 'none',\n    addParentOutsideClickHandler: this.addOutsideClickHandler,\n    addParentOutsideRightClickHandler: this.addOutsideRightClickHandler,\n    parentOutsideClickHandler: this.handleOutsideClick,\n    parentOutsideRightClickHandler: this.handleOutsideRightClick,\n    removeParentOutsideClickHandler: this.removeOutsideClickHandler,\n    removeParentOutsideRightClickHandler: this.removeOutsideRightClickHandler\n  };\n}\n\nexport default Tooltip;\n","/**\n * @author Mohsin Ul Haq <mohsinulhaq01@gmail.com>\n */\nimport PopperJS from 'popper.js';\nimport React, {Component} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport Tooltip from './Tooltip';\nimport {\n  GetTriggerPropsArg,\n  TooltipTriggerProps,\n  TooltipTriggerState,\n  TriggerTypes\n} from './types';\nimport {callAll, canUseDOM, noop} from './utils';\n\nconst DEFAULT_MODIFIERS: PopperJS.Modifiers = {\n  preventOverflow: {\n    boundariesElement: 'viewport'\n  }\n};\n\nclass TooltipTrigger extends Component<\n  TooltipTriggerProps,\n  TooltipTriggerState\n> {\n  public static defaultProps = {\n    closeOnOutOfBoundaries: true,\n    defaultTooltipShown: false,\n    delayHide: 0,\n    delayShow: 0,\n    followCursor: false,\n    onVisibilityChange: noop,\n    placement: 'right',\n    portalContainer: canUseDOM() ? document.body : null,\n    trigger: 'hover',\n    usePortal: canUseDOM()\n  };\n\n  public state: TooltipTriggerState = {\n    tooltipShown: this.props.defaultTooltipShown\n  };\n\n  private hideTimeout?: number;\n  private showTimeout?: number;\n  private popperOffset?: PopperJS.Offset;\n\n  public componentWillUnmount() {\n    this.clearScheduled();\n  }\n\n  public render() {\n    const {\n      children,\n      tooltip,\n      placement,\n      trigger,\n      getTriggerRef,\n      modifiers,\n      closeOnOutOfBoundaries,\n      usePortal,\n      portalContainer,\n      followCursor,\n      getTooltipRef\n    } = this.props;\n\n    const popper = (\n      <Popper\n        innerRef={getTooltipRef}\n        placement={placement}\n        modifiers={{\n          ...DEFAULT_MODIFIERS,\n          ...(followCursor && {\n            followCursorModifier: {\n              enabled: true,\n              fn: data => {\n                this.popperOffset = data.offsets.popper;\n                return data;\n              },\n              order: 1000\n            }\n          }),\n          ...modifiers\n        }}\n      >\n        {({\n          ref,\n          style,\n          // tslint:disable-next-line\n          placement,\n          arrowProps,\n          outOfBoundaries,\n          scheduleUpdate\n        }) => {\n          if (followCursor && this.popperOffset) {\n            const {pageX, pageY} = this.state;\n            const {width, height} = this.popperOffset;\n            const x =\n              pageX! + width > window.scrollX + document.body.offsetWidth\n                ? pageX! - width\n                : pageX;\n            const y =\n              pageY! + height > window.scrollY + document.body.offsetHeight\n                ? pageY! - height\n                : pageY;\n            style.transform = `translate3d(${x}px, ${y}px, 0`;\n          }\n\n          return (\n            <Tooltip\n              {...{\n                arrowProps,\n                closeOnOutOfBoundaries,\n                outOfBoundaries,\n                placement,\n                scheduleUpdate,\n                style,\n                tooltip,\n                trigger\n              }}\n              clearScheduled={this.clearScheduled}\n              hideTooltip={this.hideTooltip}\n              innerRef={ref}\n            />\n          );\n        }}\n      </Popper>\n    );\n\n    return (\n      <Manager>\n        <Reference innerRef={getTriggerRef}>\n          {({ref}) =>\n            children({getTriggerProps: this.getTriggerProps, triggerRef: ref})\n          }\n        </Reference>\n        {this.getState() &&\n          (usePortal ? createPortal(popper, portalContainer) : popper)}\n      </Manager>\n    );\n  }\n\n  private isControlled() {\n    return this.props.tooltipShown !== undefined;\n  }\n\n  private getState() {\n    return this.isControlled()\n      ? this.props.tooltipShown\n      : this.state.tooltipShown;\n  }\n\n  private setTooltipState = (state: TooltipTriggerState) => {\n    const cb = () => this.props.onVisibilityChange(state.tooltipShown);\n    this.isControlled() ? cb() : this.setState(state, cb);\n  };\n\n  private clearScheduled = () => {\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.showTimeout);\n  };\n\n  private showTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    this.clearScheduled();\n    let state: TooltipTriggerState = {\n      tooltipShown: true\n    };\n    if (this.props.followCursor) {\n      state = {\n        ...state,\n        pageX,\n        pageY\n      };\n    }\n    this.showTimeout = window.setTimeout(\n      () => this.setTooltipState(state),\n      this.props.delayShow\n    );\n  };\n\n  private hideTooltip = () => {\n    this.clearScheduled();\n    this.hideTimeout = window.setTimeout(\n      () => this.setTooltipState({tooltipShown: false}),\n      this.props.delayHide\n    );\n  };\n\n  private toggleTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    const action = this.getState() ? 'hideTooltip' : 'showTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private clickToggle: React.MouseEventHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private contextMenuToggle: React.MouseEventHandler = event => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private getTriggerProps = (props: GetTriggerPropsArg = {}) => {\n    return {\n      ...props,\n      ...(this.isTriggeredBy('click') && {\n        onClick: callAll(this.clickToggle, props.onClick),\n        onTouchEnd: callAll(this.clickToggle, props.onTouchEnd)\n      }),\n      ...(this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(this.contextMenuToggle, props.onContextMenu)\n      }),\n      ...(this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(this.hideTooltip, props.onMouseLeave),\n        ...(this.props.followCursor && {\n          onMouseMove: callAll(this.showTooltip, props.onMouseMove)\n        })\n      }),\n      ...(this.isTriggeredBy('focus') && {\n        onFocus: callAll(this.showTooltip, props.onFocus),\n        onBlur: callAll(this.hideTooltip, props.onBlur)\n      })\n    };\n  };\n}\n\nexport default TooltipTrigger;\n"]},"metadata":{},"sourceType":"module"}