{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInDays;\n\nvar _index = require('../toDate/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../differenceInCalendarDays/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../compareAsc/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\n\n\nfunction differenceInDays(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = (0, _index2.default)(dirtyDateLeft, dirtyOptions);\n  var dateRight = (0, _index2.default)(dirtyDateRight, dirtyOptions);\n  var sign = (0, _index6.default)(dateLeft, dateRight, dirtyOptions);\n  var difference = Math.abs((0, _index4.default)(dateLeft, dateRight, dirtyOptions));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = (0, _index6.default)(dateLeft, dateRight, dirtyOptions) === -sign;\n  return sign * (difference - isLastDayNotFull);\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/react-date-range/node_modules/date-fns/differenceInDays/index.js"],"names":["Object","defineProperty","exports","value","default","differenceInDays","_index","require","_index2","_interopRequireDefault","_index3","_index4","_index5","_index6","obj","__esModule","dirtyDateLeft","dirtyDateRight","dirtyOptions","arguments","length","TypeError","dateLeft","dateRight","sign","difference","Math","abs","setDate","getDate","isLastDayNotFull","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,OAAO,GAAGH,OAAO,CAAC,sCAAD,CAArB;;AAEA,IAAII,OAAO,GAAGF,sBAAsB,CAACC,OAAD,CAApC;;AAEA,IAAIE,OAAO,GAAGL,OAAO,CAAC,wBAAD,CAArB;;AAEA,IAAIM,OAAO,GAAGJ,sBAAsB,CAACG,OAAD,CAApC;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEV,IAAAA,OAAO,EAAEU;AAAX,GAArC;AAAwD;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAST,gBAAT,CAA0BW,aAA1B,EAAyCC,cAAzC,EAAyDC,YAAzD,EAAuE;AACrE,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,QAAQ,GAAG,CAAC,GAAGd,OAAO,CAACJ,OAAZ,EAAqBY,aAArB,EAAoCE,YAApC,CAAf;AACA,MAAIK,SAAS,GAAG,CAAC,GAAGf,OAAO,CAACJ,OAAZ,EAAqBa,cAArB,EAAqCC,YAArC,CAAhB;AAEA,MAAIM,IAAI,GAAG,CAAC,GAAGX,OAAO,CAACT,OAAZ,EAAqBkB,QAArB,EAA+BC,SAA/B,EAA0CL,YAA1C,CAAX;AACA,MAAIO,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAC,GAAGhB,OAAO,CAACP,OAAZ,EAAqBkB,QAArB,EAA+BC,SAA/B,EAA0CL,YAA1C,CAAT,CAAjB;AACAI,EAAAA,QAAQ,CAACM,OAAT,CAAiBN,QAAQ,CAACO,OAAT,KAAqBL,IAAI,GAAGC,UAA7C,EAVqE,CAYrE;AACA;;AACA,MAAIK,gBAAgB,GAAG,CAAC,GAAGjB,OAAO,CAACT,OAAZ,EAAqBkB,QAArB,EAA+BC,SAA/B,EAA0CL,YAA1C,MAA4D,CAACM,IAApF;AACA,SAAOA,IAAI,IAAIC,UAAU,GAAGK,gBAAjB,CAAX;AACD;;AACDC,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInDays;\n\nvar _index = require('../toDate/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../differenceInCalendarDays/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../compareAsc/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = (0, _index2.default)(dirtyDateLeft, dirtyOptions);\n  var dateRight = (0, _index2.default)(dirtyDateRight, dirtyOptions);\n\n  var sign = (0, _index6.default)(dateLeft, dateRight, dirtyOptions);\n  var difference = Math.abs((0, _index4.default)(dateLeft, dateRight, dirtyOptions));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = (0, _index6.default)(dateLeft, dateRight, dirtyOptions) === -sign;\n  return sign * (difference - isLastDayNotFull);\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}