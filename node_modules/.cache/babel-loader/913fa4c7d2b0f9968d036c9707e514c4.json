{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/progressBarGradient.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nvar _self = null;\n\nvar generateKey = function generateKey(pre) {\n  return \"\".concat(pre, \"_\").concat(new Date().getTime());\n};\n\nvar _roundedCorners = 2;\nvar colorsR = [\"#ff1133\", \"#ffee00\", \"#00cc44\"];\nvar colors = [\"#00cc44\", \"#ffee00\", \"#ff1133\"];\n\nvar ProgressBarGradient =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProgressBarGradient, _React$Component);\n\n  function ProgressBarGradient() {\n    var _this;\n\n    _classCallCheck(this, ProgressBarGradient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressBarGradient).call(this));\n\n    _this.calculateRatio = function (chartId, data, max, chartDomWidth) {\n      return chartDomWidth / max * data;\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      chartId: generateKey('chartId'),\n      max: 0\n    };\n    _this.interAni = null;\n    _this.interAni2 = null;\n    return _this;\n  }\n\n  _createClass(ProgressBarGradient, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartId = this.props.chartId ? this.props.chartId : this.state.chartId;\n      this.setState({\n        chartId: chartId\n      }); //console.log('direction--', chartId, this.props.direction, 'max=', this.props.max)\n\n      var dir = this.props.direction;\n      var self = this;\n      setTimeout(function () {\n        self.makeChart(chartId, dir, self);\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var chartId = nextProps.chartId ? nextProps.chartId : this.state.chartId;\n      this.setState({\n        chartId: chartId,\n        max: nextProps.max\n      }); //console.log('direction--', chartId, nextProps.direction, 'max=', nextProps.max)\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interAni);\n      clearInterval(this.interAni2);\n    }\n  }, {\n    key: \"makeChart\",\n    value: function makeChart(chartId, direction, self) {\n      if (!document.getElementById(chartId)) {\n        return;\n      }\n\n      var chartDomWidth = document.getElementById(chartId).offsetWidth - 4 || 200;\n      var w = chartDomWidth,\n          h = 20;\n      var roundedCorners = _roundedCorners;\n      var chartData;\n      var data = self.calculateRatio(chartId, self.props.data, self.props.max, chartDomWidth);\n      console.log('chartDomWidth ' + chartDomWidth, chartId, self.props.data, self.props.max, chartDomWidth, data);\n\n      if (data) {\n        chartData = [{\n          value: data\n        }];\n      } else {\n        var randomValue = Math.random() * chartDomWidth;\n        chartData = [{\n          value: randomValue < 50 ? 50 : randomValue\n        }];\n      }\n\n      var key = d3.select('#' + chartId).data(chartData).append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n      var bar = key.append(\"defs\").append(\"svg:linearGradient\").attr(\"id\", \"gradient_\" + direction + chartId).attr(\"x1\", \"0%\").attr(\"y1\", \"100%\").attr(\"x2\", \"100%\").attr(\"y2\", \"100%\").attr(\"spreadMethod\", \"pad\").style(\"border\", \"1px solid rgba(0, 0, 0, 0.4)\").style(\"border-radius\", \"10px\");\n      var mask = key.append(\"defs\").append('clipPath') // define a clip path\n      .attr('id', 'rect-clip_' + direction + chartId).append(\"rect\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", direction === 'reverse' ? w : 0).attr(\"height\", h).style(\"fill\", \"rgba(0,0,0,0.3)\").attr('rx', roundedCorners).attr('ry', roundedCorners);\n      bar.append(\"stop\").attr(\"offset\", \"15%\").attr(\"stop-color\", colors[0]).attr(\"stop-opacity\", 1);\n      bar.append(\"stop\").attr(\"offset\", \"50%\").attr(\"stop-color\", colors[1]).attr(\"stop-opacity\", 1);\n      bar.append(\"stop\").attr(\"offset\", \"85%\").attr(\"stop-color\", colors[2]).attr(\"stop-opacity\", 1); //Create clipPath\n\n      var padding = 0;\n      key.append(\"rect\").attr(\"width\", w).attr(\"height\", h).attr('rx', roundedCorners).attr('ry', roundedCorners).style(\"fill\", \"url(#gradient_\" + direction + chartId + \")\").attr(\"transform\", \"translate(0,0)\").attr(\"clip-path\", \"url(#rect-clip_\" + direction + chartId + \")\");\n\n      if (direction === 'reverse') {\n        bar.attr(\"x1\", \"100%\").attr(\"x2\", \"0%\"); //animation\n\n        mask.attr(\"x\", w).transition().duration(1500).attr(\"x\", function (d) {\n          return w - d.value;\n        });\n        self.interAni = setInterval(function () {\n          mask.attr(\"x\", w).transition().duration(1500).attr(\"x\", function (d) {\n            return w - d.value;\n          });\n        }, 5000);\n      } else {\n        //animation\n        mask.transition().duration(1500).attr(\"width\", function (d) {\n          return d.value;\n        });\n        self.interAni2 = setInterval(function () {\n          mask.attr(\"width\", 0);\n          mask.transition().duration(1500).attr(\"width\", function (d) {\n            return d.value;\n          });\n        }, 5000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.chartId,\n        className: \"progressContClass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ProgressBarGradient;\n}(React.Component);\n\nexport { ProgressBarGradient as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/progressBarGradient.js"],"names":["React","d3","_self","generateKey","pre","Date","getTime","_roundedCorners","colorsR","colors","ProgressBarGradient","calculateRatio","chartId","data","max","chartDomWidth","state","interAni","interAni2","props","setState","dir","direction","self","setTimeout","makeChart","nextProps","nextContext","clearInterval","document","getElementById","offsetWidth","w","h","roundedCorners","chartData","console","log","value","randomValue","Math","random","key","select","append","attr","bar","style","mask","padding","transition","duration","d","setInterval","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AACzB,mBAAWA,GAAX,cAAoB,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACH,CAFD;;AAGA,IAAMC,eAAe,GAAG,CAAxB;AACA,IAAMC,OAAO,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAhB;AACA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAf;;IACqBC,mB;;;;;AACjB,iCAAc;AAAA;;AAAA;;AACV;;AADU,UAsCdC,cAtCc,GAsCG,UAACC,OAAD,EAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,aAArB,EAAuC;AACpD,aAAQA,aAAa,GAAGD,GAAjB,GAAwBD,IAA/B;AAEH,KAzCa;;AAEVX,IAAAA,KAAK,gCAAL;AACA,UAAKc,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAACT,WAAW,CAAC,SAAD,CADV;AAETW,MAAAA,GAAG,EAAC;AAFK,KAAb;AAIA,UAAKG,QAAL,GAAgB,IAAhB;AACA,UAAKC,SAAL,GAAiB,IAAjB;AARU;AASb;;;;wCACmB;AAEhB,UAAIN,OAAO,GAAI,KAAKO,KAAL,CAAWP,OAAZ,GAAsB,KAAKO,KAAL,CAAWP,OAAjC,GAA2C,KAAKI,KAAL,CAAWJ,OAApE;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,OAAO,EAACA;AAAT,OAAd,EAHgB,CAIhB;;AACA,UAAIS,GAAG,GAAG,KAAKF,KAAL,CAAWG,SAArB;AACA,UAAIC,IAAI,GAAG,IAAX;AAEAC,MAAAA,UAAU,CAAC,YAAI;AAEXD,QAAAA,IAAI,CAACE,SAAL,CAAeb,OAAf,EAAwBS,GAAxB,EAA6BE,IAA7B;AACH,OAHS,EAGP,IAHO,CAAV;AAKH;;;8CACyBG,S,EAAWC,W,EAAa;AAC9C,UAAIf,OAAO,GAAIc,SAAS,CAACd,OAAX,GAAqBc,SAAS,CAACd,OAA/B,GAAyC,KAAKI,KAAL,CAAWJ,OAAlE;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,OAAO,EAACA,OAAT;AAAkBE,QAAAA,GAAG,EAACY,SAAS,CAACZ;AAAhC,OAAd,EAF8C,CAG9C;AAKH;;;2CACsB;AACnBc,MAAAA,aAAa,CAAC,KAAKX,QAAN,CAAb;AACAW,MAAAA,aAAa,CAAC,KAAKV,SAAN,CAAb;AACH;;;8BAOSN,O,EAASU,S,EAAWC,I,EAAM;AAChC,UAAG,CAACM,QAAQ,CAACC,cAAT,CAAwBlB,OAAxB,CAAJ,EAAsC;AAClC;AACH;;AACD,UAAIG,aAAa,GAAGc,QAAQ,CAACC,cAAT,CAAwBlB,OAAxB,EAAiCmB,WAAjC,GAA+C,CAA/C,IAAoD,GAAxE;AACA,UAAIC,CAAC,GAAGjB,aAAR;AAAA,UAAuBkB,CAAC,GAAG,EAA3B;AACA,UAAIC,cAAc,GAAG3B,eAArB;AACA,UAAI4B,SAAJ;AACA,UAAItB,IAAI,GAAGU,IAAI,CAACZ,cAAL,CAAoBC,OAApB,EAA6BW,IAAI,CAACJ,KAAL,CAAWN,IAAxC,EAA8CU,IAAI,CAACJ,KAAL,CAAWL,GAAzD,EAA8DC,aAA9D,CAAX;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAiBtB,aAA7B,EAA4CH,OAA5C,EAAqDW,IAAI,CAACJ,KAAL,CAAWN,IAAhE,EAAsEU,IAAI,CAACJ,KAAL,CAAWL,GAAjF,EAAsFC,aAAtF,EAAqGF,IAArG;;AACA,UAAGA,IAAH,EAAS;AACLsB,QAAAA,SAAS,GAAG,CAAC;AAACG,UAAAA,KAAK,EAACzB;AAAP,SAAD,CAAZ;AACH,OAFD,MAEO;AACH,YAAI0B,WAAW,GAAGC,IAAI,CAACC,MAAL,KAAc1B,aAAhC;AACAoB,QAAAA,SAAS,GAAG,CAAC;AAACG,UAAAA,KAAK,EAAEC,WAAW,GAAG,EAAf,GAAmB,EAAnB,GAAsBA;AAA7B,SAAD,CAAZ;AACH;;AAGD,UAAIG,GAAG,GAAGzC,EAAE,CAAC0C,MAAH,CAAU,MAAI/B,OAAd,EACLC,IADK,CACAsB,SADA,EAELS,MAFK,CAEE,KAFF,EAGLC,IAHK,CAGA,OAHA,EAGSb,CAHT,EAILa,IAJK,CAIA,QAJA,EAIUZ,CAJV,CAAV;AAMA,UAAIa,GAAG,GAAGJ,GAAG,CAACE,MAAJ,CAAW,MAAX,EACLA,MADK,CACE,oBADF,EAELC,IAFK,CAEA,IAFA,EAEM,cAAYvB,SAAZ,GAAsBV,OAF5B,EAGLiC,IAHK,CAGA,IAHA,EAGM,IAHN,EAILA,IAJK,CAIA,IAJA,EAIM,MAJN,EAKLA,IALK,CAKA,IALA,EAKM,MALN,EAMLA,IANK,CAMA,IANA,EAMM,MANN,EAOLA,IAPK,CAOA,cAPA,EAOgB,KAPhB,EAQLE,KARK,CAQC,QARD,EAQW,8BARX,EASLA,KATK,CASC,eATD,EASkB,MATlB,CAAV;AAWA,UAAIC,IAAI,GAAGN,GAAG,CAACE,MAAJ,CAAW,MAAX,EACNA,MADM,CACC,UADD,EACc;AADd,OAENC,IAFM,CAED,IAFC,EAEK,eAAavB,SAAb,GAAuBV,OAF5B,EAGNgC,MAHM,CAGC,MAHD,EAINC,IAJM,CAID,GAJC,EAII,CAJJ,EAKNA,IALM,CAKD,GALC,EAKI,CALJ,EAMNA,IANM,CAMD,OANC,EAMSvB,SAAS,KAAK,SAAf,GAA0BU,CAA1B,GAA4B,CANpC,EAONa,IAPM,CAOD,QAPC,EAOSZ,CAPT,EAOYc,KAPZ,CAOkB,MAPlB,EAO0B,iBAP1B,EAQNF,IARM,CAQD,IARC,EAQKX,cARL,EASNW,IATM,CASD,IATC,EASKX,cATL,CAAX;AAYAY,MAAAA,GAAG,CAACF,MAAJ,CAAW,MAAX,EACKC,IADL,CACU,QADV,EACoB,KADpB,EAEKA,IAFL,CAEU,YAFV,EAEwBpC,MAAM,CAAC,CAAD,CAF9B,EAGKoC,IAHL,CAGU,cAHV,EAG0B,CAH1B;AAKAC,MAAAA,GAAG,CAACF,MAAJ,CAAW,MAAX,EACKC,IADL,CACU,QADV,EACoB,KADpB,EAEKA,IAFL,CAEU,YAFV,EAEwBpC,MAAM,CAAC,CAAD,CAF9B,EAGKoC,IAHL,CAGU,cAHV,EAG0B,CAH1B;AAKAC,MAAAA,GAAG,CAACF,MAAJ,CAAW,MAAX,EACKC,IADL,CACU,QADV,EACoB,KADpB,EAEKA,IAFL,CAEU,YAFV,EAEwBpC,MAAM,CAAC,CAAD,CAF9B,EAGKoC,IAHL,CAGU,cAHV,EAG0B,CAH1B,EAzDgC,CA8DhC;;AAEA,UAAII,OAAO,GAAG,CAAd;AAGAP,MAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EACKC,IADL,CACU,OADV,EACmBb,CADnB,EAEKa,IAFL,CAEU,QAFV,EAEoBZ,CAFpB,EAGKY,IAHL,CAGU,IAHV,EAGgBX,cAHhB,EAIKW,IAJL,CAIU,IAJV,EAIgBX,cAJhB,EAKKa,KALL,CAKW,MALX,EAKmB,mBAAiBzB,SAAjB,GAA2BV,OAA3B,GAAmC,GALtD,EAMKiC,IANL,CAMU,WANV,EAMuB,gBANvB,EAOKA,IAPL,CAOU,WAPV,EAOuB,oBAAkBvB,SAAlB,GAA4BV,OAA5B,GAAoC,GAP3D;;AAUA,UAAGU,SAAS,KAAK,SAAjB,EAA2B;AACvBwB,QAAAA,GAAG,CAACD,IAAJ,CAAS,IAAT,EAAe,MAAf,EACKA,IADL,CACU,IADV,EACgB,IADhB,EADuB,CAIvB;;AACAG,QAAAA,IAAI,CAACH,IAAL,CAAU,GAAV,EAAeb,CAAf,EACKkB,UADL,GACkBC,QADlB,CAC2B,IAD3B,EAEKN,IAFL,CAEU,GAFV,EAEe,UAASO,CAAT,EAAW;AAAE,iBAAQpB,CAAC,GAAGoB,CAAC,CAACd,KAAd;AAAqB,SAFjD;AAIAf,QAAAA,IAAI,CAACN,QAAL,GAAgBoC,WAAW,CAAC,YAAI;AAC5BL,UAAAA,IAAI,CAACH,IAAL,CAAU,GAAV,EAAeb,CAAf,EACKkB,UADL,GACkBC,QADlB,CAC2B,IAD3B,EAEKN,IAFL,CAEU,GAFV,EAEe,UAASO,CAAT,EAAW;AAAE,mBAAQpB,CAAC,GAAGoB,CAAC,CAACd,KAAd;AAAqB,WAFjD;AAGH,SAJ0B,EAIxB,IAJwB,CAA3B;AAKH,OAdD,MAcO;AACH;AACAU,QAAAA,IAAI,CAACE,UAAL,GAAkBC,QAAlB,CAA2B,IAA3B,EACKN,IADL,CACU,OADV,EACmB,UAASO,CAAT,EAAW;AAAE,iBAAOA,CAAC,CAACd,KAAT;AAAe,SAD/C;AAGAf,QAAAA,IAAI,CAACL,SAAL,GAAiBmC,WAAW,CAAC,YAAI;AAC7BL,UAAAA,IAAI,CAACH,IAAL,CAAU,OAAV,EAAmB,CAAnB;AACAG,UAAAA,IAAI,CAACE,UAAL,GAAkBC,QAAlB,CAA2B,IAA3B,EACKN,IADL,CACU,OADV,EACmB,UAASO,CAAT,EAAW;AAAE,mBAAOA,CAAC,CAACd,KAAT;AAAe,WAD/C;AAGH,SAL2B,EAKzB,IALyB,CAA5B;AAMH;AAIJ;;;6BACQ;AACN,aACI;AAAK,QAAA,EAAE,EAAE,KAAKtB,KAAL,CAAWJ,OAApB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGF;;;;EA3J4CZ,KAAK,CAACsD,S;;SAAlC5C,mB","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nlet _self = null;\nconst generateKey = (pre) => {\n    return `${ pre }_${ new Date().getTime() }`;\n}\nconst _roundedCorners = 2;\nconst colorsR = [\"#ff1133\", \"#ffee00\", \"#00cc44\"];\nconst colors = [\"#00cc44\", \"#ffee00\", \"#ff1133\"];\nexport default class ProgressBarGradient extends React.Component {\n    constructor() {\n        super();\n        _self = this;\n        this.state = {\n            chartId:generateKey('chartId'),\n            max:0\n        }\n        this.interAni = null;\n        this.interAni2 = null;\n    }\n    componentDidMount() {\n\n        let chartId = (this.props.chartId)? this.props.chartId : this.state.chartId;\n        this.setState({chartId:chartId})\n        //console.log('direction--', chartId, this.props.direction, 'max=', this.props.max)\n        let dir = this.props.direction;\n        let self = this;\n\n        setTimeout(()=>{\n\n            self.makeChart(chartId, dir, self)\n        }, 1000);\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        let chartId = (nextProps.chartId)? nextProps.chartId : this.state.chartId;\n        this.setState({chartId:chartId, max:nextProps.max})\n        //console.log('direction--', chartId, nextProps.direction, 'max=', nextProps.max)\n\n\n\n\n    }\n    componentWillUnmount() {\n        clearInterval(this.interAni)\n        clearInterval(this.interAni2)\n    }\n\n    calculateRatio = (chartId, data, max, chartDomWidth) => {\n        return (chartDomWidth / max) * data;\n\n    }\n\n    makeChart(chartId, direction, self) {\n        if(!document.getElementById(chartId)) {\n            return;\n        }\n        var chartDomWidth = document.getElementById(chartId).offsetWidth - 4 || 200;\n        var w = chartDomWidth, h = 20;\n        var roundedCorners = _roundedCorners;\n        var chartData;\n        let data = self.calculateRatio(chartId, self.props.data, self.props.max, chartDomWidth)\n        console.log('chartDomWidth '+chartDomWidth, chartId, self.props.data, self.props.max, chartDomWidth, data)\n        if(data) {\n            chartData = [{value:data}]\n        } else {\n            var randomValue = Math.random()*chartDomWidth;\n            chartData = [{value:(randomValue < 50)?50:randomValue}]\n        }\n\n\n        var key = d3.select('#'+chartId)\n            .data(chartData)\n            .append(\"svg\")\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n        var bar = key.append(\"defs\")\n            .append(\"svg:linearGradient\")\n            .attr(\"id\", \"gradient_\"+direction+chartId)\n            .attr(\"x1\", \"0%\")\n            .attr(\"y1\", \"100%\")\n            .attr(\"x2\", \"100%\")\n            .attr(\"y2\", \"100%\")\n            .attr(\"spreadMethod\", \"pad\")\n            .style(\"border\", \"1px solid rgba(0, 0, 0, 0.4)\")\n            .style(\"border-radius\", \"10px\")\n\n        var mask = key.append(\"defs\")\n            .append('clipPath')  // define a clip path\n            .attr('id', 'rect-clip_'+direction+chartId)\n            .append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", (direction === 'reverse')?w:0)\n            .attr(\"height\", h).style(\"fill\", \"rgba(0,0,0,0.3)\")\n            .attr('rx', roundedCorners)\n            .attr('ry', roundedCorners)\n\n\n        bar.append(\"stop\")\n            .attr(\"offset\", \"15%\")\n            .attr(\"stop-color\", colors[0])\n            .attr(\"stop-opacity\", 1);\n\n        bar.append(\"stop\")\n            .attr(\"offset\", \"50%\")\n            .attr(\"stop-color\", colors[1])\n            .attr(\"stop-opacity\", 1);\n\n        bar.append(\"stop\")\n            .attr(\"offset\", \"85%\")\n            .attr(\"stop-color\", colors[2])\n            .attr(\"stop-opacity\", 1);\n\n        //Create clipPath\n\n        var padding = 0;\n\n\n        key.append(\"rect\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n            .attr('rx', roundedCorners)\n            .attr('ry', roundedCorners)\n            .style(\"fill\", \"url(#gradient_\"+direction+chartId+\")\")\n            .attr(\"transform\", \"translate(0,0)\")\n            .attr(\"clip-path\", \"url(#rect-clip_\"+direction+chartId+\")\")\n\n\n        if(direction === 'reverse'){\n            bar.attr(\"x1\", \"100%\")\n                .attr(\"x2\", \"0%\");\n\n            //animation\n            mask.attr(\"x\", w)\n                .transition().duration(1500)\n                .attr(\"x\", function(d){ return (w - d.value)})\n            ;\n            self.interAni = setInterval(()=>{\n                mask.attr(\"x\", w)\n                    .transition().duration(1500)\n                    .attr(\"x\", function(d){ return (w - d.value)})\n            }, 5000)\n        } else {\n            //animation\n            mask.transition().duration(1500)\n                .attr(\"width\", function(d){ return d.value})\n            ;\n            self.interAni2 = setInterval(()=>{\n                mask.attr(\"width\", 0)\n                mask.transition().duration(1500)\n                    .attr(\"width\", function(d){ return d.value})\n                ;\n            }, 5000)\n        }\n\n\n\n    }\n    render() {\n       return(\n           <div id={this.state.chartId} className=\"progressContClass\"></div>\n       )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}