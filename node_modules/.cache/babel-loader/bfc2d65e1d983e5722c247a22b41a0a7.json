{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/editMap.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Annotations, Annotation } from \"react-simple-maps\";\nimport { Button, Icon } from 'semantic-ui-react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { Motion, spring } from \"react-motion\";\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\";\nimport request from \"axios\"; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\nimport * as aggregation from '../../../utils'; //style\n\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css';\nvar wrapperStyles = {\n  width: \"100%\",\n  height: \"100%\",\n  minWidth: 500,\n  margin: \"0 auto\",\n  overflow: 'hidden'\n};\nvar zoomControls = {\n  center: [0, 0],\n  zoom: 1\n}; //reference : /public/assets/data-maps/world-most-populous-cities.json\n\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 48]);\nvar markerSize = [20, 24];\nvar _self = null;\n\nvar EditMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditMap, _Component);\n\n  function EditMap() {\n    var _this;\n\n    _classCallCheck(this, EditMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditMap).call(this));\n\n    _this.handleMapClick = function (a, b, c, d) {};\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      center: zoomControls.center,\n      zoom: zoomControls.zoom,\n      cities: [],\n      countries: [],\n      citiesSecond: [],\n      detailMode: false,\n      selectedCity: 'Barcelona',\n      oldCountry: '',\n      unselectCity: '',\n      clickCities: []\n    };\n    _this.handleZoomIn = _this.handleZoomIn.bind(_assertThisInitialized(_this));\n    _this.handleZoomOut = _this.handleZoomOut.bind(_assertThisInitialized(_this));\n    _this.handleCityClick = _this.handleCityClick.bind(_assertThisInitialized(_this));\n    _this.handleCityLocation = _this.handleCityLocation.bind(_assertThisInitialized(_this)); //this.handleGotoAnalysis = this.handleGotoAnalysis.bind(this)\n\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this));\n    _this.handleMove = _this.handleMove.bind(_assertThisInitialized(_this));\n    _this.handleLeave = _this.handleLeave.bind(_assertThisInitialized(_this));\n    _this.dir = 1;\n    _this.interval = null;\n    return _this;\n  }\n\n  _createClass(EditMap, [{\n    key: \"handleZoomIn\",\n    value: function handleZoomIn() {\n      this.setState({\n        zoom: this.state.zoom * 2\n      });\n      this.props.zoomIn(this.state.detailMode);\n    }\n  }, {\n    key: \"handleZoomOut\",\n    value: function handleZoomOut() {\n      this.setState({\n        zoom: this.state.zoom / 2\n      });\n      this.props.zoomOut(this.state.detailMode);\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState({\n        center: zoomControls.center,\n        zoom: zoomControls.zoom,\n        detailMode: false\n      });\n      this.props.handleChangeClickCity([]);\n      this.props.resetMap(false);\n    } // 펼쳐진 지도( full screen map)\n\n  }, {\n    key: \"handleCityClick\",\n    value: function handleCityClick(city) {\n      this.setState({\n        zoom: 4,\n        center: city.coordinates,\n        detailMode: true\n      });\n      this.props.zoomIn(true);\n\n      if (d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n        d3.selectAll('.rsm-markers').selectAll(\".levelFive\").transition().ease(d3.easeBack).attr(\"r\", markerSize[0]);\n      }\n\n      var clickMarker = [];\n\n      if (city) {\n        city.name.map(function (item, i) {\n          clickMarker.push({\n            \"name\": item,\n            \"coordinates\": city.coordinates,\n            \"population\": 17843000,\n            \"cost\": 1\n          });\n        });\n      }\n\n      this.setState({\n        clickCities: clickMarker\n      });\n      this.props.handleChangeClickCity(clickMarker);\n      this.props.handleChangeCity(city);\n    }\n  }, {\n    key: \"handleCityLocation\",\n    value: function handleCityLocation(value) {\n      var city = {\n        coordinates: value\n      };\n      this.setState({\n        zoom: 3,\n        center: city.coordinates,\n        detailMode: true\n      });\n      this.props.zoomIn(true);\n\n      if (d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n        d3.selectAll('.rsm-markers').selectAll(\".levelFive\").transition().ease(d3.easeBack).attr(\"r\", markerSize[0]);\n      }\n\n      var clickMarker = [city];\n      this.setState({\n        clickCities: clickMarker\n      }); //this.props.handleChangeClickCity(city);\n\n      this.props.handleChangeCity(city);\n    } // map marker text click\n\n  }, {\n    key: \"handleAnnoteClick\",\n    value: function handleAnnoteClick(city) {} // handleGotoAnalysis(country) {\n    //     if(this.props.parentProps) this.props.parentProps.gotoNext(country);\n    // }\n\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n\n  }, {\n    key: \"handleViewZone\",\n    value: function handleViewZone(country) {\n      //change the data of detail Info\n      _self.setState({\n        selectedCity: country.name\n      });\n\n      if (d3.selectAll('.detailMarker_' + _self.state.oldCountry)) {\n        d3.selectAll('.detailMarker_' + _self.state.oldCountry).transition().attr(\"r\", markerSize[0]).style(\"opacity\", 1);\n      }\n\n      _self.setState({\n        oldCountry: country.name\n      });\n\n      _self.props.handleChangeCity(country);\n    } //마커의 깜박거림 크기\n\n  }, {\n    key: \"blinkAnimationMarker\",\n    value: function blinkAnimationMarker(id, dir) {\n      var radius = 0;\n      var alpha = 1;\n      var durate = 900;\n\n      if (dir === 1) {\n        radius = 32;\n        alpha = 0;\n        durate = 900;\n      } else {\n        radius = 16;\n        alpha = 1;\n        durate = 300;\n      }\n\n      if (d3.selectAll('.' + id).selectAll(\".levelFive\")) {\n        d3.selectAll('.' + id).selectAll(\".levelFive\").transition().duration(durate).ease(d3.easeBack).attr(\"r\", radius).style(\"opacity\", alpha);\n      }\n\n      if (d3.selectAll('.detailMarker_' + _self.state.selectedCity)) {\n        d3.selectAll('.detailMarker_' + _self.state.selectedCity).transition().duration(durate).ease(d3.easeBack).attr(\"r\", dir === 1 ? markerSize[0] : markerSize[1]).style(\"opacity\", alpha);\n      }\n    } //tooltip\n\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n    }\n  }, {\n    key: \"handleLeave\",\n    value: function handleLeave() {//this.props.dispatch(hide())\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _self = this;\n\n      this.interval = setInterval(function () {\n        if (_self.dir === 1) {\n          _self.dir = -1;\n        } else {\n          _self.dir = 1;\n        }\n\n        _self.blinkAnimationMarker('rsm-markers', _self.dir);\n      }, 900);\n\n      if (_self.props.tabIdx === 'pg=1') {\n        _self.handleCityClick({\n          \"name\": this.state.selectedCity,\n          \"coordinates\": [2.1734, 41.3851],\n          \"population\": 37843000,\n          \"cost\": 3\n        });\n      }\n\n      _self.setState({\n        oldCountry: this.state.selectedCity\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.locationLongLat) {\n        this.handleCityLocation(nextProps.locationLongLat);\n      } else {\n        this.handleReset();\n        this.setState({\n          clickCities: []\n        });\n      } // let data = nextProps.devData;\n      // function reduceUp(value) {\n      //     return Math.round(value)\n      // }\n      // const mapName = (item) => {\n      //     if (this.props.itemLabel == \"Cloudlets\") {\n      //         return item.CloudletName\n      //     } else if (this.props.itemLabel == \"App Instances\") {\n      //         return item.AppName\n      //     } else if (this.props.itemLabel == \"Cluster Instances\") {\n      //         return item.ClusterName\n      //     } else {\n      //         return\n      //     }\n      // }\n      // let locations = data.map((item) => (\n      //     {LAT:reduceUp(item.CloudletLocation.latitude), LON:reduceUp(item.CloudletLocation.longitude), cloudlet:mapName(item)}\n      // ))\n      // let locationData = [];\n      // let groupbyData = aggregation.groupByCompare(locations, ['LAT','LON']);\n      // const cloundletName = (key) => {\n      //     let nameArray = [];\n      //     groupbyData[key].map((item, i) => {\n      //         nameArray[i] = groupbyData[key][i]['cloudlet'];\n      //     })\n      //     return nameArray;\n      // }\n      // console.log('data locations -- ', Object.keys(groupbyData))\n      // Object.keys(groupbyData).map((key) => {\n      //     locationData.push({ \"name\": cloundletName(key),    \"coordinates\": [groupbyData[key][0]['LON'], groupbyData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyData[key].length })\n      // })\n      // //\n      // let cloudlet = data.map((item) => (\n      //     {LAT:item.CloudletLocation.latitude, LON:item.CloudletLocation.longitude, cloudlet:item.CloudletName}\n      // ))\n      // let cloudletData = [];\n      // let groupbyClData = aggregation.groupBy(cloudlet, 'cloudlet');\n      // console.log('data groupbyClData -- ', Object.keys(groupbyClData))\n      // Object.keys(groupbyClData).map((key) => {\n      //     cloudletData.push({ \"name\": key,    \"coordinates\": [groupbyClData[key][0]['LON'], groupbyClData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyClData[key].length })\n      // })\n      // console.log('cloudletData  -- ', locationData)\n      // this.setState({\n      //     cities: locationData\n      // })\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n      this.props.resetLocation && this.props.resetLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022', '#66CCFF', '#6c50ff'];\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"zoom-inout-reset-clusterMap\",\n        style: {\n          left: 8,\n          bottom: 4,\n          position: 'absolute',\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleZoomIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleZoomOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"minus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[5],\n        endColor: grdColors[5],\n        idCSS: \"levelFive\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[4],\n        endColor: grdColors[4],\n        idCSS: \"levelFour\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[3],\n        endColor: grdColors[3],\n        idCSS: \"levelThree\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[2],\n        endColor: grdColors[2],\n        idCSS: \"levelTwo\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[6],\n        endColor: grdColors[6],\n        idCSS: \"levelOne\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[7],\n        endColor: grdColors[7],\n        idCSS: \"levelSeven\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, function (_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n        return React.createElement(Motion, {\n          defaultStyle: {\n            zoom: 1,\n            x: 30,\n            y: 40\n          },\n          style: {\n            zoom: spring(_this2.state.zoom, {\n              stiffness: 210,\n              damping: 30\n            }),\n            x: spring(_this2.state.center[0], {\n              stiffness: 210,\n              damping: 30\n            }),\n            y: spring(_this2.state.center[1], {\n              stiffness: 210,\n              damping: 30\n            })\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, function (_ref2) {\n          var zoom = _ref2.zoom,\n              x = _ref2.x,\n              y = _ref2.y;\n          return React.createElement(ComposableMap, {\n            projectionConfig: {\n              scale: 205\n            },\n            width: 980,\n            height: 551,\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: styles.geoBackground.color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }, React.createElement(ZoomableGroup, {\n            center: [x, y],\n            zoom: zoom,\n            disablePanning: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, React.createElement(Geographies, {\n            geography: \"/topojson-maps/world-110m.json\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367\n            },\n            __self: this\n          }, function (geographies, projection) {\n            return geographies.map(function (geography, i) {\n              return geography.id !== \"010\" && React.createElement(Geography, {\n                key: i,\n                geography: geography,\n                projection: projection,\n                \"data-tip\": geography.properties.NAME,\n                style: styles.geography,\n                onMouseMove: _this2.handleMove,\n                onMouseLeave: _this2.handleLeave,\n                onClick: _this2.handleMapClick,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 370\n                },\n                __self: this\n              });\n            });\n          }), React.createElement(Markers, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382\n            },\n            __self: this\n          }, _this2.state.clickCities.map(function (city, i) {\n            return React.createElement(Marker, {\n              key: i,\n              marker: city //onClick={this.handleViewZone}\n              ,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385\n              },\n              __self: this\n            }, React.createElement(\"circle\", {\n              //class={\"detailMarker_\"+city.name}\n              cx: 0,\n              cy: 0,\n              r: markerSize[0],\n              opacity: 1,\n              fill: styles.marker.second.fill,\n              stroke: styles.marker.second.stroke,\n              strokeWidth: styles.marker.second.strokeWidth,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 390\n              },\n              __self: this\n            }));\n          }))));\n        });\n      }));\n    }\n  }]);\n\n  return EditMap;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    data: state.receiveDataReduce.data,\n    tabIdx: state.siteChanger.site.subPath,\n    itemLabel: state.computeItem.item\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.setUser(data));\n    },\n    handleChangeTab: function handleChangeTab(data) {\n      dispatch(actions.changeTab(data));\n    },\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    },\n    handleChangeClickCity: function handleChangeClickCity(data) {\n      dispatch(actions.clickCityList(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(EditMap);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/editMap.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Annotations","Annotation","Button","Icon","ContainerDimensions","Motion","spring","d3","scaleLinear","request","connect","actions","RadialGradientSVG","aggregation","styles","wrapperStyles","width","height","minWidth","margin","overflow","zoomControls","center","zoom","cityScale","domain","range","markerSize","_self","EditMap","handleMapClick","a","b","c","d","state","cities","countries","citiesSecond","detailMode","selectedCity","oldCountry","unselectCity","clickCities","handleZoomIn","bind","handleZoomOut","handleCityClick","handleCityLocation","handleReset","handleMove","handleLeave","dir","interval","setState","props","zoomIn","zoomOut","handleChangeClickCity","resetMap","city","coordinates","selectAll","transition","ease","easeBack","attr","clickMarker","name","map","item","i","push","handleChangeCity","value","country","style","id","radius","alpha","durate","duration","geography","evt","x","clientX","y","clientY","window","pageYOffset","setInterval","blinkAnimationMarker","tabIdx","nextProps","locationLongLat","clearInterval","resetLocation","grdColors","left","bottom","position","display","stiffness","damping","scale","backgroundColor","geoBackground","color","geographies","projection","properties","NAME","marker","second","fill","stroke","strokeWidth","mapStateToProps","ownProps","data","receiveDataReduce","siteChanger","site","subPath","itemLabel","computeItem","mapDispatchProps","dispatch","handleInjectData","setUser","handleChangeTab","changeTab","changeCity","clickCityList"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,OALJ,EAMIC,MANJ,EAMYC,WANZ,EAMyBC,UANzB,QAOO,mBAPP;AAQA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAOC,iBAAP,MAA8B,8CAA9B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,gBAA7B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,cAAP;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,MAAM,EAAC,MAFW;AAGlBC,EAAAA,QAAQ,EAAE,GAHQ;AAIlBC,EAAAA,MAAM,EAAE,QAJU;AAKlBC,EAAAA,QAAQ,EAAC;AALS,CAAtB;AAOA,IAAMC,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAC,CAAC,CAAD,EAAI,CAAJ,CAAR;AAAgBC,EAAAA,IAAI,EAAC;AAArB,CAArB,C,CACA;;AAEA,IAAMC,SAAS,GAAGhB,WAAW,GACxBiB,MADa,CACN,CAAC,CAAD,EAAG,QAAH,CADM,EAEbC,KAFa,CAEP,CAAC,CAAD,EAAG,EAAH,CAFO,CAAlB;AAGA,IAAMC,UAAU,GAAG,CAAC,EAAD,EAAK,EAAL,CAAnB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;IACMC,O;;;;;AACF,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAiLdC,cAjLc,GAiLG,UAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOC,CAAP,EAAa,CAE7B,CAnLa;;AAEVN,IAAAA,KAAK,gCAAL;AACA,UAAKO,KAAL,GAAa;AACTb,MAAAA,MAAM,EAAED,YAAY,CAACC,MADZ;AAETC,MAAAA,IAAI,EAAEF,YAAY,CAACE,IAFV;AAGTa,MAAAA,MAAM,EAAC,EAHE;AAITC,MAAAA,SAAS,EAAC,EAJD;AAKTC,MAAAA,YAAY,EAAC,EALJ;AAMTC,MAAAA,UAAU,EAAC,KANF;AAOTC,MAAAA,YAAY,EAAC,WAPJ;AAQTC,MAAAA,UAAU,EAAC,EARF;AASTC,MAAAA,YAAY,EAAC,EATJ;AAUTC,MAAAA,WAAW,EAAC;AAVH,KAAb;AAYA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,+BAAvB;AACA,UAAKG,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBH,IAAxB,+BAA1B,CAlBU,CAmBV;;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,+BAAnB;AACA,UAAKK,UAAL,GAAkB,MAAKA,UAAL,CAAgBL,IAAhB,+BAAlB;AACA,UAAKM,WAAL,GAAmB,MAAKA,WAAL,CAAiBN,IAAjB,+BAAnB;AACA,UAAKO,GAAL,GAAW,CAAX;AACA,UAAKC,QAAL,GAAgB,IAAhB;AAxBU;AAyBb;;;;mCACc;AACX,WAAKC,QAAL,CAAc;AACV/B,QAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWZ,IAAX,GAAkB;AADd,OAAd;AAGA,WAAKgC,KAAL,CAAWC,MAAX,CAAkB,KAAKrB,KAAL,CAAWI,UAA7B;AACH;;;oCACe;AACZ,WAAKe,QAAL,CAAc;AACV/B,QAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWZ,IAAX,GAAkB;AADd,OAAd;AAGA,WAAKgC,KAAL,CAAWE,OAAX,CAAmB,KAAKtB,KAAL,CAAWI,UAA9B;AACH;;;kCACa;AACV,WAAKe,QAAL,CAAc;AACVhC,QAAAA,MAAM,EAAED,YAAY,CAACC,MADX;AAEVC,QAAAA,IAAI,EAAEF,YAAY,CAACE,IAFT;AAGVgB,QAAAA,UAAU,EAAC;AAHD,OAAd;AAKA,WAAKgB,KAAL,CAAWG,qBAAX,CAAiC,EAAjC;AACA,WAAKH,KAAL,CAAWI,QAAX,CAAoB,KAApB;AACH,K,CAGD;;;;oCACgBC,I,EAAM;AAClB,WAAKN,QAAL,CAAc;AACV/B,QAAAA,IAAI,EAAE,CADI;AAEVD,QAAAA,MAAM,EAAEsC,IAAI,CAACC,WAFH;AAGVtB,QAAAA,UAAU,EAAC;AAHD,OAAd;AAKA,WAAKgB,KAAL,CAAWC,MAAX,CAAkB,IAAlB;;AAEA,UAAGjD,EAAE,CAACuD,SAAH,CAAa,cAAb,EAA6BA,SAA7B,CAAuC,YAAvC,CAAH,EAAyD;AACrDvD,QAAAA,EAAE,CAACuD,SAAH,CAAa,cAAb,EAA6BA,SAA7B,CAAuC,YAAvC,EACKC,UADL,GAEKC,IAFL,CAEUzD,EAAE,CAAC0D,QAFb,EAGKC,IAHL,CAGU,GAHV,EAGevC,UAAU,CAAC,CAAD,CAHzB;AAIH;;AACD,UAAIwC,WAAW,GAAG,EAAlB;;AACA,UAAGP,IAAH,EAAS;AACLA,QAAAA,IAAI,CAACQ,IAAL,CAAUC,GAAV,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACvBJ,UAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAE,oBAAQF,IAAV;AAAmB,2BAAeV,IAAI,CAACC,WAAvC;AAAoD,0BAAc,QAAlE;AAA4E,oBAAO;AAAnF,WAAjB;AACH,SAFD;AAGH;;AACD,WAAKP,QAAL,CAAc;AACVX,QAAAA,WAAW,EAACwB;AADF,OAAd;AAGA,WAAKZ,KAAL,CAAWG,qBAAX,CAAiCS,WAAjC;AACA,WAAKZ,KAAL,CAAWkB,gBAAX,CAA4Bb,IAA5B;AACH;;;uCAEkBc,K,EAAO;AACtB,UAAMd,IAAI,GAAG;AACTC,QAAAA,WAAW,EAAEa;AADJ,OAAb;AAGA,WAAKpB,QAAL,CAAc;AACV/B,QAAAA,IAAI,EAAE,CADI;AAEVD,QAAAA,MAAM,EAAEsC,IAAI,CAACC,WAFH;AAGVtB,QAAAA,UAAU,EAAC;AAHD,OAAd;AAKA,WAAKgB,KAAL,CAAWC,MAAX,CAAkB,IAAlB;;AAEA,UAAGjD,EAAE,CAACuD,SAAH,CAAa,cAAb,EAA6BA,SAA7B,CAAuC,YAAvC,CAAH,EAAyD;AACrDvD,QAAAA,EAAE,CAACuD,SAAH,CAAa,cAAb,EAA6BA,SAA7B,CAAuC,YAAvC,EACKC,UADL,GAEKC,IAFL,CAEUzD,EAAE,CAAC0D,QAFb,EAGKC,IAHL,CAGU,GAHV,EAGevC,UAAU,CAAC,CAAD,CAHzB;AAIH;;AACD,UAAIwC,WAAW,GAAG,CAACP,IAAD,CAAlB;AAEA,WAAKN,QAAL,CAAc;AACVX,QAAAA,WAAW,EAACwB;AADF,OAAd,EAnBsB,CAsBtB;;AACA,WAAKZ,KAAL,CAAWkB,gBAAX,CAA4Bb,IAA5B;AACH,K,CAGD;;;;sCACkBA,I,EAAM,CACvB,C,CAED;AACA;AACA;;AAEA;;;;;;;mCAIee,O,EAAS;AACpB;AACA/C,MAAAA,KAAK,CAAC0B,QAAN,CAAe;AAACd,QAAAA,YAAY,EAAEmC,OAAO,CAACP;AAAvB,OAAf;;AACA,UAAG7D,EAAE,CAACuD,SAAH,CAAa,mBAAiBlC,KAAK,CAACO,KAAN,CAAYM,UAA1C,CAAH,EAA0D;AACtDlC,QAAAA,EAAE,CAACuD,SAAH,CAAa,mBAAiBlC,KAAK,CAACO,KAAN,CAAYM,UAA1C,EACKsB,UADL,GAEKG,IAFL,CAEU,GAFV,EAEevC,UAAU,CAAC,CAAD,CAFzB,EAGKiD,KAHL,CAGW,SAHX,EAGqB,CAHrB;AAIH;;AACDhD,MAAAA,KAAK,CAAC0B,QAAN,CAAe;AAACb,QAAAA,UAAU,EAACkC,OAAO,CAACP;AAApB,OAAf;;AAEAxC,MAAAA,KAAK,CAAC2B,KAAN,CAAYkB,gBAAZ,CAA6BE,OAA7B;AACH,K,CAKD;;;;yCACqBE,E,EAAIzB,G,EAAK;AAC1B,UAAI0B,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,MAAM,GAAG,GAAb;;AACA,UAAG5B,GAAG,KAAK,CAAX,EAAa;AACT0B,QAAAA,MAAM,GAAG,EAAT;AACAC,QAAAA,KAAK,GAAG,CAAR;AACAC,QAAAA,MAAM,GAAG,GAAT;AACH,OAJD,MAIO;AACHF,QAAAA,MAAM,GAAG,EAAT;AACAC,QAAAA,KAAK,GAAG,CAAR;AACAC,QAAAA,MAAM,GAAG,GAAT;AACH;;AACD,UAAGzE,EAAE,CAACuD,SAAH,CAAa,MAAIe,EAAjB,EAAqBf,SAArB,CAA+B,YAA/B,CAAH,EAAiD;AAC7CvD,QAAAA,EAAE,CAACuD,SAAH,CAAa,MAAIe,EAAjB,EAAqBf,SAArB,CAA+B,YAA/B,EACKC,UADL,GAEKkB,QAFL,CAEcD,MAFd,EAGKhB,IAHL,CAGUzD,EAAE,CAAC0D,QAHb,EAIKC,IAJL,CAIU,GAJV,EAIeY,MAJf,EAKKF,KALL,CAKW,SALX,EAKqBG,KALrB;AAMH;;AAGD,UAAGxE,EAAE,CAACuD,SAAH,CAAa,mBAAiBlC,KAAK,CAACO,KAAN,CAAYK,YAA1C,CAAH,EAA4D;AACxDjC,QAAAA,EAAE,CAACuD,SAAH,CAAa,mBAAiBlC,KAAK,CAACO,KAAN,CAAYK,YAA1C,EACKuB,UADL,GAEKkB,QAFL,CAEcD,MAFd,EAGKhB,IAHL,CAGUzD,EAAE,CAAC0D,QAHb,EAIKC,IAJL,CAIU,GAJV,EAIgBd,GAAG,KAAK,CAAT,GAAYzB,UAAU,CAAC,CAAD,CAAtB,GAA0BA,UAAU,CAAC,CAAD,CAJnD,EAKKiD,KALL,CAKW,SALX,EAKqBG,KALrB;AAMH;AAEJ,K,CAED;;;;+BACWG,S,EAAWC,G,EAAK;AACvB,UAAMC,CAAC,GAAGD,GAAG,CAACE,OAAd;AACA,UAAMC,CAAC,GAAGH,GAAG,CAACI,OAAJ,GAAcC,MAAM,CAACC,WAA/B;AACH;;;kCACa,CACV;AACH;;;wCAMmB;AAEhB,UAAI7D,KAAK,GAAG,IAAZ;;AACA,WAAKyB,QAAL,GAAgBqC,WAAW,CAAC,YAAW;AACnC,YAAG9D,KAAK,CAACwB,GAAN,KAAc,CAAjB,EAAoB;AAChBxB,UAAAA,KAAK,CAACwB,GAAN,GAAY,CAAC,CAAb;AACH,SAFD,MAEO;AACHxB,UAAAA,KAAK,CAACwB,GAAN,GAAY,CAAZ;AACH;;AACDxB,QAAAA,KAAK,CAAC+D,oBAAN,CAA2B,aAA3B,EAA0C/D,KAAK,CAACwB,GAAhD;AACH,OAP0B,EAOxB,GAPwB,CAA3B;;AAUA,UAAGxB,KAAK,CAAC2B,KAAN,CAAYqC,MAAZ,KAAuB,MAA1B,EAAiC;AAC7BhE,QAAAA,KAAK,CAACmB,eAAN,CAAsB;AAAE,kBAAQ,KAAKZ,KAAL,CAAWK,YAArB;AAAmC,yBAAe,CAAC,MAAD,EAAS,OAAT,CAAlD;AAAqE,wBAAc,QAAnF;AAA6F,kBAAO;AAApG,SAAtB;AACH;;AAEDZ,MAAAA,KAAK,CAAC0B,QAAN,CAAe;AAACb,QAAAA,UAAU,EAAC,KAAKN,KAAL,CAAWK;AAAvB,OAAf;AACH;;;8CAEyBqD,S,EAAW;AACjC,UAAGA,SAAS,CAACC,eAAb,EAA8B;AAC1B,aAAK9C,kBAAL,CAAwB6C,SAAS,CAACC,eAAlC;AACH,OAFD,MAEO;AACH,aAAK7C,WAAL;AACA,aAAKK,QAAL,CAAc;AAACX,UAAAA,WAAW,EAAC;AAAb,SAAd;AACH,OANgC,CAQjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACH;;;2CACsB;AACnBoD,MAAAA,aAAa,CAAC,KAAK1C,QAAN,CAAb;AACA,WAAKE,KAAL,CAAWyC,aAAX,IAA4B,KAAKzC,KAAL,CAAWyC,aAAX,EAA5B;AACH;;;6BAEQ;AAAA;;AACL,UAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CAAlB;AACA,aACI;AAAK,QAAA,KAAK,EAAElF,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAA6C,QAAA,KAAK,EAAE;AAACmF,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,MAAM,EAAC,CAAhB;AAAmBC,UAAAA,QAAQ,EAAC,UAA5B;AAAwCC,UAAAA,OAAO,EAAC;AAAhD,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,YAAX;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,IAAI,MAAtC;AAAuC,QAAA,OAAO,EAAE,KAAKpD,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,YAAX;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,IAAI,MAAtC;AAAuC,QAAA,OAAO,EAAE,KAAKL,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,YAAX;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,IAAI,MAAtC;AAAuC,QAAA,OAAO,EAAE,KAAKE,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,CADJ,EAaI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEmD,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,WAAtG;AAAkH,QAAA,QAAQ,EAAE,CAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAcI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEA,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,WAAtG;AAAkH,QAAA,QAAQ,EAAE,CAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEA,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,YAAtG;AAAmH,QAAA,QAAQ,EAAE,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEA,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,UAAtG;AAAiH,QAAA,QAAQ,EAAE,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEA,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,UAAtG;AAAiH,QAAA,QAAQ,EAAE,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAkBI,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAEA,SAAS,CAAC,CAAD,CAAxC;AAA6C,QAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAnE;AAAwE,QAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA3F;AAAgG,QAAA,KAAK,EAAC,YAAtG;AAAmH,QAAA,QAAQ,EAAE,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAoBI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA,YAAGjF,KAAH,QAAGA,KAAH;AAAA,YAAUC,MAAV,QAAUA,MAAV;AAAA,eACE,oBAAC,MAAD;AACI,UAAA,YAAY,EAAE;AACVM,YAAAA,IAAI,EAAE,CADI;AAEV6D,YAAAA,CAAC,EAAE,EAFO;AAGVE,YAAAA,CAAC,EAAE;AAHO,WADlB;AAMI,UAAA,KAAK,EAAE;AACH/D,YAAAA,IAAI,EAAEjB,MAAM,CAAC,MAAI,CAAC6B,KAAL,CAAWZ,IAAZ,EAAkB;AAAC+E,cAAAA,SAAS,EAAE,GAAZ;AAAiBC,cAAAA,OAAO,EAAE;AAA1B,aAAlB,CADT;AAEHnB,YAAAA,CAAC,EAAE9E,MAAM,CAAC,MAAI,CAAC6B,KAAL,CAAWb,MAAX,CAAkB,CAAlB,CAAD,EAAuB;AAACgF,cAAAA,SAAS,EAAE,GAAZ;AAAiBC,cAAAA,OAAO,EAAE;AAA1B,aAAvB,CAFN;AAGHjB,YAAAA,CAAC,EAAEhF,MAAM,CAAC,MAAI,CAAC6B,KAAL,CAAWb,MAAX,CAAkB,CAAlB,CAAD,EAAuB;AAACgF,cAAAA,SAAS,EAAE,GAAZ;AAAiBC,cAAAA,OAAO,EAAE;AAA1B,aAAvB;AAHN,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAYK;AAAA,cAAEhF,IAAF,SAAEA,IAAF;AAAA,cAAO6D,CAAP,SAAOA,CAAP;AAAA,cAASE,CAAT,SAASA,CAAT;AAAA,iBACG,oBAAC,aAAD;AACI,YAAA,gBAAgB,EAAE;AAAEkB,cAAAA,KAAK,EAAE;AAAT,aADtB;AAEI,YAAA,KAAK,EAAE,GAFX;AAGI,YAAA,MAAM,EAAE,GAHZ;AAII,YAAA,KAAK,EAAE;AACHxF,cAAAA,KAAK,EAAE,MADJ;AAEHC,cAAAA,MAAM,EAAE,MAFL;AAGHwF,cAAAA,eAAe,EAAC3F,MAAM,CAAC4F,aAAP,CAAqBC;AAHlC,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUI,oBAAC,aAAD;AAAe,YAAA,MAAM,EAAE,CAACvB,CAAD,EAAGE,CAAH,CAAvB;AAA8B,YAAA,IAAI,EAAE/D,IAApC;AAA0C,YAAA,cAAc,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AAAa,YAAA,SAAS,EAAC,gCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,UAACqF,WAAD,EAAcC,UAAd;AAAA,mBACGD,WAAW,CAACvC,GAAZ,CAAgB,UAACa,SAAD,EAAYX,CAAZ;AAAA,qBAAkBW,SAAS,CAACL,EAAV,KAAiB,KAAjB,IAC9B,oBAAC,SAAD;AACI,gBAAA,GAAG,EAAEN,CADT;AAEI,gBAAA,SAAS,EAAEW,SAFf;AAGI,gBAAA,UAAU,EAAE2B,UAHhB;AAII,4BAAU3B,SAAS,CAAC4B,UAAV,CAAqBC,IAJnC;AAKI,gBAAA,KAAK,EAAEjG,MAAM,CAACoE,SALlB;AAMI,gBAAA,WAAW,EAAE,MAAI,CAAChC,UANtB;AAOI,gBAAA,YAAY,EAAE,MAAI,CAACC,WAPvB;AAQI,gBAAA,OAAO,EAAE,MAAI,CAACrB,cARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,aAAhB,CADH;AAAA,WADL,CADJ,EAgBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEQ,MAAI,CAACK,KAAL,CAAWQ,WAAX,CAAuB0B,GAAvB,CAA2B,UAACT,IAAD,EAAOW,CAAP;AAAA,mBACvB,oBAAC,MAAD;AACI,cAAA,GAAG,EAAEA,CADT;AAEI,cAAA,MAAM,EAAEX,IAFZ,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKI;AACI;AACA,cAAA,EAAE,EAAE,CAFR;AAGI,cAAA,EAAE,EAAE,CAHR;AAII,cAAA,CAAC,EAAEjC,UAAU,CAAC,CAAD,CAJjB;AAKI,cAAA,OAAO,EAAE,CALb;AAMI,cAAA,IAAI,EAAEb,MAAM,CAACkG,MAAP,CAAcC,MAAd,CAAqBC,IAN/B;AAOI,cAAA,MAAM,EAAEpG,MAAM,CAACkG,MAAP,CAAcC,MAAd,CAAqBE,MAPjC;AAQI,cAAA,WAAW,EAAErG,MAAM,CAACkG,MAAP,CAAcC,MAAd,CAAqBG,WARtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADuB;AAAA,WAA3B,CAFR,CAhBJ,CAVJ,CADH;AAAA,SAZL,CADF;AAAA,OADN,CApBJ,CADJ;AA8FH;;;;EAhXiB3H,S;;AAoXtB,IAAM4H,eAAe,GAAG,SAAlBA,eAAkB,CAAClF,KAAD,EAAQmF,QAAR,EAAqB;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEpF,KAAK,CAACqF,iBAAN,CAAwBD,IAD3B;AAEH3B,IAAAA,MAAM,EAAEzD,KAAK,CAACsF,WAAN,CAAkBC,IAAlB,CAAuBC,OAF5B;AAGHC,IAAAA,SAAS,EAAEzF,KAAK,CAAC0F,WAAN,CAAkBvD;AAH1B,GAAP;AAKH,CAND;;AAOA,IAAMwD,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACnC,SAAO;AACHC,IAAAA,gBAAgB,EAAE,0BAACT,IAAD,EAAU;AAAEQ,MAAAA,QAAQ,CAACpH,OAAO,CAACsH,OAAR,CAAgBV,IAAhB,CAAD,CAAR;AAAiC,KAD5D;AAEHW,IAAAA,eAAe,EAAE,yBAACX,IAAD,EAAU;AAAEQ,MAAAA,QAAQ,CAACpH,OAAO,CAACwH,SAAR,CAAkBZ,IAAlB,CAAD,CAAR;AAAmC,KAF7D;AAGH9C,IAAAA,gBAAgB,EAAE,0BAAC8C,IAAD,EAAU;AAAEQ,MAAAA,QAAQ,CAACpH,OAAO,CAACyH,UAAR,CAAmBb,IAAnB,CAAD,CAAR;AAAoC,KAH/D;AAIH7D,IAAAA,qBAAqB,EAAE,+BAAC6D,IAAD,EAAU;AAAEQ,MAAAA,QAAQ,CAACpH,OAAO,CAAC0H,aAAR,CAAsBd,IAAtB,CAAD,CAAR;AAAsC;AAJtE,GAAP;AAMH,CAPD;;AASA,eAAe7G,OAAO,CAAC2G,eAAD,EAAkBS,gBAAlB,CAAP,CAA2CjG,OAA3C,CAAf","sourcesContent":["\nimport React, { Component } from \"react\"\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker, Annotations, Annotation\n} from \"react-simple-maps\"\nimport { Button, Icon } from 'semantic-ui-react';\nimport ContainerDimensions from 'react-container-dimensions'\n\nimport { Motion, spring } from \"react-motion\"\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\"\nimport request from \"axios\"\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\n\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\n\nimport * as aggregation from '../../../utils';\n\n//style\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css'\n\nconst wrapperStyles = {\n    width: \"100%\",\n    height:\"100%\",\n    minWidth: 500,\n    margin: \"0 auto\",\n    overflow:'hidden'\n}\nconst zoomControls = {center:[0, 0], zoom:1}\n//reference : /public/assets/data-maps/world-most-populous-cities.json\n\nconst cityScale = scaleLinear()\n    .domain([0,37843000])\n    .range([1,48])\nconst markerSize = [20, 24]\n\nlet _self = null;\nclass EditMap extends Component {\n    constructor() {\n        super()\n        _self = this;\n        this.state = {\n            center: zoomControls.center,\n            zoom: zoomControls.zoom,\n            cities:[],\n            countries:[],\n            citiesSecond:[],\n            detailMode:false,\n            selectedCity:'Barcelona',\n            oldCountry:'',\n            unselectCity:'',\n            clickCities:[]\n        }\n        this.handleZoomIn = this.handleZoomIn.bind(this)\n        this.handleZoomOut = this.handleZoomOut.bind(this)\n        this.handleCityClick = this.handleCityClick.bind(this)\n        this.handleCityLocation = this.handleCityLocation.bind(this)\n        //this.handleGotoAnalysis = this.handleGotoAnalysis.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.handleMove = this.handleMove.bind(this)\n        this.handleLeave = this.handleLeave.bind(this)\n        this.dir = 1;\n        this.interval = null;\n    }\n    handleZoomIn() {\n        this.setState({\n            zoom: this.state.zoom * 2\n        })\n        this.props.zoomIn(this.state.detailMode)\n    }\n    handleZoomOut() {\n        this.setState({\n            zoom: this.state.zoom / 2\n        })\n        this.props.zoomOut(this.state.detailMode)\n    }\n    handleReset() {\n        this.setState({\n            center: zoomControls.center,\n            zoom: zoomControls.zoom,\n            detailMode:false\n        })\n        this.props.handleChangeClickCity([]);\n        this.props.resetMap(false)\n    }\n\n\n    // 펼쳐진 지도( full screen map)\n    handleCityClick(city) {\n        this.setState({\n            zoom: 4,\n            center: city.coordinates,\n            detailMode:true\n        })\n        this.props.zoomIn(true)\n\n        if(d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n            d3.selectAll('.rsm-markers').selectAll(\".levelFive\")\n                .transition()\n                .ease(d3.easeBack)\n                .attr(\"r\", markerSize[0])\n        }\n        let clickMarker = [];\n        if(city) {\n            city.name.map((item, i) => {\n                clickMarker.push({ \"name\": item,    \"coordinates\": city.coordinates, \"population\": 17843000, \"cost\":1 })\n            })\n        }\n        this.setState({\n            clickCities:clickMarker\n        })\n        this.props.handleChangeClickCity(clickMarker);\n        this.props.handleChangeCity(city)\n    }\n\n    handleCityLocation(value) {\n        const city = {\n            coordinates: value\n        }\n        this.setState({\n            zoom: 3,\n            center: city.coordinates,\n            detailMode:true\n        })\n        this.props.zoomIn(true)\n\n        if(d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n            d3.selectAll('.rsm-markers').selectAll(\".levelFive\")\n                .transition()\n                .ease(d3.easeBack)\n                .attr(\"r\", markerSize[0])\n        }\n        let clickMarker = [city];\n\n        this.setState({\n            clickCities:clickMarker\n        })\n        //this.props.handleChangeClickCity(city);\n        this.props.handleChangeCity(city)\n    }\n\n\n    // map marker text click\n    handleAnnoteClick(city) {\n    }\n\n    // handleGotoAnalysis(country) {\n    //     if(this.props.parentProps) this.props.parentProps.gotoNext(country);\n    // }\n\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n    handleViewZone(country) {\n        //change the data of detail Info\n        _self.setState({selectedCity: country.name})\n        if(d3.selectAll('.detailMarker_'+_self.state.oldCountry)) {\n            d3.selectAll('.detailMarker_'+_self.state.oldCountry)\n                .transition()\n                .attr(\"r\", markerSize[0])\n                .style(\"opacity\",1)\n        }\n        _self.setState({oldCountry:country.name})\n\n        _self.props.handleChangeCity(country)\n    }\n\n\n \n\n    //마커의 깜박거림 크기\n    blinkAnimationMarker(id, dir) {\n        let radius = 0;\n        let alpha = 1;\n        let durate = 900;\n        if(dir === 1){\n            radius = 32;\n            alpha = 0;\n            durate = 900;\n        } else {\n            radius = 16;\n            alpha = 1;\n            durate = 300;\n        }\n        if(d3.selectAll('.'+id).selectAll(\".levelFive\")) {\n            d3.selectAll('.'+id).selectAll(\".levelFive\")\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", radius)\n                .style(\"opacity\",alpha)\n        }\n\n\n        if(d3.selectAll('.detailMarker_'+_self.state.selectedCity)) {\n            d3.selectAll('.detailMarker_'+_self.state.selectedCity)\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", (dir === 1)?markerSize[0]:markerSize[1])\n                .style(\"opacity\",alpha)\n        }\n\n    }\n\n    //tooltip\n    handleMove(geography, evt) {\n        const x = evt.clientX\n        const y = evt.clientY + window.pageYOffset\n    }\n    handleLeave() {\n        //this.props.dispatch(hide())\n    }\n\n    handleMapClick = (a,b,c,d) => {\n       \n    }\n\n    componentDidMount() {\n\n        let _self = this;\n        this.interval = setInterval(function() {\n            if(_self.dir === 1) {\n                _self.dir = -1\n            } else {\n                _self.dir = 1;\n            }\n            _self.blinkAnimationMarker('rsm-markers', _self.dir)\n        }, 900)\n\n\n        if(_self.props.tabIdx === 'pg=1'){\n            _self.handleCityClick({ \"name\": this.state.selectedCity, \"coordinates\": [2.1734, 41.3851], \"population\": 37843000, \"cost\":3 });\n        }\n\n        _self.setState({oldCountry:this.state.selectedCity})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.locationLongLat) {\n            this.handleCityLocation(nextProps.locationLongLat)\n        } else {\n            this.handleReset()\n            this.setState({clickCities:[]})\n        }\n        \n        // let data = nextProps.devData;\n        // function reduceUp(value) {\n        //     return Math.round(value)\n        // }\n        // const mapName = (item) => {\n        //     if (this.props.itemLabel == \"Cloudlets\") {\n        //         return item.CloudletName\n        //     } else if (this.props.itemLabel == \"App Instances\") {\n        //         return item.AppName\n        //     } else if (this.props.itemLabel == \"Cluster Instances\") {\n        //         return item.ClusterName\n        //     } else {\n        //         return\n        //     }\n        // }\n        // let locations = data.map((item) => (\n        //     {LAT:reduceUp(item.CloudletLocation.latitude), LON:reduceUp(item.CloudletLocation.longitude), cloudlet:mapName(item)}\n        // ))\n\n\n        // let locationData = [];\n\n        // let groupbyData = aggregation.groupByCompare(locations, ['LAT','LON']);\n\n        // const cloundletName = (key) => {\n        //     let nameArray = [];\n        //     groupbyData[key].map((item, i) => {\n        //         nameArray[i] = groupbyData[key][i]['cloudlet'];\n        //     })\n\n        //     return nameArray;\n        // }\n\n        // console.log('data locations -- ', Object.keys(groupbyData))\n        // Object.keys(groupbyData).map((key) => {\n        //     locationData.push({ \"name\": cloundletName(key),    \"coordinates\": [groupbyData[key][0]['LON'], groupbyData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyData[key].length })\n        // })\n        // //\n        // let cloudlet = data.map((item) => (\n        //     {LAT:item.CloudletLocation.latitude, LON:item.CloudletLocation.longitude, cloudlet:item.CloudletName}\n        // ))\n\n\n        // let cloudletData = [];\n\n        // let groupbyClData = aggregation.groupBy(cloudlet, 'cloudlet');\n\n        // console.log('data groupbyClData -- ', Object.keys(groupbyClData))\n        // Object.keys(groupbyClData).map((key) => {\n        //     cloudletData.push({ \"name\": key,    \"coordinates\": [groupbyClData[key][0]['LON'], groupbyClData[key][0]['LAT']], \"population\": 17843000, \"cost\":groupbyClData[key].length })\n        // })\n\n        // console.log('cloudletData  -- ', locationData)\n        // this.setState({\n        //     cities: locationData\n        // })\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval)\n        this.props.resetLocation && this.props.resetLocation();\n    }\n\n    render() {\n        const grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022', '#66CCFF', '#6c50ff']\n        return (\n            <div style={wrapperStyles}>\n                <div className=\"zoom-inout-reset-clusterMap\" style={{left:8, bottom:4, position:'absolute', display:'block'}}>\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleReset}>\n                        <Icon name=\"expand\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleZoomIn}>\n                        <Icon name=\"plus square outline\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleZoomOut}>\n                        <Icon name=\"minus square outline\" />\n                    </Button>\n                </div>\n\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[5]} endColor={grdColors[5]} idCSS=\"levelFive\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[4]} endColor={grdColors[4]} idCSS=\"levelFour\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[3]} endColor={grdColors[3]} idCSS=\"levelThree\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[2]} endColor={grdColors[2]} idCSS=\"levelTwo\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[6]} endColor={grdColors[6]} idCSS=\"levelOne\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[7]} endColor={grdColors[7]} idCSS=\"levelSeven\" rotation={0}/>\n\n                <ContainerDimensions>\n                    { ({ width, height }) =>\n                        <Motion\n                            defaultStyle={{\n                                zoom: 1,\n                                x: 30,\n                                y: 40,\n                            }}\n                            style={{\n                                zoom: spring(this.state.zoom, {stiffness: 210, damping: 30}),\n                                x: spring(this.state.center[0], {stiffness: 210, damping: 30}),\n                                y: spring(this.state.center[1], {stiffness: 210, damping: 30}),\n                            }}\n                        >\n                            {({zoom,x,y}) => (\n                                <ComposableMap\n                                    projectionConfig={{ scale: 205 }}\n                                    width={980}\n                                    height={551}\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        backgroundColor:styles.geoBackground.color\n                                    }}\n                                >\n                                    <ZoomableGroup center={[x,y]} zoom={zoom} disablePanning={false}>\n                                        <Geographies geography=\"/topojson-maps/world-110m.json\">\n                                            {(geographies, projection) =>\n                                                geographies.map((geography, i) => geography.id !== \"010\" && (\n                                                    <Geography\n                                                        key={i}\n                                                        geography={geography}\n                                                        projection={projection}\n                                                        data-tip={geography.properties.NAME}\n                                                        style={styles.geography}\n                                                        onMouseMove={this.handleMove}\n                                                        onMouseLeave={this.handleLeave}\n                                                        onClick={this.handleMapClick}\n                                                    />\n                                                ))}\n                                        </Geographies>\n                                        <Markers>\n                                            {\n                                                this.state.clickCities.map((city, i) => (\n                                                    <Marker\n                                                        key={i}\n                                                        marker={city}\n                                                        //onClick={this.handleViewZone}\n                                                    >\n                                                        <circle\n                                                            //class={\"detailMarker_\"+city.name}\n                                                            cx={0}\n                                                            cy={0}\n                                                            r={markerSize[0]}\n                                                            opacity={1}\n                                                            fill={styles.marker.second.fill}\n                                                            stroke={styles.marker.second.stroke}\n                                                            strokeWidth={styles.marker.second.strokeWidth}\n                                                        />\n                                                    </Marker>\n                                                ))\n                                            }\n                                        </Markers>\n                                    </ZoomableGroup>\n                                </ComposableMap>\n                            )}\n\n                        </Motion>\n                    }\n                </ContainerDimensions>\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        data: state.receiveDataReduce.data,\n        tabIdx: state.siteChanger.site.subPath,\n        itemLabel: state.computeItem.item\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleInjectData: (data) => { dispatch(actions.setUser(data)) },\n        handleChangeTab: (data) => { dispatch(actions.changeTab(data)) },\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) },\n        handleChangeClickCity: (data) => { dispatch(actions.clickCityList(data))}\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(EditMap);\n"]},"metadata":{},"sourceType":"module"}