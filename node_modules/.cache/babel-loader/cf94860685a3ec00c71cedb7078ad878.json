{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/popUserViewer.js\";\nimport React from 'react';\nimport { Button, Divider, Modal, Grid, Input, TextArea, Dropdown, Image } from \"semantic-ui-react\";\nimport * as moment from 'moment';\nvar _self = null;\n\nvar PopUserViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopUserViewer, _React$Component);\n\n  function PopUserViewer() {\n    var _this;\n\n    _classCallCheck(this, PopUserViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopUserViewer).call(this));\n\n    _this.setCloudletList = function (operNm) {\n      var cl = [];\n\n      _self.state.cloudletResult[operNm].map(function (oper, i) {\n        if (i === 0) _self.setState({\n          dropdownValueThree: oper.CloudletName\n        });\n        cl.push({\n          key: i,\n          value: oper.CloudletName,\n          text: oper.CloudletName\n        });\n      });\n\n      _self.setState({\n        devOptionsThree: cl\n      });\n    };\n\n    _this.makeUTC = function (time) {\n      return moment(time).utc().format(\"YYYY-MM-DD HH:mm:ss\") + ' UTC';\n    };\n\n    _this.state = {\n      open: false,\n      dimmer: '',\n      cloudletResult: null,\n      propsData: []\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(PopUserViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.open) {\n        this.setState({\n          open: nextProps.open,\n          dimmer: nextProps.dimmer,\n          propsData: nextProps.data\n        });\n      }\n    } // ))\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        open: false\n      });\n      this.props.close();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        size: 'tiny',\n        open: this.state.open,\n        dimmer: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"User\"), React.createElement(Modal.Content, {\n        image: true,\n        scrolling: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: \"/assets/matthew.png\",\n        size: \"small\",\n        centered: true,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: '28px',\n          borderBottom: '1px solid rgba(255,255,255,0.3)',\n          padding: '10px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.propsData.Username))), Object.keys(this.state.propsData).map(function (key, i) {\n        return key !== 'Edit' && key !== 'Username' ? React.createElement(Grid.Row, {\n          columns: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 5,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, key == 'EmailVerified' ? 'Email Verified' : key == 'FamilyName' ? 'Family Name' : key == 'Given Name' ? 'Given Name' : key == 'CreatedAt' ? 'Created At' : key == 'UpdatedAt' ? 'Updated At' : key)), React.createElement(Grid.Column, {\n          width: 11,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            wordWrap: 'break-word'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, typeof _this2.state.propsData[key] === 'object' ? JSON.stringify(_this2.state.propsData[key]) : key === 'EmailVerified' && JSON.stringify(_this2.state.propsData[key]) === 'true' ? 'Yes' : key === 'Locked' && JSON.stringify(_this2.state.propsData[key]) === 'true' ? 'Yes' : key === 'CreatedAt' ? String(_this2.makeUTC(_this2.state.propsData[key])) : key === 'UpdatedAt' ? String(_this2.makeUTC(_this2.state.propsData[key])) : String(_this2.state.propsData[key]))), React.createElement(Divider, {\n          vertical: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })) : null;\n      }))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.close();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return PopUserViewer;\n}(React.Component);\n/*\nfunction example(…) {\n    return condition1 ? value1\n         : condition2 ? value2\n         : condition3 ? value3\n         : value4;\n}\n\n// Equivalent to:\n\nfunction example(…) {\n    if (condition1) { return value1; }\n    else if (condition2) { return value2; }\n    else if (condition3) { return value3; }\n    else { return value4; }\n}\n */\n\n\nexport { PopUserViewer as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/popUserViewer.js"],"names":["React","Button","Divider","Modal","Grid","Input","TextArea","Dropdown","Image","moment","_self","PopUserViewer","setCloudletList","operNm","cl","state","cloudletResult","map","oper","i","setState","dropdownValueThree","CloudletName","push","key","value","text","devOptionsThree","makeUTC","time","utc","format","open","dimmer","propsData","nextProps","nextContext","data","props","close","fontSize","borderBottom","padding","Username","Object","keys","wordWrap","JSON","stringify","String","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,QAA7C,EAAuDC,QAAvD,EAAiEC,KAAjE,QAA6E,mBAA7E;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;IACqBC,a;;;;;AACjB,2BAAc;AAAA;;AAAA;;AACV;;AADU,UAuBdC,eAvBc,GAuBI,UAACC,MAAD,EAAY;AAC1B,UAAIC,EAAE,GAAG,EAAT;;AACAJ,MAAAA,KAAK,CAACK,KAAN,CAAYC,cAAZ,CAA2BH,MAA3B,EAAmCI,GAAnC,CAAuC,UAACC,IAAD,EAAOC,CAAP,EAAa;AAChD,YAAGA,CAAC,KAAK,CAAT,EAAYT,KAAK,CAACU,QAAN,CAAe;AAACC,UAAAA,kBAAkB,EAAEH,IAAI,CAACI;AAA1B,SAAf;AACZR,QAAAA,EAAE,CAACS,IAAH,CAAQ;AAAEC,UAAAA,GAAG,EAAEL,CAAP;AAAUM,UAAAA,KAAK,EAAEP,IAAI,CAACI,YAAtB;AAAoCI,UAAAA,IAAI,EAAER,IAAI,CAACI;AAA/C,SAAR;AACH,OAHD;;AAKAZ,MAAAA,KAAK,CAACU,QAAN,CAAe;AAACO,QAAAA,eAAe,EAAEb;AAAlB,OAAf;AACH,KA/Ba;;AAAA,UAuCdc,OAvCc,GAuCJ,UAACC,IAAD,EAAU;AAChB,aAAOpB,MAAM,CAACoB,IAAD,CAAN,CAAaC,GAAb,GAAmBC,MAAnB,CAA0B,qBAA1B,IAAmD,MAA1D;AACH,KAzCa;;AAEV,UAAKhB,KAAL,GAAa;AACTiB,MAAAA,IAAI,EAAC,KADI;AAETC,MAAAA,MAAM,EAAC,EAFE;AAGTjB,MAAAA,cAAc,EAAC,IAHN;AAITkB,MAAAA,SAAS,EAAC;AAJD,KAAb;AAMAxB,IAAAA,KAAK,gCAAL;AARU;AASb;;;;wCAEmB,CAEnB;;;8CACyByB,S,EAAWC,W,EAAa;AAC9C,UAAGD,SAAS,CAACH,IAAb,EAAmB;AACf,aAAKZ,QAAL,CAAc;AAACY,UAAAA,IAAI,EAACG,SAAS,CAACH,IAAhB;AAAsBC,UAAAA,MAAM,EAACE,SAAS,CAACF,MAAvC;AAA+CC,UAAAA,SAAS,EAACC,SAAS,CAACE;AAAnE,SAAd;AACH;AAEJ,K,CAED;;;;4BAcQ;AACJ,WAAKjB,QAAL,CAAc;AAAEY,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKM,KAAL,CAAWC,KAAX;AACH;;;6BAKQ;AAAA;;AAEL,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,MAAb;AAAqB,QAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWiB,IAAtC;AAA4C,QAAA,MAAM,EAAE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,OAAP;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,qBAAX;AAAiC,QAAA,IAAI,EAAC,OAAtC;AAA8C,QAAA,QAAQ,MAAtD;AAAuD,QAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAMI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACQ,UAAAA,QAAQ,EAAC,MAAV;AAAiBC,UAAAA,YAAY,EAAC,iCAA9B;AAAiEC,UAAAA,OAAO,EAAC;AAAzE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiG,KAAK3B,KAAL,CAAWmB,SAAX,CAAqBS,QAAtH,CADJ,CADJ,CANJ,EAYQC,MAAM,CAACC,IAAP,CAAY,KAAK9B,KAAL,CAAWmB,SAAvB,EAAkCjB,GAAlC,CAAsC,UAACO,GAAD,EAAML,CAAN;AAAA,eACjCK,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,UAA3B,GACI,oBAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE,CAApB;AAAuB,UAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMA,GAAG,IAAI,eAAR,GAAyB,gBAAzB,GACCA,GAAG,IAAI,YAAR,GAAsB,aAAtB,GACCA,GAAG,IAAI,YAAR,GAAsB,YAAtB,GACCA,GAAG,IAAI,WAAR,GAAqB,YAArB,GACCA,GAAG,IAAI,WAAR,GAAqB,YAArB,GACAA,GANL,CADJ,CADJ,EAWI,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,KAAK,EAAE;AAACsB,YAAAA,QAAQ,EAAE;AAAX,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAES,OAAO,MAAI,CAAC/B,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAP,KAAqC,QAAtC,GAAiDuB,IAAI,CAACC,SAAL,CAAe,MAAI,CAACjC,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAf,CAAjD,GACGA,GAAG,KAAK,eAAR,IAA2BuB,IAAI,CAACC,SAAL,CAAe,MAAI,CAACjC,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAf,MAA8C,MAA1E,GAAmF,KAAnF,GACCA,GAAG,KAAK,QAAR,IAAoBuB,IAAI,CAACC,SAAL,CAAe,MAAI,CAACjC,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAf,MAA8C,MAAnE,GAA4E,KAA5E,GACCA,GAAG,KAAK,WAAT,GAAwByB,MAAM,CAAC,MAAI,CAACrB,OAAL,CAAa,MAAI,CAACb,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAb,CAAD,CAA9B,GACCA,GAAG,KAAK,WAAT,GAAwByB,MAAM,CAAC,MAAI,CAACrB,OAAL,CAAa,MAAI,CAACb,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAb,CAAD,CAA9B,GACAyB,MAAM,CAAC,MAAI,CAAClC,KAAL,CAAWmB,SAAX,CAAqBV,GAArB,CAAD,CAPhB,CADJ,CAXJ,EA2BI,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA3BJ,CADJ,GA8BC,IA/BiC;AAAA,OAAtC,CAZR,CADJ,CAFJ,EAmDI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACe,KAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAnDJ,CADJ;AA2DH;;;;EAzGsCvC,KAAK,CAACkD,S;AA6GjD;;;;;;;;;;;;;;;;;;;SA7GqBvC,a","sourcesContent":["import React from 'react';\nimport {Button, Divider, Modal, Grid, Input, TextArea, Dropdown, Image} from \"semantic-ui-react\";\nimport * as moment from 'moment';\n\nlet _self = null;\nexport default class PopUserViewer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            open:false,\n            dimmer:'',\n            cloudletResult:null,\n            propsData:[]\n        }\n        _self = this;\n    }\n\n    componentDidMount() {\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.open) {\n            this.setState({open:nextProps.open, dimmer:nextProps.dimmer, propsData:nextProps.data});   \n        }\n\n    }\n\n    // ))\n\n    setCloudletList = (operNm) => {\n        let cl = [];\n        _self.state.cloudletResult[operNm].map((oper, i) => {\n            if(i === 0) _self.setState({dropdownValueThree: oper.CloudletName})\n            cl.push({ key: i, value: oper.CloudletName, text: oper.CloudletName })\n        })\n\n        _self.setState({devOptionsThree: cl})\n    }\n\n\n\n    close() {\n        this.setState({ open: false })\n        this.props.close()\n    }\n    makeUTC = (time) => {\n        return moment(time).utc().format(\"YYYY-MM-DD HH:mm:ss\") + ' UTC'\n    }\n\n    render() {\n\n        return (\n            <Modal size={'tiny'} open={this.state.open} dimmer={false}>\n                <Modal.Header>User</Modal.Header>\n                <Modal.Content  image scrolling>\n                    <Grid>\n                        <Grid.Row >\n                            <Grid.Column>\n                                <Image src='/assets/matthew.png' size=\"small\" centered bordered/>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row >\n                            <Grid.Column>\n                                <div style={{fontSize:'28px',borderBottom:'1px solid rgba(255,255,255,0.3)', padding:'10px 0'}}>{this.state.propsData.Username}</div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        {\n                            Object.keys(this.state.propsData).map((key, i)=> (\n                                (key !== 'Edit' && key !== 'Username')?\n                                    <Grid.Row columns={2}>\n                                        <Grid.Column width={5} className='detail_item'>\n                                            <div>\n                                                {(key == 'EmailVerified')?'Email Verified'\n                                                :(key == 'FamilyName')?'Family Name'\n                                                :(key == 'Given Name')?'Given Name'\n                                                :(key == 'CreatedAt')?'Created At'\n                                                :(key == 'UpdatedAt')?'Updated At'\n                                                :key}\n                                            </div>\n                                        </Grid.Column>\n                                        <Grid.Column width={11}>\n                                            <div style={{wordWrap: 'break-word'}}>\n                                                {\n                                                    (typeof this.state.propsData[key] === 'object')? JSON.stringify(this.state.propsData[key])\n                                                    : (key === 'EmailVerified' && JSON.stringify(this.state.propsData[key]) === 'true')? 'Yes'\n                                                    : (key === 'Locked' && JSON.stringify(this.state.propsData[key]) === 'true')? 'Yes'\n                                                    : (key === 'CreatedAt') ? String(this.makeUTC(this.state.propsData[key]))\n                                                    : (key === 'UpdatedAt') ? String(this.makeUTC(this.state.propsData[key]))\n                                                    : String(this.state.propsData[key])\n\n\n\n                                                }\n                                            </div>\n\n                                        </Grid.Column>\n                                        <Divider vertical></Divider>\n                                    </Grid.Row>\n                                :null\n                            ))\n                        }\n                    </Grid>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.close()}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\n\n/*\nfunction example(…) {\n    return condition1 ? value1\n         : condition2 ? value2\n         : condition3 ? value3\n         : value4;\n}\n\n// Equivalent to:\n\nfunction example(…) {\n    if (condition1) { return value1; }\n    else if (condition2) { return value2; }\n    else if (condition3) { return value3; }\n    else { return value4; }\n}\n */\n"]},"metadata":{},"sourceType":"module"}