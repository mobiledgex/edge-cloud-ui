{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/icon/clusterIcon.js\";\nimport React from 'react';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\nvar cnt = 0;\nvar oldids = [];\n\nvar ClusterIcon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClusterIcon, _React$Component);\n\n  function ClusterIcon() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClusterIcon);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClusterIcon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getLevel = function (value) {\n      var level = 1;\n\n      if (value < 2) {\n        level = 1;\n      } else if (value >= 2 && value < 4) {\n        level = 2;\n      } else if (value >= 4 && value < 6) {\n        level = 3;\n      } else if (value >= 6 && value < 8) {\n        level = 4;\n      } else if (value >= 8) {\n        level = 5;\n      }\n\n      return level;\n    };\n\n    return _this;\n  }\n\n  _createClass(ClusterIcon, [{\n    key: \"getIcon\",\n    value: function getIcon(domId, level) {\n      var src;\n\n      switch (level) {\n        case 1:\n          src = '/assets/cluster/cluster_level1.svg';\n          break;\n\n        case 2:\n          src = '/assets/cluster/cluster_level2.svg';\n          break;\n\n        case 3:\n          src = '/assets/cluster/cluster_level3.svg';\n          break;\n\n        case 4:\n          src = '/assets/cluster/cluster_level4.svg';\n          break;\n\n        case 5:\n          src = '/assets/cluster/cluster_level5.svg';\n          break;\n\n        default:\n          src = '/assets/cluster/cluster_level1.svg';\n          break;\n      }\n\n      var rndid = 'iconCl_' + Math.round(Math.random() * 1000);\n      d3.select(domId).select('svg').remove();\n      setTimeout(function () {\n        d3.svg(src).then(function (svg) {\n          var gElement = d3.select(svg).select('svg');\n          gElement.attr('id', rndid);\n          if (d3.select(domId).node()) d3.select(domId).node().append(gElement.node());\n        });\n      }, 500);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {//console.log('this.props.uValues is refresh ==== ', nextProps.idx, ';   '+nextProps.uValues)\n      //this.getIcon('#icon_'+nextProps.idx, this.getLevel(parseInt(nextProps.uValues)))\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getIcon('#icon_' + this.props.idx, this.getLevel(parseInt(this.props.uValues)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var idx = this.props.idx;\n      return React.createElement(\"div\", {\n        id: \"icon_\" + idx,\n        className: \"cluster_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ClusterIcon;\n}(React.Component);\n\nexport { ClusterIcon as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/icon/clusterIcon.js"],"names":["React","d3","moment","cnt","oldids","ClusterIcon","getLevel","value","level","domId","src","rndid","Math","round","random","select","remove","setTimeout","svg","then","gElement","attr","node","append","nextProps","nextContext","getIcon","props","idx","parseInt","uValues","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAIC,MAAM,GAAG,EAAb;;IACqBC,W;;;;;;;;;;;;;;;;;;UAEjBC,Q,GAAW,UAACC,KAAD,EAAW;AAClB,UAAIC,KAAK,GAAG,CAAZ;;AACA,UAAID,KAAK,GAAG,CAAZ,EAAe;AACXC,QAAAA,KAAK,GAAG,CAAR;AACH,OAFD,MAEO,IAAGD,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,CAAzB,EAA6B;AAChCC,QAAAA,KAAK,GAAG,CAAR;AACH,OAFM,MAEA,IAAGD,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,CAAzB,EAA4B;AAC/BC,QAAAA,KAAK,GAAG,CAAR;AACH,OAFM,MAEA,IAAGD,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,CAAzB,EAA4B;AAC/BC,QAAAA,KAAK,GAAG,CAAR;AACH,OAFM,MAEA,IAAGD,KAAK,IAAI,CAAZ,EAAc;AACjBC,QAAAA,KAAK,GAAG,CAAR;AACH;;AAED,aAAOA,KAAP;AACH,K;;;;;;;4BACQC,K,EAAOD,K,EAAO;AAEnB,UAAIE,GAAJ;;AACA,cAAOF,KAAP;AACI,aAAK,CAAL;AAAQE,UAAAA,GAAG,GAAG,oCAAN;AAA4C;;AACpD,aAAK,CAAL;AAAQA,UAAAA,GAAG,GAAG,oCAAN;AAA4C;;AACpD,aAAK,CAAL;AAAQA,UAAAA,GAAG,GAAG,oCAAN;AAA4C;;AACpD,aAAK,CAAL;AAAQA,UAAAA,GAAG,GAAG,oCAAN;AAA4C;;AACpD,aAAK,CAAL;AAAQA,UAAAA,GAAG,GAAG,oCAAN;AAA4C;;AACpD;AAASA,UAAAA,GAAG,GAAG,oCAAN;AAA4C;AANzD;;AASA,UAAIC,KAAK,GAAG,YAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAtB;AAGAb,MAAAA,EAAE,CAACc,MAAH,CAAUN,KAAV,EAAiBM,MAAjB,CAAwB,KAAxB,EAA+BC,MAA/B;AAEAC,MAAAA,UAAU,CAAC,YAAM;AACbhB,QAAAA,EAAE,CAACiB,GAAH,CAAOR,GAAP,EAAYS,IAAZ,CAAiB,UAACD,GAAD,EAAS;AACtB,cAAME,QAAQ,GAAGnB,EAAE,CAACc,MAAH,CAAUG,GAAV,EAAeH,MAAf,CAAsB,KAAtB,CAAjB;AACAK,UAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoBV,KAApB;AACA,cAAGV,EAAE,CAACc,MAAH,CAAUN,KAAV,EAAiBa,IAAjB,EAAH,EAA4BrB,EAAE,CAACc,MAAH,CAAUN,KAAV,EAAiBa,IAAjB,GAAwBC,MAAxB,CAA+BH,QAAQ,CAACE,IAAT,EAA/B;AAC/B,SAJD;AAKH,OANS,EAMP,GANO,CAAV;AAUH;;;8CACyBE,S,EAAWC,W,EAAa,CAC9C;AACA;AAEH;;;wCAEmB;AAEhB,WAAKC,OAAL,CAAa,WAAS,KAAKC,KAAL,CAAWC,GAAjC,EAAsC,KAAKtB,QAAL,CAAcuB,QAAQ,CAAC,KAAKF,KAAL,CAAWG,OAAZ,CAAtB,CAAtC;AACH;;;6BACQ;AAAA,UACAF,GADA,GACO,KAAKD,KADZ,CACAC,GADA;AAEL,aACI;AAAK,QAAA,EAAE,EAAE,UAAQA,GAAjB;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA7DoC5B,KAAK,CAAC+B,S;;SAA1B1B,W","sourcesContent":["import React from 'react';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nlet cnt = 0;\nlet oldids = [];\nexport default class ClusterIcon extends React.Component {\n\n    getLevel = (value) => {\n        let level = 1;\n        if (value < 2) {\n            level = 1;\n        } else if(value >= 2 && value < 4 ) {\n            level = 2;\n        } else if(value >= 4 && value < 6) {\n            level = 3;\n        } else if(value >= 6 && value < 8) {\n            level = 4;\n        } else if(value >= 8){\n            level = 5;\n        }\n\n        return level;\n    }\n    getIcon (domId, level) {\n\n        let src;\n        switch(level) {\n            case 1: src = '/assets/cluster/cluster_level1.svg'; break;\n            case 2: src = '/assets/cluster/cluster_level2.svg'; break;\n            case 3: src = '/assets/cluster/cluster_level3.svg'; break;\n            case 4: src = '/assets/cluster/cluster_level4.svg'; break;\n            case 5: src = '/assets/cluster/cluster_level5.svg'; break;\n            default: src = '/assets/cluster/cluster_level1.svg'; break;\n        }\n\n        let rndid = 'iconCl_'+Math.round(Math.random()*1000);\n\n\n        d3.select(domId).select('svg').remove();\n\n        setTimeout(() => {\n            d3.svg(src).then((svg) => {\n                const gElement = d3.select(svg).select('svg');\n                gElement.attr('id', rndid)\n                if(d3.select(domId).node()) d3.select(domId).node().append(gElement.node());\n            })\n        }, 500)\n\n\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log('this.props.uValues is refresh ==== ', nextProps.idx, ';   '+nextProps.uValues)\n        //this.getIcon('#icon_'+nextProps.idx, this.getLevel(parseInt(nextProps.uValues)))\n\n    }\n\n    componentDidMount() {\n\n        this.getIcon('#icon_'+this.props.idx, this.getLevel(parseInt(this.props.uValues)))\n    }\n    render() {\n        let {idx} = this.props;\n        return (\n            <div id={\"icon_\"+idx} className='cluster_icon' />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}