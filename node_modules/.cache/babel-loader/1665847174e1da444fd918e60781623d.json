{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar transformData = require('./transformData');\n\nvar isCancel = require('../cancel/isCancel');\n\nvar defaults = require('../defaults');\n\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\n\nvar combineURLs = require('./../helpers/combineURLs');\n\nvar jsonp = require('./jsonp');\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\n\n\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config); // Support baseURL config\n\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  } // Ensure headers exist\n\n\n  config.headers = config.headers || {}; // Transform request data\n\n  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n  var adapter = config.adapter || defaults.adapter;\n\n  if (config.method === 'jsonp') {\n    return jsonp(config);\n  }\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config); // Transform response data\n\n    response.data = transformData(response.data, response.headers, config.transformResponse);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config); // Transform response data\n\n      if (reason && reason.response) {\n        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/axios-jsonp-pro/lib/core/dispatchRequest.js"],"names":["utils","require","transformData","isCancel","defaults","isAbsoluteURL","combineURLs","jsonp","throwIfCancellationRequested","config","cancelToken","throwIfRequested","module","exports","dispatchRequest","baseURL","url","headers","data","transformRequest","merge","common","method","forEach","cleanHeaderConfig","adapter","then","onAdapterResolution","response","transformResponse","onAdapterRejection","reason","Promise","reject"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\nvar jsonp = require('./jsonp');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n\tif (config.cancelToken) {\n\t\tconfig.cancelToken.throwIfRequested();\n\t}\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n\tthrowIfCancellationRequested(config);\n\n\t// Support baseURL config\n\tif (config.baseURL && !isAbsoluteURL(config.url)) {\n\t\tconfig.url = combineURLs(config.baseURL, config.url);\n\t}\n\n\t// Ensure headers exist\n\tconfig.headers = config.headers || {};\n\n\t// Transform request data\n\tconfig.data = transformData(\n\t\tconfig.data,\n\t\tconfig.headers,\n\t\tconfig.transformRequest\n\t);\n\n\t// Flatten headers\n\tconfig.headers = utils.merge(\n\t\tconfig.headers.common || {},\n\t\tconfig.headers[config.method] || {},\n\t\tconfig.headers || {}\n\t);\n\n\tutils.forEach(\n\t\t['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n\t\tfunction cleanHeaderConfig(method) {\n\t\t\tdelete config.headers[method];\n\t\t}\n\t);\n\n\tvar adapter = config.adapter || defaults.adapter;\n\n\tif (config.method === 'jsonp') {\n\t\treturn jsonp(config);\n\t}\n\n\treturn adapter(config).then(function onAdapterResolution(response) {\n\t\tthrowIfCancellationRequested(config);\n\n\t\t// Transform response data\n\t\tresponse.data = transformData(\n\t\t\tresponse.data,\n\t\t\tresponse.headers,\n\t\t\tconfig.transformResponse\n\t\t);\n\n\t\treturn response;\n\t}, function onAdapterRejection(reason) {\n\t\tif (!isCancel(reason)) {\n\t\t\tthrowIfCancellationRequested(config);\n\n\t\t\t// Transform response data\n\t\t\tif (reason && reason.response) {\n\t\t\t\treason.response.data = transformData(\n\t\t\t\t\treason.response.data,\n\t\t\t\t\treason.response.headers,\n\t\t\t\t\tconfig.transformResponse\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.reject(reason);\n\t});\n};"]},"metadata":{},"sourceType":"script"}