{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.topojson = global.topojson || {});\n})(this, function (exports) {\n  'use strict';\n\n  function noop() {}\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function (point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function (point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = Math.round((point[0] - dx) / kx),\n          y1 = Math.round((point[1] - dy) / ky);\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function reverse(array, n) {\n    var t,\n        j = array.length,\n        i = j - n;\n\n    while (i < --j) {\n      t = array[i], array[i++] = array[j], array[j] = t;\n    }\n  }\n\n  function bisect(a, x) {\n    var lo = 0,\n        hi = a.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;else hi = mid;\n    }\n\n    return lo;\n  }\n\n  function feature(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function (o) {\n        return feature$1(topology, o);\n      })\n    } : feature$1(topology, o);\n  }\n\n  function feature$1(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n\n      for (var i = 0, n = arcs.length; i < n; ++i) {\n        arc(arcs[i], points);\n      }\n\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n\n      while (points.length < 4) {\n        points.push(points[0].slice());\n      }\n\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {\n        type: t,\n        geometries: o.geometries.map(geometry)\n      } : t in geometryType ? {\n        type: t,\n        coordinates: geometryType[t](o)\n      } : null;\n    }\n\n    var geometryType = {\n      Point: function Point(o) {\n        return point(o.coordinates);\n      },\n      MultiPoint: function MultiPoint(o) {\n        return o.coordinates.map(point);\n      },\n      LineString: function LineString(o) {\n        return line(o.arcs);\n      },\n      MultiLineString: function MultiLineString(o) {\n        return o.arcs.map(line);\n      },\n      Polygon: function Polygon(o) {\n        return polygon(o.arcs);\n      },\n      MultiPolygon: function MultiPolygon(o) {\n        return o.arcs.map(polygon);\n      }\n    };\n    return geometry(o);\n  }\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n    arcs.forEach(function (i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i],\n          t;\n\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n    arcs.forEach(function (i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f,\n          g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i],\n          p0 = arc[0],\n          p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n        p1[0] += dp[0], p1[1] += dp[1];\n      });else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function (i) {\n          stitchedArcs[i < 0 ? ~i : i] = 1;\n        });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function (i) {\n      if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n    });\n    return fragments;\n  }\n\n  function mesh(topology) {\n    return object(topology, meshArcs.apply(this, arguments));\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    function arc(i) {\n      var j = i < 0 ? ~i : i;\n      (geomsByArc[j] || (geomsByArc[j] = [])).push({\n        i: i,\n        g: geom\n      });\n    }\n\n    function line(arcs) {\n      arcs.forEach(arc);\n    }\n\n    function polygon(arcs) {\n      arcs.forEach(line);\n    }\n\n    function geometry(o) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n    }\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function MultiPolygon(arcs) {\n          arcs.forEach(polygon);\n        }\n      };\n      geometry(o);\n      geomsByArc.forEach(arguments.length < 3 ? function (geoms) {\n        arcs.push(geoms[0].i);\n      } : function (geoms) {\n        if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n      });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) {\n        arcs.push(i);\n      }\n    }\n\n    return {\n      type: \"MultiLineString\",\n      arcs: stitchArcs(topology, arcs)\n    };\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0],\n        b = triangle[1],\n        c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function ring(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area / 2;\n  }\n\n  function merge(topology) {\n    return object(topology, mergeArcs.apply(this, arguments));\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n    objects.forEach(function (o) {\n      if (o.type === \"Polygon\") register(o.arcs);else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function (ring$$) {\n        ring$$.forEach(function (arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function area(ring$$) {\n      return Math.abs(ring(object(topology, {\n        type: \"Polygon\",\n        arcs: [ring$$]\n      }).coordinates[0]));\n    }\n\n    polygons.forEach(function (polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function (ring$$) {\n            ring$$.forEach(function (arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n    polygons.forEach(function (polygon) {\n      delete polygon._;\n    });\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function (polygons) {\n        var arcs = [],\n            n; // Extract the exterior (unique) arcs.\n\n        polygons.forEach(function (polygon) {\n          polygon.forEach(function (ring$$) {\n            ring$$.forEach(function (arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        }); // Stitch the arcs into one or more rings.\n\n        arcs = stitchArcs(topology, arcs); // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // choose the one with the greatest absolute area.\n\n        if ((n = arcs.length) > 1) {\n          for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n            if ((ki = area(arcs[i])) > k) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {},\n        // arc index -> array of object indexes\n    neighbors = objects.map(function () {\n      return [];\n    });\n\n    function line(arcs, i) {\n      arcs.forEach(function (a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        line(arc, i);\n      });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n        geometry(o, i);\n      });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function MultiPolygon(arcs, i) {\n        arcs.forEach(function (arc) {\n          polygon(arc, i);\n        });\n      }\n    };\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j],\n              ik = indexes[k],\n              n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function (object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function () {\n      if (size <= 0) return;\n      var removed = array[0],\n          object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function (removed) {\n      var i = removed._,\n          object;\n      if (array[i] !== removed) return; // invalid request\n\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = (i + 1 >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = i + 1 << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap();\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n    topology.arcs.forEach(function (arc) {\n      var triangles = [],\n          maxArea = 0,\n          triangle,\n          i,\n          n,\n          p; // To store each point’s effective area, we create a new array rather than\n      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n      // stuck in smi mode). For midpoints, the initial effective area of\n      // Infinity will be computed in the next step.\n\n      for (i = 0, n = arc.length; i < n; ++i) {\n        p = arc[i];\n        absolute(arc[i] = [p[0], p[1], Infinity], i);\n      }\n\n      for (i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      for (i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n\n      while (triangle = heap.pop()) {\n        var previous = triangle.previous,\n            next = triangle.next; // If the area of the current point is less than that of the previous point\n        // to be eliminated, use the latter's area instead. This ensures that the\n        // current point cannot be eliminated without eliminating previously-\n        // eliminated points.\n\n        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;else maxArea = triangle[1][2];\n\n        if (previous) {\n          previous.next = next;\n          previous[2] = triangle[2];\n          update(previous);\n        }\n\n        if (next) {\n          next.previous = previous;\n          next[0] = triangle[0];\n          update(next);\n        }\n      }\n\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  }\n\n  var version = \"1.6.27\";\n  exports.version = version;\n  exports.mesh = mesh;\n  exports.meshArcs = meshArcs;\n  exports.merge = merge;\n  exports.mergeArcs = mergeArcs;\n  exports.feature = feature;\n  exports.neighbors = neighbors;\n  exports.presimplify = presimplify;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/datamaps/node_modules/topojson/build/topojson.js"],"names":["global","factory","exports","module","define","amd","topojson","noop","transformAbsolute","transform","x0","y0","kx","scale","ky","dx","translate","dy","point","i","transformRelative","x1","Math","round","y1","reverse","array","n","t","j","length","bisect","a","x","lo","hi","mid","feature","topology","o","type","features","geometries","map","feature$1","f","id","properties","geometry","object","absolute","arcs","arc","points","pop","k","p","push","slice","line","ring","polygon","geometryType","coordinates","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","forEach","e","ends","start","end","g","fg","concat","unshift","gf","p0","p1","dp","flush","mesh","meshArcs","apply","arguments","filter","geomsByArc","geom","geoms","cartesianTriangleArea","triangle","b","c","abs","area","merge","mergeArcs","objects","polygonsByArc","polygons","components","register","ring$$","_","component","neighbors","ki","indexesByArc","indexes","m","ij","ik","splice","compareArea","minAreaHeap","heap","size","up","removed","down","remove","parent","r","l","child","presimplify","triangleArea","relative","triangles","maxArea","Infinity","previous","next","update","version","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));"]},"metadata":{},"sourceType":"script"}