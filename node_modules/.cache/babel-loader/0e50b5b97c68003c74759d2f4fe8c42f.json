{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/popVerify.js\";\nimport React from 'react';\nimport { Button, Divider, Modal, Grid, Input, TextArea, Dropdown } from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { withRouter } from 'react-router-dom';\nimport * as serviceLogin from '../services/service_login_api';\nvar host = window.location.host;\nvar _self = null;\n\nvar PopVerify =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopVerify, _React$Component);\n\n  function PopVerify() {\n    var _this;\n\n    _classCallCheck(this, PopVerify);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopVerify).call(this));\n    _this.state = {\n      dummyData: [],\n      selected: {},\n      open: false,\n      dimmer: '',\n      devOptionsOne: [],\n      devOptionsTwo: [],\n      dropdownValueOne: '',\n      dropdownValueTwo: '',\n      showWarning: false,\n      closeOnEscape: true,\n      closeOnDimmerClick: true,\n      deleteName: ''\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(PopVerify, [{\n    key: \"closeVerifyModal\",\n    value: function closeVerifyModal(confirm) {\n      _self.setState({\n        showWarning: false\n      });\n\n      _self.props.close();\n\n      if (confirm === 'yes') {\n        _self.onSendEmail();\n      }\n    }\n  }, {\n    key: \"onSendEmail\",\n    value: function onSendEmail() {\n      _self.props.handleLoadingSpinner(true);\n\n      serviceLogin.resendVerify('resendverify', {\n        username: _self.props.userName,\n        email: _self.props.email,\n        callbackurl: 'https://' + host + '/verify'\n      }, _self.props.receiveResendVerify);\n    }\n    /** ************************ **/\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.open) {\n        var name = '';\n        this.setState({\n          showWarning: nextProps.open\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          showWarning = _this$state.showWarning,\n          closeOnEscape = _this$state.closeOnEscape,\n          closeOnDimmerClick = _this$state.closeOnDimmerClick;\n      return React.createElement(Modal, {\n        open: showWarning,\n        closeOnEscape: closeOnEscape,\n        closeOnDimmerClick: closeOnDimmerClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Verify Email \".concat(this.props.email)), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Are you sure you want to send a verification email to \".concat(this.props.email, \"?\"))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.closeVerifyModal('no');\n        },\n        negative: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.closeVerifyModal('yes');\n        },\n        positive: true,\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        content: \"Yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PopVerify;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectOrg: state.selectOrg.org ? state.selectOrg.org : null\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    handleSelectOrg: function handleSelectOrg(data) {\n      dispatch(actions.selectOrganiz(data));\n    },\n    handleUserRole: function handleUserRole(data) {\n      dispatch(actions.showUserRole(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(PopVerify));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/popVerify.js"],"names":["React","Button","Divider","Modal","Grid","Input","TextArea","Dropdown","connect","actions","withRouter","serviceLogin","host","window","location","_self","PopVerify","state","dummyData","selected","open","dimmer","devOptionsOne","devOptionsTwo","dropdownValueOne","dropdownValueTwo","showWarning","closeOnEscape","closeOnDimmerClick","deleteName","confirm","setState","props","close","onSendEmail","handleLoadingSpinner","resendVerify","username","userName","email","callbackurl","receiveResendVerify","nextProps","nextContext","name","closeVerifyModal","Component","mapStateToProps","selectOrg","org","mapDispatchProps","dispatch","data","loadingSpinner","handleSelectOrg","selectOrganiz","handleUserRole","showUserRole"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Divider, Modal, Grid, Input, TextArea, Dropdown} from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { withRouter } from 'react-router-dom';\nimport * as serviceLogin from '../services/service_login_api';\n\nconst host = window.location.host;\nlet _self = null;\nclass PopVerify extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            dummyData:[],\n            selected:{},\n            open:false,\n            dimmer:'',\n            devOptionsOne:[],\n            devOptionsTwo:[],\n            dropdownValueOne:'',\n            dropdownValueTwo:'',\n            showWarning:false,\n            closeOnEscape:true,\n            closeOnDimmerClick:true,\n            deleteName:''\n        }\n        _self = this;\n    }\n\n    closeVerifyModal(confirm) {\n        _self.setState({ showWarning: false })\n        _self.props.close()\n        if(confirm === 'yes') {\n            _self.onSendEmail()\n        }\n    }\n    onSendEmail() {\n        _self.props.handleLoadingSpinner(true);\n        serviceLogin.resendVerify('resendverify',\n            {\n                username: _self.props.userName,\n                email:_self.props.email,\n                callbackurl : 'https://'+host+'/verify'\n            }, _self.props.receiveResendVerify)\n    }\n\n    /** ************************ **/\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.open){\n            let name = '';\n            this.setState({showWarning:nextProps.open})\n        }\n    }\n\n    render() {\n        const { showWarning, closeOnEscape, closeOnDimmerClick } = this.state\n        return (\n            <Modal\n                open={showWarning}\n                closeOnEscape={closeOnEscape}\n                closeOnDimmerClick={closeOnDimmerClick}\n            >\n                <Modal.Header>{`Verify Email ${this.props.email}`}</Modal.Header>\n                <Modal.Content>\n                    {/* <p>{`Thank you for signing up. Please verify your account. In order to login to your account, you must verify your account. An email has been sent to ${this.props.email} with a link to verify your account. If you have not received the email after a few minutes check your spam folder or resend the verification email.`}</p> */}\n                    <p>{`Are you sure you want to send a verification email to ${this.props.email}?`}</p>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.closeVerifyModal('no')} negative>\n                        No\n                    </Button>\n                    <Button\n                        onClick={() => this.closeVerifyModal('yes')}\n                        positive\n                        labelPosition='right'\n                        icon='checkmark'\n                        content='Yes'\n                    />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectOrg : state.selectOrg.org?state.selectOrg.org:null\n    }\n};\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))},\n        handleSelectOrg: (data) => { dispatch(actions.selectOrganiz(data))},\n        handleUserRole: (data) => { dispatch(actions.showUserRole(data))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(PopVerify));\n"]},"metadata":{},"sourceType":"module"}