{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/index.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker, Annotations, Annotation } from \"react-simple-maps\";\nimport { Button, Icon, List } from 'semantic-ui-react';\nimport MaterialIcon from 'material-icons-react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { Motion, spring } from \"react-motion\";\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\";\nimport request from \"axios\";\nimport ReactTooltip from 'react-tooltip';\nimport uuid from \"uuid\"; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\nimport Legend from './legend';\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\nimport Tooltip from '../../../components/tooltip';\nimport { ReactSVGPanZoom } from 'react-svg-pan-zoom'; //style\n\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css';\nvar wrapperStyles = {\n  width: \"100%\",\n  height: \"100%\",\n  minWidth: 1600,\n  margin: \"0 auto\",\n  overflow: 'hidden'\n}; //reference : /public/assets/data-maps/world-most-populous-cities.json\n\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\nvar _self = null; // const makeList = (obj) => (\n//     <List>\n//         {obj.map((key) => (\n//             <List.Item>\n//                 <List.Icon name='marker' />\n//                 <List.Content>\n//                     <List.Header as='a'>{'- '+key}</List.Header>\n//                 </List.Content>\n//             </List.Item>\n//         ))\n//         }\n//     </List>\n//\n// )\n\nvar makeList = function makeList(obj) {\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, obj.map(function (key, i) {\n    return React.createElement(List.Item, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, key);\n  }));\n};\n\nfunction annoteClick() {\n  console.log('on click annnnnnn');\n}\n\nvar AnimatedMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimatedMap, _Component);\n\n  function AnimatedMap() {\n    var _this;\n\n    _classCallCheck(this, AnimatedMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedMap).call(this));\n\n    _this.handleMove = function (geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset; // this.setState({tooltipMsg:geography.properties.NAME})\n    };\n\n    _this.handleLeave = function () {\n      //this.props.dispatch(hide())\n      ReactTooltip.hide(_this.tooltipref);\n    };\n\n    _this.handleMoveMk = function (marker, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n      var names = [];\n\n      if (marker.name.length) {\n        names = makeList(marker.name);\n      } //this.setState({tooltipMsg:(names.length>0) ? names : (this.props.parentProps.condition === 'two')?marker.name[0]:marker.name})\n      //this.setState({tooltipMsg:(names.length>0) ? names : marker.name})\n\n\n      _self.setState({\n        tooltipMsg: typeof names === 'object' ? names : marker.name\n      });\n\n      if (!_this.moveMouse) {\n        ReactTooltip.rebuild();\n        ReactTooltip.show(_this.circle);\n      }\n\n      _this.moveMouse = true;\n    };\n\n    _this.handleLeaveMk = function () {\n      //this.props.dispatch(hide())\n      ReactTooltip.hide(_this.tooltipref);\n      _this.moveMouse = false;\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      center: [0, 20],\n      zoom: 1,\n      cities: [],\n      countries: [],\n      citiesSecond: [],\n      citiesFake: [React.createElement(Annotation, {\n        dx: 40,\n        dy: -30,\n        subject: [-61.5, 16.3],\n        strokeWidth: 1,\n        stroke: \"#607D8B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"text\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Guadaloupe\"))],\n      detailMode: false,\n      selectedCity: 'barcelona',\n      oldCountry: '',\n      unselectCity: ''\n    };\n    _this.handleZoomIn = _this.handleZoomIn.bind(_assertThisInitialized(_this));\n    _this.handleZoomOut = _this.handleZoomOut.bind(_assertThisInitialized(_this));\n    _this.handleCityClick = _this.handleCityClick.bind(_assertThisInitialized(_this));\n    _this.handleGotoAnalysis = _this.handleGotoAnalysis.bind(_assertThisInitialized(_this));\n    _this.handleReset = _this.handleReset.bind(_assertThisInitialized(_this));\n    _this.fetchCities = _this.fetchCities.bind(_assertThisInitialized(_this));\n    _this.handleMove = _this.handleMove.bind(_assertThisInitialized(_this));\n    _this.handleLeave = _this.handleLeave.bind(_assertThisInitialized(_this));\n    _this.dir = 1;\n    _this.interval = null;\n    _this.moveMouse = false;\n    _this.detailZoom = 4;\n    return _this;\n  }\n\n  _createClass(AnimatedMap, [{\n    key: \"handleZoomIn\",\n    value: function handleZoomIn() {\n      this.setState({\n        zoom: this.state.zoom * 2\n      });\n    }\n  }, {\n    key: \"handleZoomOut\",\n    value: function handleZoomOut() {\n      this.setState({\n        zoom: this.state.zoom / 2\n      });\n    }\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      this.setState({\n        center: [0, 20],\n        zoom: 1,\n        detailMode: false\n      });\n      this.props.parentProps.resetMap(false, 'fromDetail');\n    }\n    /* example:\n    {\n        \"CountryName\":\"Djibouti\",\n        \"CapitalName\":\"Djibouti\",\n        \"CapitalLatitude\":\"11.583333333333334\",\n        \"CapitalLongitude\":\"43.150000\",\n        \"CountryCode\":\"DJ\",\n        \"ContinentName\":\"Africa\"\n    }\n     */\n    // 펼쳐진 지도( full screen map)\n\n  }, {\n    key: \"handleCityClick\",\n    value: function handleCityClick(city) {\n      this.setState({\n        zoom: this.detailZoom,\n        center: city.coordinates,\n        detailMode: true\n      }); // if(d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n      //     d3.selectAll('.rsm-markers').selectAll(\".levelFive\")\n      //         .transition()\n      //         .ease(d3.easeBack)\n      //         .attr(\"r\", 5)\n      // }\n      //\n\n      console.log('marker on click...');\n      city['customId'] = uuid.v4();\n      city['detailMode'] = false;\n\n      _self.props.handleChangeCity(city);\n    }\n  }, {\n    key: \"handleAnnoteClick\",\n    value: function handleAnnoteClick(value) {\n      console.log('handleAnnoteClick..', value['name'][0]);\n      this.handleViewZone({\n        name: value['name'][0]\n      });\n    }\n  }, {\n    key: \"handleGotoAnalysis\",\n    value: function handleGotoAnalysis(country) {\n      if (this.props.parentProps) this.props.parentProps.gotoNext(country);\n    }\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n\n  }, {\n    key: \"handleViewZone\",\n    value: function handleViewZone(country) {\n      //change the data of detail Info\n      console.log('+++++++++++++++++++++++++++++++++++++++++++++++++++++++++', country);\n\n      _self.setState({\n        selectedCity: country.name\n      });\n\n      if (d3.selectAll('.detailMarker_' + _self.state.oldCountry)) {\n        d3.selectAll('.detailMarker_' + _self.state.oldCountry).transition().attr(\"r\", 5).style(\"opacity\", 1);\n      }\n\n      _self.setState({\n        oldCountry: country.name\n      });\n\n      country['detailMode'] = true;\n\n      _self.props.handleChangeCity(country);\n    }\n    /** ************************************************\n     * fetchCities\n     * display marker and alarm-counter on the worldmap\n     * 지도위에 마커포시하고 숫자표현\n     ** ************************************************/\n\n  }, {\n    key: \"fetchCities\",\n    value: function fetchCities(data) {\n      //display custom setting data in json file to local server.\n      // request\n      //     .get(\"/data-maps/world-most-populous-cities.json\")\n      //     .then(res => {\n      //         this.setState({\n      //             cities: res.data,\n      //         })\n      //     })\n\n      /*****************\n       * 실데이터 입력\n       * ***************/\n      //console.log('fetch cities...+++++------++++++ ', data)\n      this.setState({\n        cities: data\n      });\n    }\n  }, {\n    key: \"fetchCountry\",\n    value: function fetchCountry() {\n      var _this2 = this;\n\n      request.get(\"/data-maps/country-capitals.json\").then(function (res) {\n        _this2.setState({\n          countries: res.data\n        });\n\n        var _self = _this2;\n        setTimeout(_self.fetchMWCZone(), 1000);\n      });\n    }\n  }, {\n    key: \"fetchConnectivity\",\n    value: function fetchConnectivity() {\n      var indents = [0, 0];\n      var _countries = [{\n        name: 'Berlin'\n      }, {\n        name: 'Paris'\n      }, {\n        name: 'Kyiv'\n      }, {\n        name: 'Vienna'\n      }, {\n        name: 'Budapest'\n      }];\n      var _Country = [];\n\n      _countries.map(function (data, i) {\n        _self.state.countries.map(function (cnt) {\n          if (data.name === cnt.CapitalName) {\n            console.log('_Country --- ' + i, \"anem ---- \" + data.name, \"cnt.CountryName -- \" + cnt.CapitalLatitude, cnt.CapitalLongitude);\n\n            _Country.push({\n              name: cnt.CapitalName,\n              coordinates: [parseInt(cnt.CapitalLongitude) + indents[0], parseInt(cnt.CapitalLatitude) + indents[1]]\n            });\n          }\n        });\n      });\n\n      this.setState({\n        citiesSecond: _Country\n      });\n    }\n  }, {\n    key: \"fetchMWCZone\",\n    value: function fetchMWCZone() {\n      //Longitude, Latitude\n      var _Country = []; // let _countries = [\n      //     { \"name\": \"barcelona\", \"coordinates\": [2.1734, 41.3851], \"population\": 1, \"cost\":1, \"offsets\": [0,15]},\n      //     { \"name\": \"bonn\", \"coordinates\": [7.098, 50.737], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n      //     { \"name\": \"frankfurt\", \"coordinates\": [8.6821, 50.1109], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n      //     { \"name\": \"berlin\", \"coordinates\": [13.405,52.52], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n      //     ]\n\n      var _countries = [{\n        \"name\": \"barcelona-mexdemo\",\n        \"coordinates\": [2.1734, 41.3851],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [0, 15]\n      }, {\n        \"name\": \"skt-mwc\",\n        \"coordinates\": [2.1734, 42.0851],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [0, -10]\n      }, {\n        \"name\": \"tip-mexdemo\",\n        \"coordinates\": [1.4, 41.5851],\n        \"population\": 1,\n        \"cost\": 1,\n        \"offsets\": [-30, 0]\n      }];\n      this.setState({\n        citiesSecond: _countries\n      });\n    } //마커의 깜박거림 크기\n\n  }, {\n    key: \"blinkAnimationMarker\",\n    value: function blinkAnimationMarker(id, dir) {\n      var radius = 0;\n      var alpha = 1;\n      var durate = 900;\n\n      if (dir === 1) {\n        radius = 32;\n        alpha = 0;\n        durate = 900;\n      } else {\n        radius = 16;\n        alpha = 1;\n        durate = 300;\n      }\n\n      if (d3.selectAll('.' + id).selectAll(\".levelFive\")) {\n        d3.selectAll('.' + id).selectAll(\".levelFive\").transition().duration(durate).ease(d3.easeBack).attr(\"r\", radius).style(\"opacity\", alpha);\n      }\n\n      if (d3.selectAll('.detailMarker_' + _self.state.selectedCity)) {\n        d3.selectAll('.detailMarker_' + _self.state.selectedCity).transition().duration(durate).ease(d3.easeBack).attr(\"r\", dir === 1 ? 5 : 7).style(\"opacity\", alpha);\n      }\n    } //tooltip\n\n  }, {\n    key: \"handleMouseOverMarker\",\n    value: function handleMouseOverMarker(value) {\n      this.setState({\n        tooltipMsg: value\n      });\n      ReactTooltip.rebuild();\n      ReactTooltip.show(this.tooltipref);\n    }\n  }, {\n    key: \"drawZoomRect\",\n    value: function drawZoomRect(target, self) {\n      var refresh = function refresh() {};\n\n      var margin = {\n        top: 0,\n        right: 12,\n        bottom: 20,\n        left: 60\n      },\n          width = 960 - margin.left - margin.right,\n          height = 430 - margin.top - margin.bottom;\n      var xmin = 0,\n          xmax = 500,\n          ymin = 0,\n          ymax = 1000;\n      var x = d3.scaleLinear().domain([xmin + .5, xmax + .5]).range([0.5, width + .5]);\n      var y = d3.scaleLinear().domain([ymin + .5, ymax + .5]).range([height + .5, 0.5]);\n      var zoom = d3.zoom().scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n      var zoomRect = false;\n      var e = self,\n          origin = d3.mouse(e),\n          rect = target.append(\"rect\").attr(\"class\", \"zoom\");\n      d3.select(\"body\").classed(\"noselect\", true);\n      origin[0] = Math.max(0, Math.min(width, origin[0]));\n      origin[1] = Math.max(0, Math.min(height, origin[1]));\n      d3.select(window).on(\"mousemove.zoomRect\", function () {\n        var m = d3.mouse(e);\n        m[0] = Math.max(0, Math.min(width, m[0]));\n        m[1] = Math.max(0, Math.min(height, m[1]));\n        rect.attr(\"x\", Math.min(origin[0], m[0])).attr(\"y\", Math.min(origin[1], m[1])).attr(\"width\", Math.abs(m[0] - origin[0])).attr(\"height\", Math.abs(m[1] - origin[1]));\n      }).on(\"mouseup.zoomRect\", function () {\n        d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n        d3.select(\"body\").classed(\"noselect\", false);\n        var m = d3.mouse(e);\n        m[0] = Math.max(0, Math.min(width, m[0]));\n        m[1] = Math.max(0, Math.min(height, m[1]));\n\n        if (m[0] !== origin[0] && m[1] !== origin[1]) {\n          //zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort(function(a,b) { return a - b;})))\n          //.y(y.domain([origin[1], m[1]].map(y.invert).sort(function(a,b) { return a - b;})));\n          //x.domain([origin[0], m[0]].map(x.invert, x));\n          //y.domain([origin[1], m[1]].map(y.invert, y));\n          var dx = m[0] - origin[0];\n          var dy = m[1] - origin[1];\n          var x = (origin[0] + m[0]) / 2;\n          var y = (origin[1] + m[1]) / 2;\n          var scale = Math.max(width / dx, height / dy);\n          var translate = [width / 2 - scale * x, height / 2 - scale * y];\n          var zt = d3.zoomIdentity.scale(scale).translate(-origin[0], translate[1]);\n          console.log('scale  ', scale); //zoom.transform(d3.select(\"#main\"), zt)\n        }\n\n        rect.remove();\n        refresh();\n      }, true);\n    }\n  }, {\n    key: \"removeZoomer\",\n    value: function removeZoomer() {}\n  }, {\n    key: \"makeMarkers\",\n    value: function makeMarkers() {\n      var _this3 = this;\n\n      return React.createElement(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, !this.state.detailMode ? this.state.cities ? this.state.cities.map(function (city, i) {\n        return React.createElement(Marker, {\n          key: i,\n          marker: city,\n          onClick: _this3.handleCityClick,\n          onMouseMove: _this3.handleMoveMk,\n          onMouseLeave: _this3.handleLeaveMk,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }, React.createElement(\"text\", {\n          textAnchor: \"middle\",\n          y: 3.5,\n          className: \"marker_value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, city.cost), React.createElement(\"circle\", {\n          ref: function ref(_ref) {\n            return _this3.circle = _ref;\n          },\n          \"data-tip\": \"tooltip\",\n          \"data-for\": \"happyFace\",\n          class: city.population > 35000000 ? 'levelFive' : 'levelOther',\n          cx: 0,\n          cy: 0,\n          r: cityScale(city.population),\n          fill: city.population > 35000000 ? 'url(#levelFive)' : city.population <= 35000000 && city.population > 30000000 ? 'url(#levelFour)' : city.population <= 30000000 && city.population > 25000000 ? 'url(#levelThree)' : city.population <= 25000000 && city.population > 20000000 ? 'url(#levelTwo)' : 'url(#levelOne)',\n          stroke: styles.marker.stroke,\n          strokeWidth: styles.marker.strokeWidth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }));\n      }) : null : this.state.cities.map(function (city, i) {\n        return React.createElement(Marker, {\n          key: i,\n          marker: city,\n          onClick: _this3.handleViewZone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, React.createElement(\"circle\", {\n          class: \"detailMarker_\" + city.name,\n          cx: 0,\n          cy: 0,\n          r: 5,\n          opacity: 1,\n          fill: styles.marker.second.fill,\n          stroke: styles.marker.second.stroke,\n          strokeWidth: styles.marker.second.strokeWidth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }));\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCountry();\n\n      var _self = this;\n\n      this.interval = setInterval(function () {\n        if (_self.dir === 1) {\n          _self.dir = -1;\n        } else {\n          _self.dir = 1;\n        }\n\n        _self.blinkAnimationMarker('rsm-markers', _self.dir);\n      }, 900);\n\n      if (_self.props.parentProps.tabIdx === 'pg=1') {\n        _self.handleCityClick({\n          \"name\": this.state.selectedCity,\n          \"coordinates\": [2.1734, 41.3851],\n          \"population\": 37843000,\n          \"cost\": 3\n        });\n      }\n\n      _self.setState({\n        oldCountry: this.state.selectedCity\n      });\n\n      setTimeout(function () {\n        // var rsm = d3.select('.rsm-zoomable-group').on(\"mousedown\", function() {\n        //     var self = this;\n        //     console.log('mouse down rsm-zoomable-group', this)\n        //     _self.drawZoomRect(d3.select('.rsm-zoomable-group'), self);\n        // }).on(\"mouseout\", function() {\n        //     _self.removeZoomer();\n        // })\n        document.querySelector(\"text\").addEventListener(\"click\", function (event) {\n          // If the user clicked right on the SVG,\n          // this will never fire\n          console.log('on mouse down  annotation ..', event);\n        });\n      }, 1000); //test\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      console.log('++++++++++++++', nextProps); // if(nextProps.parentProps.zoom === 'in'){\n      //     if(nextProps.parentProps.data && nextProps.parentProps.data.length > 0) {\n      //         this.setState({\n      //             zoom: this.detailZoom,\n      //             center: nextProps.parentProps.data[0].coordinates,\n      //             detailMode: true\n      //         })\n      //     }\n      // } else {\n      //     this.setState({\n      //         zoom: 1,\n      //         center: [0,20],\n      //         detailMode: false\n      //     })\n      // }\n\n      this.fetchCities(nextProps.parentProps.data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022'];\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"zoom-inout-reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleZoomIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"mapZoomCtl\",\n        size: \"20\",\n        icon: true,\n        onClick: this.handleZoomOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"minus square outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }))), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[5],\n        endColor: grdColors[5],\n        idCSS: \"levelFive\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[4],\n        endColor: grdColors[4],\n        idCSS: \"levelFour\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[3],\n        endColor: grdColors[3],\n        idCSS: \"levelThree\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[2],\n        endColor: grdColors[2],\n        idCSS: \"levelTwo\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }), React.createElement(RadialGradientSVG, {\n        startColor: grdColors[0],\n        middleColor: grdColors[1],\n        endColor: grdColors[1],\n        idCSS: \"levelOne\",\n        rotation: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }), React.createElement(ReactTooltip, {\n        id: \"happyFace\",\n        className: \"customToolTip\",\n        type: \"dark\",\n        effect: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, this.state.tooltipMsg)), React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, function (_ref2) {\n        var width = _ref2.width,\n            height = _ref2.height;\n        return React.createElement(Motion, {\n          defaultStyle: {\n            zoom: 1,\n            x: 0,\n            y: 20\n          },\n          style: {\n            zoom: spring(_this4.state.zoom, {\n              stiffness: 210,\n              damping: 30\n            }),\n            x: spring(_this4.state.center[0], {\n              stiffness: 210,\n              damping: 30\n            }),\n            y: spring(_this4.state.center[1], {\n              stiffness: 210,\n              damping: 30\n            })\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, function (_ref3) {\n          var zoom = _ref3.zoom,\n              x = _ref3.x,\n              y = _ref3.y;\n          return React.createElement(ComposableMap, {\n            projectionConfig: {\n              scale: 205\n            },\n            width: 980,\n            height: 551,\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: styles.geoBackground.color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 614\n            },\n            __self: this\n          }, React.createElement(ZoomableGroup, {\n            center: [x, y],\n            zoom: zoom,\n            disablePanning: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 624\n            },\n            __self: this\n          }, React.createElement(Geographies, {\n            geography: \"./topojson-maps/world-110m.json\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 625\n            },\n            __self: this\n          }, function (geographies, projection) {\n            return geographies.map(function (geography, i) {\n              return geography.id !== \"010\" && React.createElement(Geography, {\n                key: i,\n                geography: geography,\n                projection: projection,\n                \"data-tip\": geography.properties.NAME,\n                style: styles.geography,\n                onMouseMove: _this4.handleMove,\n                onMouseLeave: _this4.handleLeave,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 628\n                },\n                __self: this\n              });\n            });\n          }), _this4.makeMarkers(), React.createElement(Annotations, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 640\n            },\n            __self: this\n          }, _this4.state.detailMode ? _this4.state.cities.map(function (city, i) {\n            return React.createElement(Annotation, {\n              key: i,\n              dx: -30,\n              dy: 30 + i * 30,\n              curve: 0.5,\n              zoom: 1,\n              subject: city['coordinates'],\n              strokeWidth: 0.1,\n              stroke: '#AFAFAF',\n              style: {\n                cursor: 'pointer'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 645\n              },\n              __self: this\n            }, React.createElement(\"text\", {\n              className: \"annoteText\",\n              fill: \"#AFAFAF\",\n              onClick: function onClick(a, b) {\n                return _this4.handleAnnoteClick(city);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 655\n              },\n              __self: this\n            }, city['name'][0]));\n          }) : null)));\n        });\n      }));\n    }\n  }]);\n\n  return AnimatedMap;\n}(Component);\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.setUser(data));\n    },\n    handleChangeTab: function handleChangeTab(data) {\n      dispatch(actions.changeTab(data));\n    },\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchProps)(AnimatedMap);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/index.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Annotations","Annotation","Button","Icon","List","MaterialIcon","ContainerDimensions","Motion","spring","d3","scaleLinear","request","ReactTooltip","uuid","connect","actions","Legend","RadialGradientSVG","Tooltip","ReactSVGPanZoom","styles","wrapperStyles","width","height","minWidth","margin","overflow","cityScale","domain","range","_self","makeList","obj","map","key","i","annoteClick","console","log","AnimatedMap","handleMove","geography","evt","x","clientX","y","clientY","window","pageYOffset","handleLeave","hide","tooltipref","handleMoveMk","marker","names","name","length","setState","tooltipMsg","moveMouse","rebuild","show","circle","handleLeaveMk","state","center","zoom","cities","countries","citiesSecond","citiesFake","detailMode","selectedCity","oldCountry","unselectCity","handleZoomIn","bind","handleZoomOut","handleCityClick","handleGotoAnalysis","handleReset","fetchCities","dir","interval","detailZoom","props","parentProps","resetMap","city","coordinates","v4","handleChangeCity","value","handleViewZone","country","gotoNext","selectAll","transition","attr","style","data","get","then","res","setTimeout","fetchMWCZone","indents","_countries","_Country","cnt","CapitalName","CapitalLatitude","CapitalLongitude","push","parseInt","id","radius","alpha","durate","duration","ease","easeBack","target","self","refresh","top","right","bottom","left","xmin","xmax","ymin","ymax","scaleExtent","Infinity","on","zoomRect","e","origin","mouse","rect","append","select","classed","Math","max","min","m","abs","dx","dy","scale","translate","zt","zoomIdentity","remove","cost","ref","population","stroke","strokeWidth","second","fill","fetchCountry","setInterval","blinkAnimationMarker","tabIdx","document","querySelector","addEventListener","event","clearInterval","nextProps","nextContext","grdColors","stiffness","damping","backgroundColor","geoBackground","color","geographies","projection","properties","NAME","makeMarkers","cursor","a","b","handleAnnoteClick","mapDispatchProps","dispatch","handleInjectData","setUser","handleChangeTab","changeTab","changeCity"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker,Annotations, Annotation\n} from \"react-simple-maps\";\nimport { Button, Icon, List } from 'semantic-ui-react';\nimport MaterialIcon from 'material-icons-react';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport { Motion, spring } from \"react-motion\";\nimport * as d3 from 'd3';\nimport { scaleLinear } from \"d3-scale\";\nimport request from \"axios\";\nimport ReactTooltip from 'react-tooltip';\nimport uuid from \"uuid\";\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions';\n\nimport Legend from './legend';\nimport RadialGradientSVG from '../../../../src/chartGauge/radialGradientSVG';\nimport Tooltip from '../../../components/tooltip';\nimport {ReactSVGPanZoom} from 'react-svg-pan-zoom';\n\n//style\nimport styles from '../../../css/worldMapStyles';\nimport './styles.css';\n\nconst wrapperStyles = {\n    width: \"100%\",\n    height:\"100%\",\n    minWidth: 1600,\n    margin: \"0 auto\",\n    overflow:'hidden'\n}\n//reference : /public/assets/data-maps/world-most-populous-cities.json\n\nconst cityScale = scaleLinear()\n    .domain([0,37843000])\n    .range([1,25])\n\n\nlet _self = null;\n// const makeList = (obj) => (\n//     <List>\n//         {obj.map((key) => (\n//             <List.Item>\n//                 <List.Icon name='marker' />\n//                 <List.Content>\n//                     <List.Header as='a'>{'- '+key}</List.Header>\n//                 </List.Content>\n//             </List.Item>\n//         ))\n//         }\n//     </List>\n//\n// )\nconst makeList = (obj) => (\n    <List>\n        {obj.map((key,i) => (\n            <List.Item key={i}>\n\n                {key}\n\n            </List.Item>\n        ))\n        }\n    </List>\n\n)\nfunction annoteClick () {\n    console.log('on click annnnnnn')\n}\nclass AnimatedMap extends Component {\n    constructor() {\n        super()\n        _self = this;\n        this.state = {\n            center: [0,20],\n            zoom: 1,\n            cities:[],\n            countries:[],\n            citiesSecond:[],\n            citiesFake:[\n                <Annotation\n                    dx={ 40 }\n                    dy={ -30 }\n                    subject={ [ -61.5, 16.3 ] }\n                    strokeWidth={ 1 }\n                    stroke=\"#607D8B\"\n                >\n                    <text>{ \"Guadaloupe\" }</text>\n                </Annotation>\n            ],\n            detailMode:false,\n            selectedCity:'barcelona',\n            oldCountry:'',\n            unselectCity:'',\n        }\n        this.handleZoomIn = this.handleZoomIn.bind(this)\n        this.handleZoomOut = this.handleZoomOut.bind(this)\n        this.handleCityClick = this.handleCityClick.bind(this)\n        this.handleGotoAnalysis = this.handleGotoAnalysis.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.fetchCities = this.fetchCities.bind(this)\n        this.handleMove = this.handleMove.bind(this)\n        this.handleLeave = this.handleLeave.bind(this)\n        this.dir = 1;\n        this.interval = null;\n        this.moveMouse = false;\n        this.detailZoom = 4;\n    }\n    handleZoomIn() {\n        this.setState({\n            zoom: this.state.zoom * 2\n        })\n\n    }\n    handleZoomOut() {\n        this.setState({\n            zoom: this.state.zoom / 2\n        })\n\n    }\n    handleReset() {\n        this.setState({\n            center: [0,20],\n            zoom: 1,\n            detailMode:false\n        })\n        this.props.parentProps.resetMap(false, 'fromDetail')\n    }\n    /* example:\n    {\n        \"CountryName\":\"Djibouti\",\n        \"CapitalName\":\"Djibouti\",\n        \"CapitalLatitude\":\"11.583333333333334\",\n        \"CapitalLongitude\":\"43.150000\",\n        \"CountryCode\":\"DJ\",\n        \"ContinentName\":\"Africa\"\n    }\n     */\n\n    // 펼쳐진 지도( full screen map)\n    handleCityClick(city) {\n        this.setState({\n            zoom: this.detailZoom,\n            center: city.coordinates,\n            detailMode:true\n        })\n\n        // if(d3.selectAll('.rsm-markers').selectAll(\".levelFive\")) {\n        //     d3.selectAll('.rsm-markers').selectAll(\".levelFive\")\n        //         .transition()\n        //         .ease(d3.easeBack)\n        //         .attr(\"r\", 5)\n        // }\n        //\n\n        console.log('marker on click...')\n\n        city['customId'] = uuid.v4();\n        city['detailMode'] = false;\n        _self.props.handleChangeCity(city)\n\n\n    }\n    handleAnnoteClick(value) {\n        console.log('handleAnnoteClick..', value['name'][0])\n        this.handleViewZone({name:value['name'][0]})\n    }\n    handleGotoAnalysis(country) {\n        if(this.props.parentProps) this.props.parentProps.gotoNext(country);\n    }\n\n    /**************\n     * 지도 줌인 상태에서 지역을 마커를 클릭하면,  우측 패널의 지표값 변경\n     * @param country\n     */\n    handleViewZone(country) {\n        //change the data of detail Info\n        console.log('+++++++++++++++++++++++++++++++++++++++++++++++++++++++++', country)\n        _self.setState({selectedCity: country.name})\n        if(d3.selectAll('.detailMarker_'+_self.state.oldCountry)) {\n            d3.selectAll('.detailMarker_'+_self.state.oldCountry)\n                .transition()\n                .attr(\"r\", 5)\n                .style(\"opacity\",1)\n        }\n        _self.setState({oldCountry:country.name})\n        country['detailMode'] = true;\n        _self.props.handleChangeCity(country)\n    }\n\n    /** ************************************************\n     * fetchCities\n     * display marker and alarm-counter on the worldmap\n     * 지도위에 마커포시하고 숫자표현\n     ** ************************************************/\n    fetchCities(data) {\n\n        //display custom setting data in json file to local server.\n        // request\n        //     .get(\"/data-maps/world-most-populous-cities.json\")\n        //     .then(res => {\n        //         this.setState({\n        //             cities: res.data,\n        //         })\n        //     })\n\n        /*****************\n         * 실데이터 입력\n         * ***************/\n        //console.log('fetch cities...+++++------++++++ ', data)\n        this.setState({\n            cities : data\n        })\n    }\n    fetchCountry() {\n        request\n            .get(\"/data-maps/country-capitals.json\")\n            .then(res => {\n                this.setState({\n                    countries: res.data\n                })\n                let _self = this;\n                setTimeout(_self.fetchMWCZone(), 1000)\n            })\n    }\n    fetchConnectivity() {\n        let indents = [0, 0]\n        let _countries = [{name:'Berlin'},{name:'Paris'},{name:'Kyiv'},{name:'Vienna'},{name:'Budapest'}]\n        let _Country = []\n        _countries.map((data, i) => {\n            _self.state.countries.map((cnt) => {\n                if(data.name === cnt.CapitalName) {\n                    console.log('_Country --- ' + i, \"anem ---- \" + data.name, \"cnt.CountryName -- \" + cnt.CapitalLatitude, cnt.CapitalLongitude)\n                    _Country.push({ name: cnt.CapitalName, coordinates: [parseInt(cnt.CapitalLongitude) + indents[0], parseInt(cnt.CapitalLatitude) + indents[1]] })\n                }\n            })\n\n        })\n\n        this.setState({\n            citiesSecond: _Country\n        })\n    }\n\n    fetchMWCZone() {\n        //Longitude, Latitude\n        let _Country = []\n        // let _countries = [\n        //     { \"name\": \"barcelona\", \"coordinates\": [2.1734, 41.3851], \"population\": 1, \"cost\":1, \"offsets\": [0,15]},\n        //     { \"name\": \"bonn\", \"coordinates\": [7.098, 50.737], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n        //     { \"name\": \"frankfurt\", \"coordinates\": [8.6821, 50.1109], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n        //     { \"name\": \"berlin\", \"coordinates\": [13.405,52.52], \"population\": 1, \"cost\":1, \"offsets\": [0,15] },\n        //     ]\n        let _countries = [\n            { \"name\": \"barcelona-mexdemo\", \"coordinates\": [2.1734, 41.3851], \"population\": 1, \"cost\":1, \"offsets\": [0,15]},\n            { \"name\": \"skt-mwc\", \"coordinates\": [2.1734, 42.0851], \"population\": 1, \"cost\":1, \"offsets\": [0,-10] },\n            { \"name\": \"tip-mexdemo\", \"coordinates\": [1.4, 41.5851], \"population\": 1, \"cost\":1, \"offsets\": [-30,0] },\n        ]\n        this.setState({\n            citiesSecond: _countries\n        })\n    }\n\n    //마커의 깜박거림 크기\n    blinkAnimationMarker(id, dir) {\n        let radius = 0;\n        let alpha = 1;\n        let durate = 900;\n        if(dir === 1){\n            radius = 32;\n            alpha = 0;\n            durate = 900;\n        } else {\n            radius = 16;\n            alpha = 1;\n            durate = 300;\n        }\n        if(d3.selectAll('.'+id).selectAll(\".levelFive\")) {\n            d3.selectAll('.'+id).selectAll(\".levelFive\")\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", radius)\n                .style(\"opacity\",alpha)\n        }\n\n\n        if(d3.selectAll('.detailMarker_'+_self.state.selectedCity)) {\n            d3.selectAll('.detailMarker_'+_self.state.selectedCity)\n                .transition()\n                .duration(durate)\n                .ease(d3.easeBack)\n                .attr(\"r\", (dir === 1)?5:7)\n                .style(\"opacity\",alpha)\n        }\n\n    }\n\n    //tooltip\n    handleMove = (geography, evt) => {\n        const x = evt.clientX\n        const y = evt.clientY + window.pageYOffset\n\n        // this.setState({tooltipMsg:geography.properties.NAME})\n\n    }\n    handleLeave = () => {\n        //this.props.dispatch(hide())\n        ReactTooltip.hide(this.tooltipref)\n    }\n    handleMoveMk = (marker, evt) => {\n        const x = evt.clientX\n        const y = evt.clientY + window.pageYOffset\n        let names = [];\n        if(marker.name.length){\n            names = makeList(marker.name)\n        }\n\n        //this.setState({tooltipMsg:(names.length>0) ? names : (this.props.parentProps.condition === 'two')?marker.name[0]:marker.name})\n        //this.setState({tooltipMsg:(names.length>0) ? names : marker.name})\n        _self.setState({tooltipMsg:(typeof names === 'object') ? names : marker.name})\n        if(!this.moveMouse){\n            ReactTooltip.rebuild()\n            ReactTooltip.show(this.circle)\n        }\n\n        this.moveMouse = true;\n    }\n    handleLeaveMk = () => {\n        //this.props.dispatch(hide())\n        ReactTooltip.hide(this.tooltipref)\n        this.moveMouse = false;\n    }\n\n    handleMouseOverMarker(value) {\n        this.setState({tooltipMsg:value})\n        ReactTooltip.rebuild()\n        ReactTooltip.show(this.tooltipref)\n    }\n\n\n    drawZoomRect(target, self) {\n        var refresh = () => {\n\n        }\n        var margin = {top: 0, right: 12, bottom: 20, left: 60},\n            width = 960 - margin.left - margin.right,\n            height = 430 - margin.top - margin.bottom;\n\n\n        var xmin = 0,\n            xmax = 500,\n            ymin = 0,\n            ymax = 1000;\n\n        var x = d3.scaleLinear()\n            .domain([xmin+.5, xmax+.5])\n            .range([0.5, width+.5]);\n\n        var y = d3.scaleLinear()\n            .domain([ymin+.5, ymax+.5])\n            .range([height+.5, 0.5]);\n\n\n        var zoom = d3.zoom()\n            .scaleExtent([.001, Infinity]).on(\"zoom\", refresh);\n\n        var zoomRect = false;\n        var e = self,\n            origin = d3.mouse(e),\n            rect = target.append(\"rect\").attr(\"class\", \"zoom\");\n        d3.select(\"body\").classed(\"noselect\", true);\n        origin[0] = Math.max(0, Math.min(width, origin[0]));\n        origin[1] = Math.max(0, Math.min(height, origin[1]));\n        d3.select(window)\n            .on(\"mousemove.zoomRect\", function() {\n                var m = d3.mouse(e);\n                m[0] = Math.max(0, Math.min(width, m[0]));\n                m[1] = Math.max(0, Math.min(height, m[1]));\n                rect.attr(\"x\", Math.min(origin[0], m[0]))\n                    .attr(\"y\", Math.min(origin[1], m[1]))\n                    .attr(\"width\", Math.abs(m[0] - origin[0]))\n                    .attr(\"height\", Math.abs(m[1] - origin[1]));\n            })\n            .on(\"mouseup.zoomRect\", function() {\n                d3.select(window).on(\"mousemove.zoomRect\", null).on(\"mouseup.zoomRect\", null);\n                d3.select(\"body\").classed(\"noselect\", false);\n                var m = d3.mouse(e);\n                m[0] = Math.max(0, Math.min(width, m[0]));\n                m[1] = Math.max(0, Math.min(height, m[1]));\n                if (m[0] !== origin[0] && m[1] !== origin[1]) {\n                    //zoom.x(x.domain([origin[0], m[0]].map(x.invert).sort(function(a,b) { return a - b;})))\n                    //.y(y.domain([origin[1], m[1]].map(y.invert).sort(function(a,b) { return a - b;})));\n\n\n\n                    //x.domain([origin[0], m[0]].map(x.invert, x));\n                    //y.domain([origin[1], m[1]].map(y.invert, y));\n\n\n                    var dx = m[0] - origin[0];\n                    var dy = m[1] - origin[1];\n                    var x = (origin[0] + m[0]) / 2;\n                    var y = (origin[1] + m[1]) / 2;\n\n                    var scale = Math.max(width / dx, height / dy);\n                    var translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n                    var zt = d3.zoomIdentity\n                    \t\t.scale(scale)\n                    \t\t.translate(-origin[0], translate[1]);\n\n                    console.log('scale  ', scale)\n\n                    //zoom.transform(d3.select(\"#main\"), zt)\n\n                }\n                rect.remove();\n                refresh();\n            }, true);\n\n    }\n    removeZoomer() {\n\n    }\n\n\n    makeMarkers() {\n        return (\n        <Markers>\n            {(!this.state.detailMode) ?\n                (this.state.cities) ?\n                    this.state.cities.map((city, i) => (\n                        <Marker key={i} marker={city}\n                                onClick={this.handleCityClick}\n                                onMouseMove={this.handleMoveMk}\n                                onMouseLeave={this.handleLeaveMk}\n                        >\n                            <text textAnchor=\"middle\" y={3.5} className=\"marker_value\">\n                                {city.cost}\n                            </text>\n                            <circle\n                                ref={ref => this.circle = ref} data-tip='tooltip' data-for='happyFace'\n                                class={(city.population > 35000000) ? 'levelFive' : 'levelOther'}\n                                cx={0}\n                                cy={0}\n                                r={cityScale(city.population)}\n                                fill={\n                                    (city.population > 35000000) ? 'url(#levelFive)' :\n                                        (city.population <= 35000000 && city.population > 30000000) ? 'url(#levelFour)' :\n                                            (city.population <= 30000000 && city.population > 25000000) ? 'url(#levelThree)' :\n                                                (city.population <= 25000000 && city.population > 20000000) ? 'url(#levelTwo)' :\n                                                    'url(#levelOne)'\n                                }\n                                stroke={styles.marker.stroke}\n                                strokeWidth={styles.marker.strokeWidth}\n                            />\n\n                            {/*<text textAnchor=\"middle\" class=\"marker_label\" x={(city.markerOffsetX)?(city.markerOffsetX):0} y={(city.markerOffset)?(city.markerOffset):24}>*/}\n                            {/*{city.name}*/}\n                            {/*</text>*/}\n                        </Marker>\n                    )) : null\n                :\n                this.state.cities.map((city, i) => (\n                    <Marker\n                        key={i}\n                        marker={city}\n                        onClick={this.handleViewZone}\n                    >\n                        <circle\n                            class={\"detailMarker_\" + city.name}\n                            cx={0}\n                            cy={0}\n                            r={5}\n                            opacity={1}\n                            fill={styles.marker.second.fill}\n                            stroke={styles.marker.second.stroke}\n                            strokeWidth={styles.marker.second.strokeWidth}\n                        />\n                        {/*<text*/}\n                            {/*class=\"marker_label\"*/}\n                            {/*textAnchor=\"middle\"*/}\n                            {/*x={city.offsets[0]}*/}\n                            {/*y={city.offsets[1]}*/}\n                        {/*>*/}\n                            {/*{city.name}*/}\n                        {/*</text>*/}\n                    </Marker>\n\n                ))\n            }\n\n        </Markers>)\n    }\n    componentDidMount() {\n\n        this.fetchCountry();\n\n        let _self = this;\n        this.interval = setInterval(function() {\n            if(_self.dir === 1) {\n                _self.dir = -1\n            } else {\n                _self.dir = 1;\n            }\n            _self.blinkAnimationMarker('rsm-markers', _self.dir)\n        }, 900)\n\n        if(_self.props.parentProps.tabIdx === 'pg=1'){\n            _self.handleCityClick({ \"name\": this.state.selectedCity, \"coordinates\": [2.1734, 41.3851], \"population\": 37843000, \"cost\":3 });\n        }\n\n        _self.setState({oldCountry:this.state.selectedCity})\n\n\n        setTimeout(() => {\n\n            // var rsm = d3.select('.rsm-zoomable-group').on(\"mousedown\", function() {\n            //     var self = this;\n            //     console.log('mouse down rsm-zoomable-group', this)\n            //     _self.drawZoomRect(d3.select('.rsm-zoomable-group'), self);\n            // }).on(\"mouseout\", function() {\n            //     _self.removeZoomer();\n            // })\n\n\n            document.querySelector(\"text\").addEventListener(\"click\", function(event) {\n                // If the user clicked right on the SVG,\n                // this will never fire\n                console.log('on mouse down  annotation ..', event)\n            });\n        }, 1000)\n\n        //test\n\n\n\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('++++++++++++++', nextProps)\n        // if(nextProps.parentProps.zoom === 'in'){\n        //     if(nextProps.parentProps.data && nextProps.parentProps.data.length > 0) {\n        //         this.setState({\n        //             zoom: this.detailZoom,\n        //             center: nextProps.parentProps.data[0].coordinates,\n        //             detailMode: true\n        //         })\n        //     }\n        // } else {\n        //     this.setState({\n        //         zoom: 1,\n        //         center: [0,20],\n        //         detailMode: false\n        //     })\n        // }\n        this.fetchCities(nextProps.parentProps.data)\n    }\n\n    render() {\n        const grdColors = ['#000000', '#00CC44', '#88ff00', '#FFEE00', '#FF7700', '#FF0022']\n        return (\n            <div style={wrapperStyles}>\n                <div className=\"zoom-inout-reset\">\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleReset}>\n                        <Icon name=\"expand\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleZoomIn}>\n                        <Icon name=\"plus square outline\" />\n                    </Button>\n                    <Button id=\"mapZoomCtl\" size='20' icon onClick={this.handleZoomOut}>\n                        <Icon name=\"minus square outline\" />\n                    </Button>\n                </div>\n\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[5]} endColor={grdColors[5]} idCSS=\"levelFive\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[4]} endColor={grdColors[4]} idCSS=\"levelFour\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[3]} endColor={grdColors[3]} idCSS=\"levelThree\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[2]} endColor={grdColors[2]} idCSS=\"levelTwo\" rotation={0}/>\n                <RadialGradientSVG startColor={grdColors[0]} middleColor={grdColors[1]} endColor={grdColors[1]} idCSS=\"levelOne\" rotation={0}/>\n\n                <Legend />\n\n                <ReactTooltip id='happyFace' className='customToolTip' type='dark' effect='float'>\n                    <span>{this.state.tooltipMsg}</span>\n                </ReactTooltip>\n                <ContainerDimensions>\n                    { ({ width, height }) =>\n                        <Motion\n                            defaultStyle={{\n                                zoom: 1,\n                                x: 0,\n                                y: 20,\n                            }}\n                            style={{\n                                zoom: spring(this.state.zoom, {stiffness: 210, damping: 30}),\n                                x: spring(this.state.center[0], {stiffness: 210, damping: 30}),\n                                y: spring(this.state.center[1], {stiffness: 210, damping: 30}),\n                            }}\n                        >\n                            {({zoom,x,y}) => (\n                                <ComposableMap\n                                    projectionConfig={{ scale: 205 }}\n                                    width={980}\n                                    height={551}\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        backgroundColor:styles.geoBackground.color\n                                    }}\n                                >\n                                    <ZoomableGroup center={[x,y]} zoom={zoom} disablePanning={false}>\n                                        <Geographies geography=\"./topojson-maps/world-110m.json\">\n                                            {(geographies, projection) =>\n                                                geographies.map((geography, i) => geography.id !== \"010\" && (\n                                                    <Geography\n                                                        key={i}\n                                                        geography={geography}\n                                                        projection={projection}\n                                                        data-tip={geography.properties.NAME}\n                                                        style={styles.geography}\n                                                        onMouseMove={this.handleMove}\n                                                        onMouseLeave={this.handleLeave}\n                                                    />\n                                                ))}\n                                        </Geographies>\n                                        {this.makeMarkers()}\n                                        <Annotations>\n                                            {\n                                                this.state.detailMode ?\n\n                                                    this.state.cities.map((city, i) => (\n                                                        <Annotation\n                                                            key={i}\n                                                            dx={ -30 } dy={ 30+(i*30) }\n                                                            curve={0.5}\n                                                            zoom = {1}\n                                                            subject={ city['coordinates'] }\n                                                            strokeWidth={ 0.1 }\n                                                            stroke={'#AFAFAF'}\n                                                            style={{cursor:'pointer'}}\n                                                        >\n                                                            <text className='annoteText'\n                                                                fill='#AFAFAF'\n                                                                  onClick={(a, b) => this.handleAnnoteClick(city)}\n                                                            >\n                                                                { city['name'][0] }\n                                                            </text>\n                                                        </Annotation>\n                                                    ))\n                                                    :null\n                                            }\n                                        </Annotations>\n\n                                    </ZoomableGroup>\n                                </ComposableMap>\n                            )}\n                        </Motion>\n                    }\n                </ContainerDimensions>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleInjectData: (data) => { dispatch(actions.setUser(data)) },\n        handleChangeTab: (data) => { dispatch(actions.changeTab(data)) },\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) }\n    };\n};\n\nexport default connect(null, mapDispatchProps)(AnimatedMap);\n"]},"metadata":{},"sourceType":"module"}