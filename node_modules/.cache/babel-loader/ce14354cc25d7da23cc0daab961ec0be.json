{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/scatterMethods.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport * as aggregation from \"../../utils\";\nvar colors = ['#22cccc', '#6699ff', '#aa77ff', '#ff8e06'];\nvar fontColor = 'rgba(255,255,255,.5)'; //https://plot.ly/javascript/line-and-scatter/\n\nvar trace1 = {\n  x: [1, 2, 3, 4, 5],\n  y: [1, 6, 0, 0, 1],\n  mode: 'markers+text',\n  type: 'scatter',\n  name: 'Team A',\n  text: ['Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet'],\n  textfont: {\n    color: fontColor,\n    size: 10\n  },\n  textposition: 'bottom center',\n  marker: {\n    size: 8,\n    color: colors[0]\n  }\n};\nvar trace2 = {\n  x: [1.5, 2.5, 3.5, 4.5, 5.5],\n  y: [4, 0, 0, 1, 4],\n  mode: 'markers+text',\n  type: 'scatter',\n  name: 'Team B',\n  text: ['RegisterClient', 'RegisterClient', 'RegisterClient', 'RegisterClient', 'RegisterClient'],\n  textfont: {\n    color: fontColor,\n    size: 10\n  },\n  textposition: 'bottom center',\n  marker: {\n    size: 8,\n    color: colors[1]\n  }\n};\nvar trace3 = {\n  x: [1.2, 1.5, 4.5, 1.5, 2.5],\n  y: [0, 0, 7, 0, 0],\n  mode: 'markers+text',\n  type: 'scatter',\n  name: 'Team C',\n  text: ['Location Verify', 'Location Verify', 'Location Verify', 'Location Verify', 'Location Verify'],\n  textfont: {\n    color: fontColor,\n    size: 10\n  },\n  textposition: 'bottom center',\n  marker: {\n    size: 10,\n    color: colors[2]\n  }\n};\nvar data = [trace1, trace2, trace3];\nvar layout = {\n  xaxis: {\n    range: [0.75, 5.25]\n  },\n  yaxis: {\n    range: [0, 8]\n  },\n  title: 'Data Labels Hover'\n};\nvar _self = null;\n\nvar ScatterMethods =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScatterMethods, _React$Component);\n\n  function ScatterMethods() {\n    var _this;\n\n    _classCallCheck(this, ScatterMethods);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScatterMethods).call(this));\n    _this.state = {\n      scatterData: data\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(ScatterMethods, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      //this.setState({vWidth:nextProps.size.width, vHeight:nextProps.size.height})\n      if (nextProps.data && nextProps.data.methodCall) {\n        var dataComp = [];\n        var methodCounts = [];\n        var mthData = nextProps.data.methodCall;\n        var groupData = aggregation.groupBy(mthData, 'dev');\n        console.log('result is ....method call counts=', groupData);\n        var keys = Object.keys(groupData);\n        keys.map(function (key, i) {\n          var item = {\n            x: [],\n            y: [],\n            mode: 'markers',\n            type: 'scatter',\n            name: key,\n            text: [],\n            textfont: {\n              color: '#cccccc',\n              size: 10\n            },\n            textposition: i % 2 === 0 ? 'bottom center' : 'top center',\n            marker: {\n              size: 8,\n              color: colors[i]\n            }\n          };\n          var methodItem = {};\n          var groupTime = [];\n          groupData[key].map(function (timeKey) {\n            //console.log('time data ... 999 888 ', timeData)\n            item.x.push(timeKey.time);\n            item.y.push(timeKey.reqs);\n            item.text.push(timeKey.dev);\n          });\n          dataComp.push(item);\n          console.log('get props dataComp ----', dataComp);\n        });\n        this.setState({\n          scatterData: dataComp,\n          methodCounts: methodCounts\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height; //console.log('size me == ', width, height)\n\n      return React.createElement(Plot, {\n        style: {\n          backgroundColor: 'transparent',\n          overflow: 'hidden',\n          width: width,\n          height: height\n        },\n        data: this.state.scatterData,\n        layout: {\n          paper_bgcolor: 'transparent',\n          plot_bgcolor: 'transparent',\n          xaxis: {\n            showgrid: false,\n            zeroline: true,\n            showline: true,\n            mirror: 'ticks',\n            gridcolor: 'rgba(255,255,255,.05)',\n            gridwidth: 1,\n            zerolinecolor: 'rgba(255,255,255,0)',\n            zerolinewidth: 1,\n            linecolor: 'rgba(255,255,255,.2)',\n            linewidth: 1,\n            color: 'rgba(255,255,255,.4)',\n            domain: [0, 1]\n          },\n          yaxis: {\n            showgrid: true,\n            zeroline: false,\n            showline: true,\n            mirror: 'ticks',\n            ticklen: 3,\n            tickcolor: 'rgba(0,0,0,0)',\n            gridcolor: 'rgba(255,255,255,.05)',\n            gridwidth: 1,\n            zerolinecolor: 'rgba(255,255,255,0)',\n            zerolinewidth: 1,\n            linecolor: 'rgba(255,255,255,.2)',\n            linewidth: 1,\n            color: 'rgba(255,255,255,.4)'\n          },\n          title: null,\n          width: this.props.width,\n          height: this.props.height,\n          margin: this.props.margin,\n          showlegend: this.props.showLegend,\n          displayModeBar: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ScatterMethods;\n}(React.Component);\n\nScatterMethods.defaultProps = {\n  margin: {\n    l: 40,\n    r: 20,\n    b: 20,\n    t: 5,\n    pad: 0\n  },\n  marginRight: 0,\n  showLegend: false,\n  width: 360,\n  height: 220\n};\nexport default ScatterMethods;","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/scatterMethods.js"],"names":["React","Plot","aggregation","colors","fontColor","trace1","x","y","mode","type","name","text","textfont","color","size","textposition","marker","trace2","trace3","data","layout","xaxis","range","yaxis","title","_self","ScatterMethods","state","scatterData","nextProps","methodCall","dataComp","methodCounts","mthData","groupData","groupBy","console","log","keys","Object","map","key","i","item","methodItem","groupTime","timeKey","push","time","reqs","dev","setState","props","width","height","backgroundColor","overflow","paper_bgcolor","plot_bgcolor","showgrid","zeroline","showline","mirror","gridcolor","gridwidth","zerolinecolor","zerolinewidth","linecolor","linewidth","domain","ticklen","tickcolor","margin","showlegend","showLegend","displayModeBar","Component","defaultProps","l","r","b","t","pad","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport * as aggregation from \"../../utils\";\n\n\nvar colors = ['#22cccc', '#6699ff','#aa77ff', '#ff8e06' ];\nvar fontColor = 'rgba(255,255,255,.5)' ;\n//https://plot.ly/javascript/line-and-scatter/\nvar trace1 = {\n    x: [1, 2, 3, 4, 5],\n    y: [1, 6, 0, 0, 1],\n    mode: 'markers+text',\n    type: 'scatter',\n    name: 'Team A',\n    text: ['Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet', 'Find Cloudlet'],\n    textfont : {\n        color:fontColor,\n        size:10\n    },\n    textposition: 'bottom center',\n    marker: { size: 8, color:colors[0] },\n\n};\n\nvar trace2 = {\n    x: [1.5, 2.5, 3.5, 4.5, 5.5],\n    y: [4, 0, 0, 1, 4],\n    mode: 'markers+text',\n    type: 'scatter',\n    name: 'Team B',\n    text: ['RegisterClient', 'RegisterClient', 'RegisterClient', 'RegisterClient', 'RegisterClient'],\n    textfont : {\n        color:fontColor,\n        size:10\n    },\n    textposition: 'bottom center',\n    marker: { size: 8, color:colors[1] },\n\n};\nvar trace3 = {\n    x: [1.2, 1.5, 4.5, 1.5, 2.5],\n    y: [0, 0, 7, 0, 0],\n    mode: 'markers+text',\n    type: 'scatter',\n    name: 'Team C',\n    text: ['Location Verify', 'Location Verify', 'Location Verify', 'Location Verify', 'Location Verify'],\n    textfont : {\n        color:fontColor,\n        size:10\n    },\n    textposition: 'bottom center',\n    marker: { size: 10, color:colors[2] },\n\n};\n\nvar data = [ trace1, trace2, trace3 ];\n\nvar layout = {\n    xaxis: {\n        range: [ 0.75, 5.25 ]\n    },\n    yaxis: {\n        range: [0, 8]\n    },\n    title:'Data Labels Hover'\n};\n\nlet _self = null;\nclass ScatterMethods extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            scatterData:data\n        }\n        _self = this;\n\n    }\n    componentWillReceiveProps(nextProps) {\n\n            //this.setState({vWidth:nextProps.size.width, vHeight:nextProps.size.height})\n        if(nextProps.data && nextProps.data.methodCall) {\n            let dataComp = [];\n            let methodCounts = [];\n            let mthData = nextProps.data.methodCall;\n            let groupData = aggregation.groupBy(mthData, 'dev')\n            console.log('result is ....method call counts=', groupData)\n            let keys = Object.keys(groupData);\n            keys.map((key,i) => {\n                let item = {\n                    x: [],\n                    y: [],\n                    mode: 'markers',\n                    type: 'scatter',\n                    name: key,\n                    text: [],\n                    textfont : {\n                        color:'#cccccc',\n                        size:10\n                    },\n                    textposition: (i%2 === 0)?'bottom center':'top center',\n                    marker: { size: 8, color:colors[i] }\n                }\n                let methodItem = {};\n                let groupTime = [];\n                groupData[key].map((timeKey) => {\n                    //console.log('time data ... 999 888 ', timeData)\n\n                    item.x.push(timeKey.time)\n                    item.y.push(timeKey.reqs)\n                    item.text.push(timeKey.dev)\n\n                })\n\n\n\n                dataComp.push(item)\n                console.log('get props dataComp ----', dataComp)\n\n            })\n            this.setState({scatterData:dataComp, methodCounts:methodCounts})\n\n        }\n    }\n    render() {\n        const { width, height } = this.props;\n        //console.log('size me == ', width, height)\n        return (\n\n            <Plot style={{backgroundColor:'transparent', overflow:'hidden', width:width, height:height}}\n                data={this.state.scatterData}\n                layout={\n                    {\n                        paper_bgcolor: 'transparent',\n                        plot_bgcolor: 'transparent',\n                        xaxis: {\n                            showgrid: false,\n                            zeroline: true,\n                            showline: true,\n                            mirror: 'ticks',\n                            gridcolor: 'rgba(255,255,255,.05)',\n                            gridwidth: 1,\n                            zerolinecolor: 'rgba(255,255,255,0)',\n                            zerolinewidth: 1,\n                            linecolor: 'rgba(255,255,255,.2)',\n                            linewidth: 1,\n                            color: 'rgba(255,255,255,.4)',\n                            domain: [0, 1]\n                        },\n                        yaxis: {\n                            showgrid: true,\n                            zeroline: false,\n                            showline: true,\n                            mirror: 'ticks',\n                            ticklen: 3,\n                            tickcolor: 'rgba(0,0,0,0)',\n                            gridcolor: 'rgba(255,255,255,.05)',\n                            gridwidth:1,\n                            zerolinecolor: 'rgba(255,255,255,0)',\n                            zerolinewidth: 1,\n                            linecolor: 'rgba(255,255,255,.2)',\n                            linewidth: 1,\n                            color: 'rgba(255,255,255,.4)'\n                        },\n\n                        title:null,\n                        width:this.props.width,\n                        height:this.props.height,\n                        margin:this.props.margin,\n                        showlegend: this.props.showLegend,\n                        displayModeBar: false\n                    }\n                }\n            />\n\n        );\n    }\n}\nScatterMethods.defaultProps = {\n    margin: {\n        l: 40,\n        r: 20,\n        b: 20,\n        t: 5,\n        pad: 0\n    },\n    marginRight:0,\n    showLegend:false,\n    width: 360,\n    height: 220\n}\nexport default ScatterMethods;\n"]},"metadata":{},"sourceType":"module"}