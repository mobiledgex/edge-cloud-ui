{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/legend.js\";\nimport React from 'react';\nimport { Grid, List } from 'semantic-ui-react';\nimport * as d3 from 'd3';\nimport MaterialIcon, { colorPalette } from 'material-icons-react';\nvar itemContents = [{\n  label: 'Critical'\n}, {\n  label: 'Major'\n}, {\n  label: 'Minor'\n}, {\n  label: 'Warning'\n}, {\n  label: 'Normal'\n}];\n\nvar ChildrenItem = function ChildrenItem(props) {\n  return itemContents.map(function (obj, i) {\n    return React.createElement(List.Item, {\n      id: 'itm_' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(MaterialIcon, {\n      icon: props[obj.label] === true ? 'check_circle_outline' : 'radio_button_unchecked',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(List.Content, {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, obj.label));\n  });\n};\n\nvar Legend =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Legend, _React$Component);\n\n  function Legend() {\n    var _this;\n\n    _classCallCheck(this, Legend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this));\n\n    _this.childrenItem = function (states) {\n      return itemContents.map(function (obj, i) {\n        return React.createElement(List.Item, {\n          id: 'itm_' + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(MaterialIcon, {\n          icon: states['itm_' + i],\n          size: 20,\n          color: states.iconColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, obj.label));\n      });\n    };\n\n    _this.selectedIcon = 'check_circle_outline';\n    _this.noneSelectIcon = 'radio_button_unchecked';\n    _this.state = {\n      Critical: true,\n      Major: true,\n      Minor: true,\n      Warning: true,\n      Normal: true,\n      itm_0: _this.selectedIcon,\n      itm_1: _this.selectedIcon,\n      itm_2: _this.selectedIcon,\n      itm_3: _this.selectedIcon,\n      itm_4: _this.selectedIcon,\n      itm_5: _this.selectedIcon,\n      iconColor: 'rgba(255,255,255,1)'\n    };\n    _this.stack = [];\n    return _this;\n  }\n\n  _createClass(Legend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      d3.svg('/assets/worldmap/console_legend_health.svg').then(function (svg) {\n        var gElement = d3.select(svg).select('svg');\n        d3.select('#legendCont').node().append(gElement.node());\n      });\n    }\n  }, {\n    key: \"handleClickItem\",\n    value: function handleClickItem(item) {\n      console.log('clicked item = ', item.target.innerText);\n      var label = item.target.innerText;\n\n      switch (label) {\n        case 'Critical':\n          this.setState({\n            Critical: !this.state.Critical\n          });\n          break;\n\n        case 'Major':\n          this.setState({\n            Major: !this.state.Major\n          });\n          break;\n\n        case 'Minor':\n          this.setState({\n            Minor: !this.state.Minor\n          });\n          break;\n\n        case 'Warning':\n          this.setState({\n            Warning: !this.state.Warning\n          });\n          break;\n\n        case 'Normal':\n          this.setState({\n            Normal: !this.state.Normal\n          });\n          break;\n      }\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        id: \"legendEl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"legendCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(List, {\n        animated: true,\n        className: \"worldmap_legend\",\n        onClick: this.handleClickItem.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ChildrenItem, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Legend;\n}(React.Component);\n\nexport { Legend as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/libs/simpleMaps/with-react-motion/legend.js"],"names":["React","Grid","List","d3","MaterialIcon","colorPalette","itemContents","label","ChildrenItem","props","map","obj","i","Legend","childrenItem","states","iconColor","selectedIcon","noneSelectIcon","state","Critical","Major","Minor","Warning","Normal","itm_0","itm_1","itm_2","itm_3","itm_4","itm_5","stack","svg","then","gElement","select","node","append","item","console","log","target","innerText","setState","forceUpdate","handleClickItem","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, List } from 'semantic-ui-react'\nimport * as d3 from 'd3';\nimport MaterialIcon, {colorPalette} from 'material-icons-react';\n\n\nconst itemContents = [{label:'Critical'},{label:'Major'},{label:'Minor'},{label:'Warning'},{label:'Normal'}]\nconst ChildrenItem = (props) => (\n    itemContents.map((obj, i) => (\n        <List.Item id={'itm_'+i}>\n            <List.Content>\n                <MaterialIcon icon={(props[obj.label] === true)?'check_circle_outline':'radio_button_unchecked'} />\n            </List.Content>\n            <List.Content className='label'>\n                {obj.label}\n            </List.Content>\n        </List.Item>\n    ))\n\n)\nexport default class Legend extends React.Component {\n    constructor() {\n        super();\n        this.selectedIcon = 'check_circle_outline';\n        this.noneSelectIcon = 'radio_button_unchecked';\n        this.state = {\n            Critical:true,\n            Major:true,\n            Minor:true,\n            Warning:true,\n            Normal:true,\n            itm_0:this.selectedIcon,\n            itm_1:this.selectedIcon,\n            itm_2:this.selectedIcon,\n            itm_3:this.selectedIcon,\n            itm_4:this.selectedIcon,\n            itm_5:this.selectedIcon,\n            iconColor:'rgba(255,255,255,1)'\n        }\n\n        this.stack = [];\n    }\n    componentDidMount(){\n\n        d3.svg('/assets/worldmap/console_legend_health.svg').then((svg) => {\n            const gElement = d3.select(svg).select('svg');\n            d3.select('#legendCont').node().append(gElement.node());\n        });\n\n\n    }\n    handleClickItem(item) {\n        console.log('clicked item = ', item.target.innerText)\n        let label = item.target.innerText;\n\n        switch(label) {\n            case 'Critical': this.setState({Critical:!this.state.Critical}); break;\n            case 'Major': this.setState({Major:!this.state.Major}); break;\n            case 'Minor': this.setState({Minor:!this.state.Minor}); break;\n            case 'Warning': this.setState({Warning:!this.state.Warning}); break;\n            case 'Normal': this.setState({Normal:!this.state.Normal}); break;\n        }\n\n        this.forceUpdate();\n\n\n    }\n    childrenItem=(states)=>(\n        itemContents.map((obj, i) => (\n            <List.Item id={'itm_'+i}>\n                <List.Content>\n                    <MaterialIcon icon={states['itm_'+i]} size={20} color={states.iconColor} />\n                </List.Content>\n                <List.Content>\n                    {obj.label}\n                </List.Content>\n            </List.Item>\n        ))\n\n    )\n    render(){\n        return (\n            <Grid id=\"legendEl\">\n                <Grid.Row>\n                    <div id=\"legendCont\"></div>\n                    <List animated className='worldmap_legend' onClick={this.handleClickItem.bind(this)}>\n                        <ChildrenItem {...this.state}></ChildrenItem>\n                    </List>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}