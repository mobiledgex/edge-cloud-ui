{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/registryFlavorViewer.js\";\nimport React from 'react';\nimport { Header, Button, Table, Icon, Input, Tab, Item } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './styles.css';\nimport _ from \"lodash\";\nimport * as reducer from '../utils';\nimport * as services from '../services/service_compute_service';\nimport SiteFourCreateFormFlavorDefault from \"./siteFourCreateFormFlavorDefault\";\nimport { withRouter } from \"react-router-dom\";\nvar layout = [{\n  \"w\": 19,\n  \"h\": 20,\n  \"x\": 0,\n  \"y\": 0,\n  \"i\": \"0\",\n  \"minW\": 5,\n  \"minH\": 5,\n  \"moved\": false,\n  \"static\": false,\n  \"title\": \"Developer\"\n}];\nvar _self = null;\nvar panes = [{\n  menuItem: 'Flavor Deployment',\n  render: function render(props) {\n    return React.createElement(Tab.Pane, {\n      style: {\n        overflow: 'auto'\n      },\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(SiteFourCreateFormFlavorDefault, {\n      data: props,\n      pId: 0,\n      getUserRole: props.userrole,\n      gotoUrl: props.gotoUrl,\n      toggleSubmit: props.toggleSubmit,\n      validError: props.error,\n      autoClusterDisable: props.autoClusterDisable,\n      onSubmit: props.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n}];\n\nvar RegistryFlavorViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistryFlavorViewer, _React$Component);\n\n  function RegistryFlavorViewer(props) {\n    var _this;\n\n    _classCallCheck(this, RegistryFlavorViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistryFlavorViewer).call(this, props));\n\n    _this.receiveResult = function (result, body) {\n      _self.props.handleLoadingSpinner(false);\n\n      if (result.data.error) {\n        _this.props.handleAlertInfo('error', result.data.error);\n\n        return;\n      } else {\n        _this.props.handleAlertInfo('success', 'Flavor ' + body.params.flavor.key.name + ' created successfully.');\n\n        _this.gotoUrl('submit');\n      }\n    };\n\n    _this.receiveStatusData = function (result) {\n      var toArray = null;\n      var toJson = null;\n      toArray = result.data.split('\\n');\n      toArray.pop();\n      toJson = toArray.map(function (str) {\n        return JSON.parse(str);\n      });\n      console.log(\"toJsontoJson\", toJson);\n      toJson.map(function (item) {\n        if (item.result && item.result.code == 400) {\n          console.log(\"item.result\", item.result.message);\n\n          _this.props.handleAlertInfo('error', item.result.message);\n        }\n      });\n    };\n\n    _self = _assertThisInitialized(_this);\n\n    var layout = _this.generateLayout();\n\n    _this.state = {\n      layout: layout,\n      open: false,\n      openAdd: false,\n      openDetail: false,\n      dimmer: false,\n      activeItem: '',\n      dummyData: [],\n      detailViewData: null,\n      selected: {},\n      openUser: false,\n      orgData: {},\n      selectUse: null,\n      resultData: null,\n      cloudlets: [],\n      operators: [],\n      clustinst: [],\n      apps: [],\n      versions: [],\n      toggleSubmit: false,\n      validateError: [],\n      autoClusterDisable: false,\n      keysData: [{\n        'Region': {\n          label: 'Region',\n          type: 'RenderSelect',\n          necessary: true,\n          tip: 'Select region where you want to deploy.',\n          active: true,\n          items: []\n        },\n        'FlavorName': {\n          label: 'Flavor Name',\n          type: 'RenderInput',\n          necessary: true,\n          tip: 'Name of the flavor',\n          active: true\n        },\n        'RAM': {\n          label: 'RAM Size',\n          type: 'renderInputNum',\n          unit: 'MB',\n          necessary: true,\n          tip: 'RAM in megabytes',\n          active: true\n        },\n        'vCPUs': {\n          label: 'Number of vCPUs',\n          type: 'renderInputNum',\n          necessary: true,\n          tip: 'Number of virtual CPUs',\n          active: true\n        },\n        'Disk': {\n          label: 'Disk Space',\n          type: 'renderInputNum',\n          unit: 'GB',\n          necessary: true,\n          tip: 'Amount of disk space in gigabytes',\n          active: true\n        }\n      }, {}],\n      fakeData: [{\n        'Region': 'US',\n        'FlavorName': '',\n        'RAM': '',\n        'vCPUs': '',\n        'Disk': ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(RegistryFlavorViewer, [{\n    key: \"gotoUrl\",\n    value: function gotoUrl() {\n      var pg = 'pg=3';\n\n      _self.props.history.push({\n        pathname: '/site4',\n        search: pg\n      });\n\n      _self.props.history.location.search = pg; //_self.props.handleChangeSite({mainPath:'/site4', subPath: pg})\n    }\n  }, {\n    key: \"generateDOM\",\n    value: function generateDOM(open, dimmer, data, keysData, hideHeader) {\n      var _this2 = this;\n\n      var panelParams = {\n        data: data,\n        keys: keysData,\n        userrole: localStorage.selectRole\n      };\n      return layout.map(function (item, i) {\n        return i === 0 ? React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Tab, Object.assign({\n          className: \"grid_tabs\",\n          menu: {\n            secondary: true,\n            pointing: true,\n            inverted: true,\n            attached: false,\n            tabular: false\n          },\n          panes: panes\n        }, panelParams, {\n          gotoUrl: _this2.gotoUrl,\n          toggleSubmit: _this2.state.toggleSubmit,\n          error: _this2.state.validateError,\n          autoClusterDisable: _this2.state.autoClusterDisable,\n          onSubmit: _this2.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })))) : React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"generateLayout\",\n    value: function generateLayout() {\n      var p = this.props;\n      return layout;\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout) {//this.props.onLayoutChange(layout);\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      _self.props.handleSubmitInfo('submitAction');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.accountInfo) {\n        this.setState({\n          dimmer: 'blurring',\n          open: true\n        });\n      }\n\n      if (nextProps.devData.length > 1) {\n        this.setState({\n          dummyData: nextProps.devData,\n          resultData: !this.state.resultData ? nextProps.devData : this.state.resultData\n        });\n      } else {\n        this.setState({\n          dummyData: this.state.fakeData,\n          resultData: !this.state.resultData ? nextProps.devData : this.state.resultData\n        });\n      }\n\n      if (nextProps.regionInfo.region.length) {\n        var assObj = Object.assign([], this.state.keysData);\n        assObj[0].Region.items = nextProps.regionInfo.region;\n      }\n\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      this.setState({\n        toggleSubmit: false\n      });\n\n      if (nextProps.submitValues && !this.state.toggleSubmit) {\n        var flavors = ['Region', 'FlavorName', 'RAM', 'vCPUs', 'Disk'];\n        var error = [];\n        flavors.map(function (item) {\n          if (!nextProps.validateValue[item]) {\n            error.push(item);\n          }\n        });\n\n        if (nextProps.formAppInst.submitSucceeded && error.length == 0) {\n          var submitData = nextProps.submitValues;\n          this.setState({\n            toggleSubmit: true,\n            validateError: error\n          });\n          this.props.handleLoadingSpinner(true);\n          services.createNewFlavor('CreateFlavor', {\n            params: submitData,\n            token: store ? store.userToken : 'null'\n          }, this.receiveResult);\n        } else {\n          this.setState({\n            validateError: error,\n            toggleSubmit: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          open = _this$state.open,\n          dimmer = _this$state.dimmer,\n          dummyData = _this$state.dummyData;\n      var hiddenKeys = this.props.hiddenKeys;\n      return React.createElement(\"div\", {\n        className: \"regis_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({\n        draggableHandle: true,\n        layout: this.state.layout,\n        onLayoutChange: this.onLayoutChange\n      }, this.props, {\n        useCSSTransforms: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), this.generateDOM(open, dimmer, dummyData, this.state.keysData, hiddenKeys)));\n    }\n  }]);\n\n  return RegistryFlavorViewer;\n}(React.Component);\n\nvar createFormat = function createFormat(data) {\n  return {\n    \"region\": data['Region'],\n    \"flavor\": {\n      \"key\": {\n        \"name\": data['FlavorName']\n      },\n      \"ram\": Number(data['RAM']),\n      \"vcpus\": Number(data['vCPUs']),\n      \"disk\": Number(data['Disk'])\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var account = state.registryAccount.account;\n  var accountInfo = account ? account + Math.random() * 10000 : null;\n  var submitVal = null;\n  var validateValue = null;\n\n  if (state.form.createAppFormDefault && state.form.createAppFormDefault.values && state.form.createAppFormDefault.submitSucceeded) {\n    var enableValue = reducer.filterDeleteKey(state.form.createAppFormDefault.values, 'Edit');\n    submitVal = createFormat(enableValue);\n    validateValue = state.form.createAppFormDefault.values;\n  }\n\n  var formAppInst = state.form.createAppFormDefault ? {\n    values: state.form.createAppFormDefault.values,\n    submitSucceeded: state.form.createAppFormDefault.submitSucceeded\n  } : {};\n  var regionInfo = state.regionInfo ? state.regionInfo : null;\n  return {\n    accountInfo: accountInfo,\n    userToken: state.user.userToken ? state.userToken : null,\n    submitValues: submitVal,\n    selectOrg: state.selectOrg.org ? state.selectOrg.org : null,\n    submitData: state.form ? state.form : null,\n    appLaunch: state.appLaunch ? state.appLaunch.data : null,\n    validateValue: validateValue,\n    formAppInst: formAppInst,\n    regionInfo: regionInfo\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    },\n    handleSubmitInfo: function handleSubmitInfo(data) {\n      dispatch(actions.submitInfo(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistryFlavorViewer));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/registryFlavorViewer.js"],"names":["React","Header","Button","Table","Icon","Input","Tab","Item","connect","actions","_","reducer","services","SiteFourCreateFormFlavorDefault","withRouter","layout","_self","panes","menuItem","render","props","overflow","userrole","gotoUrl","toggleSubmit","error","autoClusterDisable","onSubmit","RegistryFlavorViewer","receiveResult","result","body","handleLoadingSpinner","data","handleAlertInfo","params","flavor","key","name","receiveStatusData","toArray","toJson","split","pop","map","str","JSON","parse","console","log","item","code","message","generateLayout","state","open","openAdd","openDetail","dimmer","activeItem","dummyData","detailViewData","selected","openUser","orgData","selectUse","resultData","cloudlets","operators","clustinst","apps","versions","validateError","keysData","label","type","necessary","tip","active","items","unit","fakeData","pg","history","push","pathname","search","location","hideHeader","panelParams","keys","localStorage","selectRole","i","secondary","pointing","inverted","attached","tabular","p","handleSubmitInfo","nextProps","nextContext","accountInfo","setState","devData","length","regionInfo","region","assObj","Object","assign","Region","store","PROJECT_INIT","submitValues","flavors","validateValue","formAppInst","submitSucceeded","submitData","createNewFlavor","token","userToken","hiddenKeys","onLayoutChange","generateDOM","Component","createFormat","Number","mapStateToProps","account","registryAccount","Math","random","submitVal","form","createAppFormDefault","values","enableValue","filterDeleteKey","user","selectOrg","org","appLaunch","mapDispatchProps","dispatch","handleChangeSite","changeSite","loadingSpinner","mode","msg","alertInfo","submitInfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Header, Button, Table, Icon, Input, Tab, Item} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './styles.css';\nimport _ from \"lodash\";\nimport * as reducer from '../utils'\nimport * as services from '../services/service_compute_service';\nimport SiteFourCreateFormFlavorDefault from \"./siteFourCreateFormFlavorDefault\";\nimport {withRouter} from \"react-router-dom\";\n\nvar layout = [\n    {\"w\":19,\"h\":20,\"x\":0,\"y\":0,\"i\":\"0\",\"minW\":5,\"minH\":5,\"moved\":false,\"static\":false, \"title\":\"Developer\"}\n]\nlet _self = null;\n\nconst panes = [\n    { menuItem: 'Flavor Deployment', render: (props) => <Tab.Pane style={{overflow:'auto'}} attached={false}><SiteFourCreateFormFlavorDefault data={props} pId={0} getUserRole={props.userrole} gotoUrl={props.gotoUrl} toggleSubmit={props.toggleSubmit} validError={props.error} autoClusterDisable={props.autoClusterDisable} onSubmit={props.onSubmit}/></Tab.Pane> }\n]\nclass RegistryFlavorViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        const layout = this.generateLayout();\n        this.state = {\n            layout,\n            open: false,\n            openAdd: false,\n            openDetail:false,\n            dimmer:false,\n            activeItem:'',\n            dummyData : [],\n            detailViewData:null,\n            selected:{},\n            openUser:false,\n            orgData:{},\n            selectUse:null,\n            resultData:null,\n            cloudlets:[],\n            operators:[],\n            clustinst:[],\n            apps:[],\n            versions:[],\n            toggleSubmit:false,\n            validateError:[],\n            autoClusterDisable:false,\n            keysData:[\n                {\n                    'Region':{label:'Region', type:'RenderSelect', necessary:true, tip:'Select region where you want to deploy.', active:true, items:[]},\n                    'FlavorName':{label:'Flavor Name', type:'RenderInput', necessary:true, tip:'Name of the flavor', active:true},\n                    'RAM':{label:'RAM Size', type:'renderInputNum', unit:'MB', necessary:true, tip:'RAM in megabytes', active:true},\n                    'vCPUs':{label:'Number of vCPUs', type:'renderInputNum', necessary:true, tip:'Number of virtual CPUs', active:true},\n                    'Disk':{label:'Disk Space', type:'renderInputNum', unit:'GB', necessary:true, tip:'Amount of disk space in gigabytes', active:true}\n                },\n                {\n                    \n                }\n            ],\n            fakeData:[\n                {\n                    'Region':'US',\n                    'FlavorName':'',\n                    'RAM':'',\n                    'vCPUs':'',\n                    'Disk':''\n                }\n            ]\n\n\n        };\n\n    }\n\n    \n    receiveResult = (result, body) => {\n        _self.props.handleLoadingSpinner(false);\n        if(result.data.error) {\n            this.props.handleAlertInfo('error',result.data.error)\n            return;\n        } else {\n            this.props.handleAlertInfo('success','Flavor '+body.params.flavor.key.name+' created successfully.')\n            this.gotoUrl('submit');\n        }\n    }\n\n    gotoUrl() {\n        let pg = 'pg=3'\n        _self.props.history.push({\n            pathname: '/site4',\n            search: pg\n        });\n        _self.props.history.location.search = pg;\n        //_self.props.handleChangeSite({mainPath:'/site4', subPath: pg})\n    }\n\n    generateDOM(open, dimmer, data, keysData, hideHeader) {\n\n        let panelParams = {data:data, keys:keysData, userrole:localStorage.selectRole}\n\n        return layout.map((item, i) => (\n\n            (i === 0)?\n                <div className=\"round_panel\" key={i}>\n                    <div className=\"grid_table\">\n\n                        <Tab className=\"grid_tabs\" menu={{ secondary: true, pointing: true, inverted: true, attached: false, tabular: false }} panes={panes}{...panelParams} gotoUrl={this.gotoUrl} toggleSubmit={this.state.toggleSubmit} error={this.state.validateError} autoClusterDisable={this.state.autoClusterDisable} onSubmit={this.onSubmit} />\n\n                    </div>\n                </div>\n                :\n                <div className=\"round_panel\" key={i}>\n                    \n                </div>\n\n\n        ))\n    }\n\n    generateLayout() {\n        const p = this.props;\n\n        return layout\n    }\n\n    onLayoutChange(layout) {\n        //this.props.onLayoutChange(layout);\n    }\n\n    onSubmit() {\n        _self.props.handleSubmitInfo('submitAction')\n    }\n\n\n    componentDidMount() {\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.accountInfo){\n            this.setState({ dimmer:'blurring', open: true })\n        }\n        if(nextProps.devData.length > 1) {\n            this.setState({dummyData:nextProps.devData, resultData:(!this.state.resultData)?nextProps.devData:this.state.resultData})\n        } else {\n            this.setState({dummyData:this.state.fakeData, resultData:(!this.state.resultData)?nextProps.devData:this.state.resultData})\n        }\n        if(nextProps.regionInfo.region.length){\n            let assObj = Object.assign([], this.state.keysData);\n            assObj[0].Region.items = nextProps.regionInfo.region;\n        }\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        this.setState({toggleSubmit:false});\n        if(nextProps.submitValues && !this.state.toggleSubmit) {\n            \n            const flavors = ['Region','FlavorName','RAM','vCPUs','Disk']\n\n            let error = [];\n            flavors.map((item) => {\n                if(!nextProps.validateValue[item]) {\n                    error.push(item)\n                }\n            })\n\n            if(nextProps.formAppInst.submitSucceeded && error.length == 0){\n                let submitData = nextProps.submitValues\n                this.setState({toggleSubmit:true,validateError:error});\n                this.props.handleLoadingSpinner(true);\n                services.createNewFlavor('CreateFlavor',{params:submitData, token:store ? store.userToken : 'null'}, this.receiveResult)\n            } else {\n                this.setState({validateError:error,toggleSubmit:true})\n            }\n            \n        }\n\n    }\n\n    componentWillUnmount() {\n    }\n\n    receiveStatusData = (result) => {\n        let toArray = null;\n        let toJson = null;\n        toArray = result.data.split('\\n')\n        toArray.pop();\n        toJson = toArray.map((str)=>(JSON.parse(str)))\n        console.log(\"toJsontoJson\",toJson)\n        toJson.map((item) => {\n            if(item.result && item.result.code == 400){\n                console.log(\"item.result\",item.result.message)\n                this.props.handleAlertInfo('error',item.result.message)\n            }\n        })\n    }\n\n    render() {\n        const { open, dimmer, dummyData } = this.state;\n        const { hiddenKeys } = this.props;\n        return (\n            <div className=\"regis_container\">\n                <div\n                    draggableHandle\n                    layout={this.state.layout}\n                    onLayoutChange={this.onLayoutChange}\n                    {...this.props}\n                    useCSSTransforms={false}\n                >\n                    {this.generateDOM(open, dimmer, dummyData, this.state.keysData, hiddenKeys)}\n                </div>\n                \n            </div>\n\n        );\n    }\n}\n\nconst createFormat = (data) => (\n    {\n        \"region\":data['Region'],\n        \"flavor\":{\n            \"key\":{\"name\":data['FlavorName']},\n            \"ram\":Number(data['RAM']),\n            \"vcpus\":Number(data['vCPUs']),\n            \"disk\":Number(data['Disk'])\n        }\n    }\n)\nconst mapStateToProps = (state) => {\n    let account = state.registryAccount.account;\n    let accountInfo = account ? account + Math.random()*10000 : null;\n    let submitVal = null;\n    let validateValue = null;\n\n    if(state.form.createAppFormDefault && state.form.createAppFormDefault.values && state.form.createAppFormDefault.submitSucceeded) {\n        let enableValue = reducer.filterDeleteKey(state.form.createAppFormDefault.values, 'Edit')\n        submitVal = createFormat(enableValue);\n        validateValue = state.form.createAppFormDefault.values;\n    }\n        \n    let formAppInst= state.form.createAppFormDefault\n        ? {\n            values: state.form.createAppFormDefault.values,\n            submitSucceeded: state.form.createAppFormDefault.submitSucceeded\n        }\n        : {};\n    let regionInfo = (state.regionInfo)?state.regionInfo:null;\n    return {\n        accountInfo,\n        userToken : (state.user.userToken) ? state.userToken: null,\n        submitValues: submitVal,\n        selectOrg : state.selectOrg.org?state.selectOrg.org:null,\n        submitData : state.form?state.form : null,\n        appLaunch : state.appLaunch?state.appLaunch.data:null,\n        validateValue:validateValue,\n        formAppInst : formAppInst,\n        regionInfo: regionInfo\n    }\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))},\n        handleSubmitInfo: (data) => {dispatch(actions.submitInfo(data))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistryFlavorViewer));\n\n\n"]},"metadata":{},"sourceType":"module"}