{"ast":null,"code":"import _defineProperty from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/components/login/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Container, Button, Checkbox, Form, Label, Grid, Input } from 'semantic-ui-react';\nimport { Redirect } from 'react-router';\nimport * as moment from 'moment';\nimport UAParser from 'ua-parser-js'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions'; // alert\n\nimport Alert from 'react-s-alert'; // API\n\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings';\nimport * as serviceLogin from '../../services/service_login_api';\nimport RegistryUserForm from '../reduxForm/RegistryUserForm';\nimport RegistryResetForm from '../reduxForm/registryResetForm';\nimport * as service from \"../../services/service_compute_service\";\nimport * as ServiceLogin from '../../services/service_login_api';\nimport CustomContentAlert from './CustomContentAlert';\n/*\n\n */\n\nvar host = window.location.host;\nvar self = null;\nvar email = 'yourEmail@email.net';\n\nvar FormContainer = function FormContainer(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"User Login\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Username or Email\",\n    name: \"username\",\n    width: true,\n    ref: function ref(ipt) {\n      props.self.uid = ipt;\n    },\n    onChange: props.self.onChangeInput,\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        props.self.onSubmit();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    ref: function ref(ipt) {\n      props.self.pwd = ipt;\n    },\n    onChange: props.self.onChangeInput,\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        props.self.onSubmit();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"loginValidation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.login_danger), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.onSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Log In\"))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      fontStyle: 'italic',\n      textDecoration: 'underline',\n      cursor: 'pointer',\n      display: 'inline-block'\n    },\n    onClick: function onClick() {\n      return props.self.handleClickLogin('forgot');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Forgot Password?\")));\n};\n\nvar FormForgotPass = function FormForgotPass(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Reset your password\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"login-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Enter your email address and we will send you a link to reset your password.\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Enter your email address\",\n    name: \"email\",\n    width: true,\n    ref: function ref(ipt) {\n      props.self.email = ipt;\n    },\n    onChange: props.self.onChangeInput,\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        props.self.onSendEmail();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"loginValidation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.login_danger), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.onSendEmail();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Send Password Reset Email\"))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return props.self.onSendEmail('back');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Return to Log In\"))));\n};\n\nvar ForgotMessage = function ForgotMessage(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Reset your password\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"login-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Check your email for a link to reset your password. If it doesn\\u2019t appear within a few minutes, check your spam folder.\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self && props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self && props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.returnSignin();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Return to Sign In\"))));\n};\n\nvar ResetPassword = function ResetPassword(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Reset your password\")), React.createElement(RegistryResetForm, {\n    onSubmit: function onSubmit() {\n      return console.log('ProfileForm was submitted');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"By clicking SignUp, you agree to our \", React.createElement(\"a\", {\n    href: \"https://mobiledgex.com/terms-of-use\",\n    target: \"_blank\",\n    className: \"login-text\",\n    style: {\n      fontStyle: 'italic',\n      textDecoration: 'underline',\n      cursor: 'pointer',\n      color: \"rgba(255,255,255,.5)\",\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Terms of Use\"), \" and \", React.createElement(\"a\", {\n    href: \"https://www.mobiledgex.com/privacy-policy\",\n    target: \"_blank\",\n    className: \"login-text\",\n    style: {\n      fontStyle: 'italic',\n      textDecoration: 'underline',\n      cursor: 'pointer',\n      color: \"rgba(255,255,255,.5)\",\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Privacy Policy\"), \".\")));\n};\n\nvar FormResendVerify = function FormResendVerify(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Request a new verification email\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"login-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Enter your email address and we will send you a link to verify your email.\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Enter your email address\",\n    name: \"email\",\n    width: true,\n    ref: function ref(ipt) {\n      props.self.email = ipt;\n    },\n    onChange: props.self.onChangeInput,\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        props.self.onSendEmail('verify');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"loginValidation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, props.login_danger), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.onSendEmail('verify');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Send verify email\"))));\n};\n\nvar FormSignUpContainer = function FormSignUpContainer(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Create New Account\")), React.createElement(RegistryUserForm, {\n    onSubmit: function onSubmit(a, b) {\n      return console.log('20190906 ProfileForm was submitted', a, b);\n    },\n    userInfo: {\n      username: props.self.state.username,\n      email: props.self.state.email,\n      commitDone: props.self.state.commitDone\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"By clicking SignUp, you agree to our \", React.createElement(\"a\", {\n    href: \"https://mobiledgex.com/terms-of-use\",\n    target: \"_blank\",\n    className: \"login-text\",\n    style: {\n      fontStyle: 'italic',\n      textDecoration: 'underline',\n      cursor: 'pointer',\n      color: \"rgba(255,255,255,.5)\",\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Terms of Use\"), \" and \", React.createElement(\"a\", {\n    href: \"https://www.mobiledgex.com/privacy-policy\",\n    target: \"_blank\",\n    className: \"login-text\",\n    style: {\n      fontStyle: 'italic',\n      textDecoration: 'underline',\n      cursor: 'pointer',\n      color: \"rgba(255,255,255,.5)\",\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Privacy Policy\"), \".\")));\n};\n\nvar customerName = '';\nvar flag = true;\n\nvar SuccessMsg = function SuccessMsg(props) {\n  return React.createElement(Grid, {\n    className: \"signUpBD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, props.msg.indexOf('created') > -1 ? React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"User created\") : React.createElement(\"span\", {\n    className: \"title\",\n    onClick: function onClick() {\n      return console.log(props.msg);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, String(props.msg))), props.msg.indexOf('created') !== -1 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, props.self.state.resultMsg)), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-text\",\n    style: {\n      fontStyle: 'italic'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"If you verify your account, Sign in with your account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Fail to create your account. Please try Again.\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.handleClickLogin('signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Sign Up\"))))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onFocus: function onFocus() {\n      return props.self.onFocusHandle(true);\n    },\n    onfocusout: function onfocusout() {\n      return props.self.onFocusHandle(false);\n    },\n    onClick: function onClick() {\n      return props.self.handleClickLogin('login');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Log In\")))));\n};\n\nvar validate = function validate(values) {\n  var error = {};\n  error.email = '';\n  error.name = '';\n  var ema = values.email;\n  var nm = values.name;\n\n  if (values.email === undefined) {\n    ema = '';\n  }\n\n  if (values.name === undefined) {\n    nm = '';\n  }\n\n  if (ema.length < 4 && ema !== '') {\n    error.email = 'too short';\n  } // if(!ema.includes('@') && ema !== ''){\n  //     error.email= '@ not included';\n  // }\n\n\n  if (nm.length > 4) {//error.name= 'max 8 characters';\n  }\n\n  return error;\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.showAlert = function (resource) {\n      var verifyMessage = \"Thank you for signing up. Please verify your account. In order to login to your account, you must verify your account. An email has been sent to \".concat(resource.email, \" with a link to verify your account. If you have not received the email after a few minutes check your spam folder or resend the verification email.\");\n      Alert.info(React.createElement(CustomContentAlert, {\n        position: \"bottom\",\n        customFields: {\n          customerName: resource && resource.name || 'your name'\n        },\n        email: resource && resource.email || 'yourEmail@@',\n        message: verifyMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), {\n        position: 'top-right',\n        timeout: 15000,\n        limit: 1\n      });\n    };\n\n    _this.onChangeInput = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    self = _assertThisInitialized(_this);\n    _this.state = {\n      isReady: false,\n      focused: false,\n      loginSuccess: false,\n      session: 'close',\n      uid: '',\n      name: '',\n      confirmed: false,\n      submit: true,\n      disabled: false,\n      redirect: false,\n      directLink: '/site1',\n      mainPath: '/',\n      subPath: 'pg=0',\n      loginBtnStyle: 'loginBtn',\n      email: '',\n      password: '',\n      username: '',\n      successCreate: false,\n      errorCreate: false,\n      loginMode: 'login',\n      successMsg: 'Success create new account',\n      loginDanger: '',\n      forgotPass: false,\n      forgotMessage: false,\n      created: false,\n      store: null,\n      resultMsg: '',\n      submitDone: false\n    };\n    _this.onFocusHandle = _this.onFocusHandle.bind(_assertThisInitialized(_this));\n    _this.onConfirm = _this.onConfirm.bind(_assertThisInitialized(_this));\n    _this.onSignOut = _this.onSignOut.bind(_assertThisInitialized(_this));\n    _this.params = null;\n    _this.clientSysInfo = {};\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //로컬 스토리지의 저장공간에서 로그인 유지 상태 확인\n      //브라우져 주소창에 주소를 입력할 경우\n\n      /***\n       * TEST success created new account\n       ***/\n      //this.setState({successCreate:true, loginMode:'signuped', successMsg:'test created'})\n      //this.onProgress();\n      //this.setState({email:'myemail@test.com', username:'my name'})\n      //setTimeout(() =>self.resultCreateUser({data:{message:'good created'}}, {}, self), 2000);\n      //inkikim1234\n      //remove new user info data from localStorage\n      var getUserInfo = localStorage.getItem('userInfo');\n      var oldUserInfo = getUserInfo ? JSON.parse(getUserInfo) : null;\n\n      if (oldUserInfo) {\n        if (oldUserInfo.date && moment().diff(oldUserInfo.date, 'minute') >= 60) {\n          localStorage.setItem('userInfo', null);\n        }\n      }\n      /**********************\n       * Get info of client system : OS, browser\n       * @type {UAParser}\n       */\n\n\n      var parser = new UAParser(); // by default it takes ua string from current browser's window.navigator.userAgent\n\n      var resultPs = parser.getResult();\n      this.clientSysInfo = {\n        os: resultPs.os,\n        browser: resultPs.browser\n      };\n      serviceLogin.getCurrentUserInfo('clientIP', {}, this.receiveClientIp, this);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n\n      if (nextProps.values) {\n        if (nextProps.submitSucceeded) {\n          this.setState({\n            email: nextProps.values.email,\n            username: nextProps.values.username\n          }); //in case user press the button as a submit no matter send params\n\n          localStorage.setItem('userInfo', JSON.stringify({\n            email: nextProps.values.email,\n            username: nextProps.values.username,\n            date: new Date()\n          }));\n\n          if (nextProps.loginMode === 'resetPass') {\n            service.getMCService('passwordreset', {\n              password: nextProps.values.password,\n              token: store ? store.resetToken : 'null'\n            }, self.resultNewPass, self);\n          } else {\n            serviceLogin.createUser('createUser', {\n              name: nextProps.values.username,\n              password: nextProps.values.password,\n              email: nextProps.values.email,\n              clientSysInfo: self.clientSysInfo,\n              callbackurl: 'https://' + host + '/verify'\n            }, self.resultCreateUser, self);\n          }\n\n          this.onProgress(true);\n        }\n      }\n\n      if (nextProps.loginMode === 'login') {\n        if (this.state.errorCreate) {\n          setTimeout(function () {\n            return self.setState({\n              successCreate: false,\n              errorCreate: false,\n              forgotMessage: false,\n              forgotPass: false\n            });\n          }, 3000);\n        } else {\n          this.setState({\n            successCreate: false,\n            loginMode: 'login',\n            forgotMessage: false,\n            forgotPass: false\n          });\n        }\n      } else if (nextProps.loginMode === 'signup') {\n        this.setState({\n          successCreate: false,\n          loginMode: 'signup',\n          forgotMessage: false,\n          forgotPass: false,\n          errorCreate: false\n        });\n      } else if (nextProps.loginMode === 'forgot') {\n        this.setState({\n          successCreate: false,\n          loginMode: 'forgot',\n          forgotMessage: false,\n          forgotPass: false\n        });\n      } else if (nextProps.loginMode === 'verify') {\n        this.setState({\n          successCreate: false,\n          loginMode: 'verify',\n          forgotMessage: false,\n          forgotPass: false\n        });\n      } else if (nextProps.loginMode === 'resetPass') {\n        this.setState({\n          successCreate: false,\n          loginMode: 'resetPass',\n          forgotMessage: false,\n          forgotPass: false\n        });\n      } else if (nextProps.loginMode === 'signuped' && nextProps.createSuccess) {\n        localStorage.setItem('userInfo', null);\n\n        var _email = nextProps.userInfo && nextProps.userInfo.email;\n\n        var msgTxt = \"Thank you for signing up. Please verify your account.\\n                            In order to login to your account, you must verify your account. \\n                            An email has been sent to \".concat(_email, \" with a link to verify your account. \\n                            If you have not received the email after a few minutes check your spam folder or resend the verification email.\");\n        this.setState({\n          successCreate: true,\n          loginMode: 'signuped',\n          successMsg: 'Account created',\n          resultMsg: msgTxt\n        });\n      }\n    } // shouldComponentUpdate(nextProps, nextState) {\n    //     return (\n    //         nextProps.data != this.props.data ||\n    //         nextState.loginSuccess != this.state.loginSuccess\n    //     )\n    // }\n\n    /****\n     * 커스텀 얼럿 : 지우지 말것\n     * @param resource\n     */\n\n  }, {\n    key: \"receiveClientIp\",\n    value: function receiveClientIp(result) {\n      if (result && result.data) {\n        self.clientSysInfo['clientIP'] = result.data.clientIp;\n      } else {\n        self.clientSysInfo['clientIP'] = '127.0.0.1';\n      }\n    }\n  }, {\n    key: \"resultCreateUser\",\n    value: function resultCreateUser(result, resource) {\n      var message = result.data.message ? result.data.message : null;\n      self.onProgress(false);\n\n      if (message.indexOf('created') > -1) {\n        //self.showAlert(resource)\n        var msg = \"User \".concat(resource.name, \" created successfully\");\n        self.setState({\n          successCreate: true,\n          loginMode: 'signuped',\n          signup: false\n        });\n        self.props.handleAlertInfo('success', msg);\n        self.props.handleCreateAccount({\n          success: true,\n          info: resource\n        });\n      } else {\n        self.setState({\n          successCreate: false,\n          errorCreate: false,\n          signup: false\n        });\n        self.forceUpdate();\n        self.props.handleCreateAccount({\n          success: false,\n          info: resource\n        });\n        self.props.handleAlertInfo('error', message);\n      }\n\n      self.setState({\n        successMsg: message ? message : self.state.successMsg,\n        signup: false\n      });\n      setTimeout(function () {\n        return self.props.handleChangeLoginMode('signuped');\n      }, 600);\n    }\n  }, {\n    key: \"resultNewPass\",\n    value: function resultNewPass(result) {\n      var message = result.data.message ? result.data.message : null;\n\n      if (result.data.error) {\n        self.props.handleAlertInfo('error', result.data.error);\n      } else {\n        self.props.handleAlertInfo('success', result.data.message);\n        setTimeout(function () {\n          return self.props.handleChangeLoginMode('login');\n        }, 600);\n      }\n\n      self.onProgress(false);\n    }\n  }, {\n    key: \"onFocusHandle\",\n    value: function onFocusHandle(value) {\n      self.setState({\n        focused: value\n      });\n    }\n  }, {\n    key: \"onSignOut\",\n    value: function onSignOut() {\n      this.props.requestLogout();\n    }\n  }, {\n    key: \"onConfirm\",\n    value: function onConfirm() {\n      this.props.requestLogin(this.props.target, {\n        uid: this.uid.value,\n        pwd: this.pwd.value\n      }); // ajax 요청\n    }\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(value) {\n      this.props.handleCreatingSpinner(value);\n    }\n    /**\n     * success login\n     * 로그인이 성공했을 때 토큰을 저장한다.\n     * @param result\n     */\n\n  }, {\n    key: \"receiveToken\",\n    value: function receiveToken(result) {\n      if (result.data.token) {\n        self.params['userToken'] = result.data.token;\n        localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(self.params));\n        self.props.mapDispatchToLoginWithPassword(self.params);\n        self.props.handleChangeLoginMode('login');\n      } else {\n        //display error message\n        if (Alert) {\n          self.props.handleAlertInfo('error', result.data.message); //goto reqeuset verify email ....\n\n          if (result.data.message.indexOf('not verified') > -1) {\n            self.setState({\n              loginMode: 'verify'\n            });\n          }\n        } else {\n          alert(result.data.message);\n        }\n      }\n    }\n  }, {\n    key: \"receiveForgoten\",\n    value: function receiveForgoten(result) {\n      self.props.handleAlertInfo('success', 'Success');\n      self.setState({\n        loginMode: 'forgotMessage',\n        forgotMessage: true\n      });\n    }\n  }, {\n    key: \"receiveResendVerify\",\n    value: function receiveResendVerify(result) {\n      self.props.handleAlertInfo('success', 'Success');\n      self.setState({\n        loginMode: 'signup',\n        forgotMessage: true\n      });\n    }\n  }, {\n    key: \"returnSignin\",\n    value: function returnSignin() {\n      setTimeout(function () {\n        return self.setState({\n          forgotPass: false,\n          forgotMessage: false,\n          loginMode: 'login'\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"requestToken\",\n    value: function requestToken(self) {\n      serviceLogin.getMethodCall('requestToken', {\n        username: self.state.username,\n        password: self.state.password\n      }, self.receiveToken); //self.receiveToken({data:{token:'my test token'}})\n    }\n  }, {\n    key: \"handleClickLogin\",\n    value: function handleClickLogin(mode) {\n      self.setState({\n        loginMode: mode\n      });\n    } // onKeyPress = (e) => {\n    //     if(e.key === 'Enter') {\n    //         this.onSubmit()\n    //     }\n    // }\n\n  }, {\n    key: \"onSendEmail\",\n    value: function onSendEmail(mode) {\n      if (mode === 'verify') {\n        serviceLogin.resendVerify('resendverify', {\n          email: self.state.email,\n          callbackurl: 'https://' + host + '/verify'\n        }, self.receiveResendVerify);\n      } else if (mode === 'resetPass') {\n        var pass = '';\n        var strArr = self.props.params.subPath.split('=');\n        var token = strArr[1];\n        service.getMCService('ResetPassword', {\n          service: 'passwordreset',\n          token: token,\n          password: pass\n        }, this.receiveData, this);\n      } else if (mode === 'back') {\n        self.setState({\n          loginMode: 'login'\n        });\n      } else {\n        serviceLogin.resetPassword('passwordresetrequest', {\n          email: self.state.email,\n          callbackurl: \"https://\" + host + \"/passwordreset\"\n        }, self.receiveForgoten);\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n\n      if (!username && !password) {\n        self.setState({\n          loginDanger: 'Insert Username and Password'\n        });\n      } else if (!username) {\n        self.setState({\n          loginDanger: 'Insert Username'\n        });\n      } else if (!password) {\n        self.setState({\n          loginDanger: 'Insert Password'\n        });\n      }\n\n      var params = {\n        email: username,\n        password: password\n      };\n      self.params = params;\n\n      if (username && password) {\n        self.setState({\n          loginDanger: ''\n        });\n        self.requestToken(self);\n      }\n\n      ; // create account\n      // MyAPI.signinWithPassword(params)\n      //     .then((data) => {\n      //\n      //         return new Promise((resolve, reject) => {\n      //\n      //             if (data.status !== 'success'){\n      //                 let error_text = 'Error';\n      //                 if (data.detail){\n      //                     error_text = data.detail\n      //                 }\n      //                 reject(error_text)\n      //\n      //             } else {\n      //                 // success\n      //                 const params = {\n      //                     user: data.user,\n      //                     login_token: data.login_token\n      //                 }\n      //\n      //                 global.userInfo = {\n      //                     username: username,\n      //                     password: password\n      //                 }\n      //\n      //                 self.params = params;\n      //\n      //                 localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params))\n      //                 self.props.mapDispatchToLoginWithPassword(params)\n      //\n      //                 self.requestToken(self);\n      //                 resolve()\n      //             }\n      //         })\n      //     })\n      //     .then(() => {\n      //         // redirect\n      //         //this.props.history.push(\"/dashboard\")\n      //     })\n      //     .catch((err) => {\n      //         console.log(\"err:\", err)\n      //\n      //         Alert.error(err, {\n      //             position: 'top-right',\n      //             effect: 'slide',\n      //             timeout: 5000\n      //         });\n      //     })\n    }\n    /* http://docs.nativebase.io/docs/examples/ReduxFormExample.html */\n    //\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          reset = _this$props.reset,\n          data = _this$props.data,\n          loginState = _this$props.loginState;\n      return this.state.session !== 'open' ? React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, this.state.loginMode === 'forgot' ? React.createElement(FormForgotPass, {\n        self: this,\n        message: this.state.forgotMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }) : this.state.loginMode === 'resetPass' ? React.createElement(ResetPassword, {\n        self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }) : this.state.loginMode === 'forgotMessage' ? React.createElement(ForgotMessage, {\n        self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }) : this.state.loginMode === 'verify' ? React.createElement(FormResendVerify, {\n        self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }) : this.state.loginMode === 'signup' ? this.state.successCreate || this.state.errorCreate ? React.createElement(SuccessMsg, {\n        self: this,\n        msg: this.state.successMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }) : React.createElement(FormSignUpContainer, {\n        self: this,\n        focused: this.state.focused,\n        loginBtnStyle: this.state.loginBtnStyle,\n        lastFormValue: this.state.lastFromValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }) : this.state.loginMode === 'signuped' ? this.state.successCreate || this.state.errorCreate ? React.createElement(SuccessMsg, {\n        self: this,\n        msg: this.state.successMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }) : this.state.loginMode === 'login' ? React.createElement(FormContainer, {\n        self: this,\n        focused: this.state.focused,\n        loginBtnStyle: this.state.loginBtnStyle,\n        login_danger: this.state.loginDanger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      })) : this.state.redirect ? React.createElement(Redirect, {\n        push: true,\n        to: this.state.directLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }) : React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, \"\".concat(this.state.uid, \"\\uB2D8 \\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC\\uC785\\uB2C8\\uB2E4\")), React.createElement(Button, {\n        onClick: this.onSignOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, \"LOGOUT\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var profile = state.form.profile ? state.form.profile : null;\n  var loginmode = state.loginMode ? state.loginMode : null;\n  var createSuccess = state.createAccount ? state.createAccount.created.success : null;\n  var userInfo = state.createAccount ? state.createAccount.created.info : null;\n  return {\n    values: profile ? profile.values : null,\n    submitSucceeded: profile ? profile.submitSucceeded : null,\n    loginMode: loginmode ? loginmode.mode : null,\n    createSuccess: createSuccess,\n    userInfo: userInfo\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleCreatingSpinner: function handleCreatingSpinner(data) {\n      dispatch(actions.creatingSpinner(data));\n    },\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleChangeTab: function handleChangeTab(data) {\n      dispatch(actions.changeTab(data));\n    },\n    mapDispatchToLoginWithPassword: function mapDispatchToLoginWithPassword(data) {\n      return dispatch(actions.loginWithEmailRedux({\n        params: data\n      }));\n    },\n    handleChangeLoginMode: function handleChangeLoginMode(data) {\n      dispatch(actions.changeLoginMode(data));\n    },\n    handleCreateAccount: function handleCreateAccount(data) {\n      dispatch(actions.createAccount(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Login);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/components/login/index.js"],"names":["React","Component","Fragment","Container","Button","Checkbox","Form","Label","Grid","Input","Redirect","moment","UAParser","connect","actions","Alert","LOCAL_STRAGE_KEY","serviceLogin","RegistryUserForm","RegistryResetForm","service","ServiceLogin","CustomContentAlert","host","window","location","self","email","FormContainer","props","width","ipt","uid","onChangeInput","event","key","onSubmit","pwd","login_danger","onFocusHandle","fontStyle","textDecoration","cursor","display","handleClickLogin","FormForgotPass","onSendEmail","ForgotMessage","returnSignin","ResetPassword","console","log","color","padding","FormResendVerify","FormSignUpContainer","a","b","username","state","commitDone","customerName","flag","SuccessMsg","msg","indexOf","String","resultMsg","validate","values","error","name","ema","nm","undefined","length","Login","showAlert","resource","verifyMessage","info","position","timeout","limit","e","value","setState","isReady","focused","loginSuccess","session","confirmed","submit","disabled","redirect","directLink","mainPath","subPath","loginBtnStyle","password","successCreate","errorCreate","loginMode","successMsg","loginDanger","forgotPass","forgotMessage","created","store","submitDone","bind","onConfirm","onSignOut","params","clientSysInfo","getUserInfo","localStorage","getItem","oldUserInfo","JSON","parse","date","diff","setItem","parser","resultPs","getResult","os","browser","getCurrentUserInfo","receiveClientIp","nextProps","PROJECT_INIT","submitSucceeded","stringify","Date","getMCService","token","resetToken","resultNewPass","createUser","callbackurl","resultCreateUser","onProgress","setTimeout","createSuccess","userInfo","msgTxt","result","data","clientIp","message","signup","handleAlertInfo","handleCreateAccount","success","forceUpdate","handleChangeLoginMode","requestLogout","requestLogin","target","handleCreatingSpinner","mapDispatchToLoginWithPassword","alert","getMethodCall","receiveToken","mode","resendVerify","receiveResendVerify","pass","strArr","split","receiveData","resetPassword","receiveForgoten","requestToken","reset","loginState","lastFromValue","mapStateToProps","profile","form","loginmode","createAccount","mapDispatchProps","dispatch","creatingSpinner","handleChangeSite","changeSite","handleChangeTab","changeTab","loginWithEmailRedux","changeLoginMode","alertInfo"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { Container, Button, Checkbox, Form, Label, Grid, Input } from 'semantic-ui-react'\nimport { Redirect } from 'react-router';\nimport * as moment from 'moment';\nimport UAParser from 'ua-parser-js';\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n// alert\nimport Alert from 'react-s-alert';\n// API\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings'\nimport * as serviceLogin from '../../services/service_login_api';\nimport RegistryUserForm from '../reduxForm/RegistryUserForm';\nimport RegistryResetForm from '../reduxForm/registryResetForm';\nimport * as service from \"../../services/service_compute_service\";\nimport * as ServiceLogin from '../../services/service_login_api';\nimport CustomContentAlert from './CustomContentAlert';\n/*\n\n */\n\nconst host = window.location.host;\nlet self = null;\nlet email = 'yourEmail@email.net'\n\nconst FormContainer = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>User Login</span>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column>\n                <Input style={{width:'100%'}} placeholder='Username or Email' name='username' width ref={ipt=>{props.self.uid = ipt}} onChange={props.self.onChangeInput} onKeyPress={event => { if (event.key === 'Enter') {props.self.onSubmit()} }}></Input>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column >\n                <Input style={{width:'100%'}} placeholder='Password' name='password' type='password' ref={ipt=>{props.self.pwd = ipt}} onChange={props.self.onChangeInput} onKeyPress={event => { if (event.key === 'Enter') {props.self.onSubmit()} }}></Input>\n            </Grid.Column>\n        </Grid.Row>\n        <div className=\"loginValidation\">\n            {props.login_danger}\n        </div>\n        <Grid.Row>\n            <Grid.Column>\n                <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() => props.self.onSubmit()}>Log In</Button>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n            <div style={{fontStyle:'italic', textDecoration:'underline', cursor:'pointer', display:'inline-block'}} onClick={() => props.self.handleClickLogin('forgot')}>Forgot Password?</div>\n        </Grid.Row>\n    </Grid>\n\n)\nconst FormForgotPass = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>Reset your password</span>\n        </Grid.Row>\n        <Grid.Row>\n            <span className=\"login-text\">Enter your email address and we will send you a link to reset your password.</span>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column>\n                <Input style={{width:'100%'}} placeholder='Enter your email address' name='email' width ref={ipt=>{props.self.email = ipt}} onChange={props.self.onChangeInput} onKeyPress={event => { if (event.key === 'Enter') {props.self.onSendEmail()} }}></Input>\n            </Grid.Column>\n        </Grid.Row>\n        <div className=\"loginValidation\">\n            {props.login_danger}\n        </div>\n        <Grid.Row>\n            <Grid.Column>\n                <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() => props.self.onSendEmail()}>Send Password Reset Email</Button>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column>\n                <Button onClick={() => props.self.onSendEmail('back')}>Return to Log In</Button>\n            </Grid.Column>\n        </Grid.Row>\n        {/*<Grid.Row columns={2}>*/}\n        {/*    <Grid.Column>*/}\n        {/*        <Button style={{width:'50%'}} onClick={() => props.self.onSendEmail('back')}>Return to Log In</Button>*/}\n        {/*    </Grid.Column>*/}\n        {/*    <Grid.Column>*/}\n        {/*        <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() => props.self.onSendEmail()}>Send Password reset email</Button>*/}\n        {/*    </Grid.Column>*/}\n        {/*</Grid.Row>*/}\n\n    </Grid>\n)\nconst ForgotMessage = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>Reset your password</span>\n        </Grid.Row>\n        <Grid.Row>\n            <span className=\"login-text\">Check your email for a link to reset your password. If it doesn’t appear within a few minutes, check your spam folder.</span>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column>\n                <Button onFocus={() => props.self && props.self.onFocusHandle(true)} onfocusout={() => props.self && props.self.onFocusHandle(false)} onClick={() => props.self.returnSignin()}>Return to Sign In</Button>\n            </Grid.Column>\n        </Grid.Row>\n\n    </Grid>\n)\nconst ResetPassword = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>Reset your password</span>\n        </Grid.Row>\n        <RegistryResetForm onSubmit={() => console.log('ProfileForm was submitted')}/>\n        <Grid.Row>\n            <span>\n                By clicking SignUp, you agree to our <a href=\"https://mobiledgex.com/terms-of-use\" target=\"_blank\" className=\"login-text\" style={{fontStyle:'italic', textDecoration:'underline', cursor:'pointer', color:\"rgba(255,255,255,.5)\", padding:'0'}}>Terms of Use</a> and <a href=\"https://www.mobiledgex.com/privacy-policy\" target=\"_blank\" className=\"login-text\" style={{fontStyle:'italic', textDecoration:'underline', cursor:'pointer', color:\"rgba(255,255,255,.5)\", padding:'0',}}>Privacy Policy</a>.\n            </span>\n        </Grid.Row>\n    </Grid>\n\n)\nconst FormResendVerify = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>Request a new verification email</span>\n        </Grid.Row>\n        <Grid.Row>\n            <span className=\"login-text\">Enter your email address and we will send you a link to verify your email.</span>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column>\n                <Input style={{width:'100%'}} placeholder='Enter your email address' name='email' width ref={ipt=>{props.self.email = ipt}} onChange={props.self.onChangeInput} onKeyPress={event => { if (event.key === 'Enter') {props.self.onSendEmail('verify')} }}></Input>\n            </Grid.Column>\n        </Grid.Row>\n        <div className=\"loginValidation\">\n            {props.login_danger}\n        </div>\n        <Grid.Row>\n            <Grid.Column>\n                <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() => props.self.onSendEmail('verify')}>Send verify email</Button>\n            </Grid.Column>\n        </Grid.Row>\n\n    </Grid>\n)\nconst FormSignUpContainer = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            <span className='title'>Create New Account</span>\n        </Grid.Row>\n        <RegistryUserForm onSubmit={(a,b) => console.log('20190906 ProfileForm was submitted', a, b)} userInfo={{username:props.self.state.username, email:props.self.state.email, commitDone:props.self.state.commitDone}}/>\n        <Grid.Row>\n            <span>\n            By clicking SignUp, you agree to our <a href=\"https://mobiledgex.com/terms-of-use\" target=\"_blank\" className=\"login-text\" style={{fontStyle:'italic', textDecoration:'underline', cursor:'pointer', color:\"rgba(255,255,255,.5)\", padding:'0'}}>Terms of Use</a> and <a href=\"https://www.mobiledgex.com/privacy-policy\" target=\"_blank\" className=\"login-text\" style={{fontStyle:'italic', textDecoration:'underline', cursor:'pointer', color:\"rgba(255,255,255,.5)\", padding:'0',}}>Privacy Policy</a>.\n            </span>\n        </Grid.Row>\n    </Grid>\n)\nconst customerName = '';\nlet flag = true;\n\nconst SuccessMsg = (props) => (\n    <Grid className=\"signUpBD\">\n        <Grid.Row>\n            {(props.msg.indexOf('created') > -1) ?\n                <span className='title'>User created</span>\n            :\n            <span className='title' onClick={()=>console.log(props.msg)}>{String(props.msg)}</span>\n            }\n        </Grid.Row>\n        {(props.msg.indexOf('created') !== -1) ?\n            <Fragment>\n                <Grid.Row>\n                    <div className=\"login-text\">{props.self.state.resultMsg}</div>\n                </Grid.Row>\n                <Grid.Row>\n                    <div className=\"login-text\" style={{fontStyle:'italic'}}>If you verify your account, Sign in with your account</div>\n                </Grid.Row>\n            </Fragment>\n            :\n            <Fragment>\n                <Grid.Row>\n                    <div className=\"login-text\">Fail to create your account. Please try Again.</div>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() => props.self.handleClickLogin('signup')}><span>Sign Up</span></Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Fragment>\n            }\n        <Grid.Row>\n            <Grid.Column>\n                 <Button onFocus={() => props.self.onFocusHandle(true)} onfocusout={() => props.self.onFocusHandle(false)} onClick={() =>  props.self.handleClickLogin('login')}><span>Log In</span></Button>\n            </Grid.Column>\n        </Grid.Row>\n    </Grid>\n)\nconst validate = values => {\n    const error= {};\n    error.email= '';\n    error.name= '';\n    var ema = values.email;\n    var nm = values.name;\n    if(values.email === undefined){\n        ema = '';\n    }\n    if(values.name === undefined){\n        nm = '';\n    }\n    if(ema.length < 4 && ema !== ''){\n        error.email= 'too short';\n    }\n    // if(!ema.includes('@') && ema !== ''){\n    //     error.email= '@ not included';\n    // }\n    if(nm.length > 4){\n        //error.name= 'max 8 characters';\n    }\n\n    return error;\n}\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        self = this;\n        this.state={\n            isReady : false,\n            focused : false,\n            loginSuccess: false,\n            session:'close',\n            uid:'',\n            name:'',\n            confirmed: false,\n            submit: true,\n            disabled: false,\n            redirect:false,\n            directLink:'/site1',\n            mainPath:'/', subPath:'pg=0',\n            loginBtnStyle:'loginBtn',\n            email:'',\n            password:'',\n            username:'',\n            successCreate:false,\n            errorCreate:false,\n            loginMode:'login',\n            successMsg:'Success create new account',\n            loginDanger:'',\n            forgotPass:false,\n            forgotMessage:false,\n            created:false,\n            store:null,\n            resultMsg:'',\n            submitDone: false\n        };\n\n        this.onFocusHandle = this.onFocusHandle.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onSignOut = this.onSignOut.bind(this);\n        this.params = null;\n        this.clientSysInfo = {};\n    }\n    componentDidMount() {\n        //로컬 스토리지의 저장공간에서 로그인 유지 상태 확인\n\n        //브라우져 주소창에 주소를 입력할 경우\n\n        /***\n         * TEST success created new account\n         ***/\n        //this.setState({successCreate:true, loginMode:'signuped', successMsg:'test created'})\n        //this.onProgress();\n\n        //this.setState({email:'myemail@test.com', username:'my name'})\n        //setTimeout(() =>self.resultCreateUser({data:{message:'good created'}}, {}, self), 2000);\n        //inkikim1234\n\n\n        //remove new user info data from localStorage\n            let getUserInfo = localStorage.getItem('userInfo')\n        let oldUserInfo = getUserInfo ? JSON.parse(getUserInfo) : null;\n        if(oldUserInfo) {\n            if(oldUserInfo.date && moment().diff(oldUserInfo.date,'minute') >= 60) {\n                localStorage.setItem('userInfo', null)\n            }\n        }\n\n\n        /**********************\n         * Get info of client system : OS, browser\n         * @type {UAParser}\n         */\n        var parser = new UAParser();\n\n        // by default it takes ua string from current browser's window.navigator.userAgent\n        let resultPs = parser.getResult();\n        this.clientSysInfo = {os:resultPs.os, browser:resultPs.browser};\n\n        serviceLogin.getCurrentUserInfo('clientIP',{}, this.receiveClientIp, this)\n\n    }\n\n    componentWillReceiveProps (nextProps) {\n\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        if(nextProps.values) {\n            if(nextProps.submitSucceeded) {\n                this.setState({email:nextProps.values.email, username:nextProps.values.username})\n\n                //in case user press the button as a submit no matter send params\n                localStorage.setItem('userInfo', JSON.stringify({email:nextProps.values.email, username:nextProps.values.username, date:new Date()}))\n                if(nextProps.loginMode === 'resetPass'){\n                    service.getMCService('passwordreset',{ password:nextProps.values.password, token: store ? store.resetToken : 'null'}, self.resultNewPass, self)\n                } else {\n                    serviceLogin.createUser('createUser',{name:nextProps.values.username, password:nextProps.values.password, email:nextProps.values.email, clientSysInfo:self.clientSysInfo, callbackurl : 'https://'+host+'/verify'}, self.resultCreateUser, self)\n                }\n                this.onProgress(true);\n            }\n\n        }\n\n        if(nextProps.loginMode === 'login') {\n            if(this.state.errorCreate){\n                setTimeout(() => self.setState({successCreate:false, errorCreate:false, forgotMessage:false, forgotPass:false}), 3000);\n            } else {\n                this.setState({successCreate:false, loginMode:'login', forgotMessage:false, forgotPass:false});\n            }\n\n        } else if(nextProps.loginMode === 'signup'){\n            this.setState({successCreate:false, loginMode:'signup', forgotMessage:false, forgotPass:false, errorCreate:false});\n        } else if(nextProps.loginMode === 'forgot'){\n            this.setState({successCreate:false, loginMode:'forgot', forgotMessage:false, forgotPass:false});\n        } else if(nextProps.loginMode === 'verify'){\n            this.setState({successCreate:false, loginMode:'verify', forgotMessage:false, forgotPass:false});\n        } else if(nextProps.loginMode === 'resetPass'){\n            this.setState({successCreate:false, loginMode:'resetPass', forgotMessage:false, forgotPass:false});\n        } else if(nextProps.loginMode === 'signuped' && nextProps.createSuccess){\n            localStorage.setItem('userInfo', null)\n            let email = nextProps.userInfo && nextProps.userInfo.email;\n            let msgTxt = `Thank you for signing up. Please verify your account.\n                            In order to login to your account, you must verify your account. \n                            An email has been sent to ${email} with a link to verify your account. \n                            If you have not received the email after a few minutes check your spam folder or resend the verification email.`\n            this.setState({successCreate:true, loginMode:'signuped', successMsg:'Account created', resultMsg:msgTxt})\n        }\n\n    }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return (\n    //         nextProps.data != this.props.data ||\n    //         nextState.loginSuccess != this.state.loginSuccess\n    //     )\n    // }\n\n\n    /****\n     * 커스텀 얼럿 : 지우지 말것\n     * @param resource\n     */\n    showAlert = (resource) => {\n        let verifyMessage = `Thank you for signing up. Please verify your account. In order to login to your account, you must verify your account. An email has been sent to ${resource.email} with a link to verify your account. If you have not received the email after a few minutes check your spam folder or resend the verification email.`\n\n        Alert.info(<CustomContentAlert position='bottom' customFields={{customerName: resource && resource.name || 'your name'}} email={resource && resource.email || 'yourEmail@@'} message={verifyMessage}/>, {\n            position: 'top-right', timeout: 15000, limit:1\n        })\n\n    }\n\n\n    receiveClientIp(result) {\n        if(result && result.data) {\n            self.clientSysInfo['clientIP'] = result.data.clientIp;\n        } else {\n            self.clientSysInfo['clientIP'] = '127.0.0.1';\n        }\n\n    }\n\n    resultCreateUser(result, resource) {\n        let message = (result.data.message)? result.data.message : null;\n        self.onProgress(false)\n\n        if(message.indexOf('created') > -1) {\n\n\n            //self.showAlert(resource)\n            let msg = `User ${resource.name} created successfully`\n            self.setState({successCreate:true, loginMode:'signuped', signup:false})\n            self.props.handleAlertInfo('success', msg)\n            self.props.handleCreateAccount({success:true, info:resource})\n        } else {\n            self.setState({successCreate:false, errorCreate:false, signup:false})\n            self.forceUpdate();\n            self.props.handleCreateAccount({success:false, info:resource})\n            self.props.handleAlertInfo('error', message)\n\n        }\n\n\n        self.setState({successMsg:message ? message:self.state.successMsg, signup:false});\n        setTimeout(()=>self.props.handleChangeLoginMode('signuped'), 600);\n    }\n    resultNewPass(result) {\n\n        let message = (result.data.message)? result.data.message : null;\n\n        if(result.data.error) {\n            self.props.handleAlertInfo('error', result.data.error)\n        } else {\n            self.props.handleAlertInfo('success', result.data.message)\n            setTimeout(()=>self.props.handleChangeLoginMode('login'), 600);\n        }\n        self.onProgress(false);\n\n\n\n    }\n\n    onFocusHandle(value) {\n        self.setState({focused: value})\n    }\n    onSignOut() {\n        this.props.requestLogout();\n    }\n    onConfirm() {\n        this.props.requestLogin(this.props.target, {uid:this.uid.value, pwd: this.pwd.value}); // ajax 요청\n\n    }\n    onChangeInput = (e, { name, value }) => {\n        this.setState({ [name]: value })\n    }\n    onProgress(value) {\n        this.props.handleCreatingSpinner(value)\n    }\n\n    /**\n     * success login\n     * 로그인이 성공했을 때 토큰을 저장한다.\n     * @param result\n     */\n    receiveToken(result) {\n\n        if(result.data.token) {\n            self.params['userToken'] = result.data.token\n            localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(self.params))\n            self.props.mapDispatchToLoginWithPassword(self.params)\n\n            self.props.handleChangeLoginMode('login')\n        } else {\n            //display error message\n            if(Alert){\n                self.props.handleAlertInfo('error', result.data.message)\n                //goto reqeuset verify email ....\n                if(result.data.message.indexOf('not verified') > -1) {\n                    self.setState({loginMode: 'verify'})\n                }\n            } else {\n                alert(result.data.message)\n            }\n\n        }\n    }\n\n    receiveForgoten(result) {\n\n        self.props.handleAlertInfo('success', 'Success')\n        self.setState({loginMode:'forgotMessage', forgotMessage: true})\n    }\n    receiveResendVerify(result) {\n\n        self.props.handleAlertInfo('success', 'Success')\n        self.setState({loginMode:'signup', forgotMessage: true})\n    }\n    returnSignin() {\n\n        setTimeout(()=>self.setState({forgotPass:false, forgotMessage:false, loginMode:'login'}), 1000)\n    }\n    requestToken(self) {\n        serviceLogin.getMethodCall('requestToken', {username:self.state.username, password:self.state.password}, self.receiveToken)\n        //self.receiveToken({data:{token:'my test token'}})\n    }\n    handleClickLogin(mode) {\n        self.setState({loginMode:mode})\n    }\n    // onKeyPress = (e) => {\n    //     if(e.key === 'Enter') {\n    //         this.onSubmit()\n    //     }\n    // }\n    onSendEmail(mode) {\n        if(mode === 'verify') {\n            serviceLogin.resendVerify('resendverify',\n                {\n                    email:self.state.email,\n                    callbackurl : 'https://'+host+'/verify'\n                }, self.receiveResendVerify)\n        } else if(mode === 'resetPass') {\n            let pass = '';\n            let strArr = self.props.params.subPath.split('=')\n            let token = strArr[1];\n            service.getMCService('ResetPassword',{service:'passwordreset',token:token, password:pass}, this.receiveData, this)\n\n        } else if(mode === 'back') {\n\n            self.setState({loginMode:'login'})\n        }\n        else {\n            serviceLogin.resetPassword('passwordresetrequest',\n                {email:self.state.email,\n                    callbackurl : \"https://\"+host+\"/passwordreset\"\n                }, self.receiveForgoten)\n        }\n\n    }\n\n    onSubmit() {\n        const { username, password } = this.state\n        if(!username && !password) {\n            self.setState({loginDanger:'Insert Username and Password'});\n        } else if(!username) {\n            self.setState({loginDanger:'Insert Username'});\n        } else if(!password) {\n            self.setState({loginDanger:'Insert Password'});\n        }\n        const params = {\n            email: username,\n            password: password,\n        }\n        self.params = params;\n        if(username && password) {\n            self.setState({loginDanger:''});\n            self.requestToken(self)\n        };\n\n        // create account\n        // MyAPI.signinWithPassword(params)\n        //     .then((data) => {\n        //\n        //         return new Promise((resolve, reject) => {\n        //\n        //             if (data.status !== 'success'){\n        //                 let error_text = 'Error';\n        //                 if (data.detail){\n        //                     error_text = data.detail\n        //                 }\n        //                 reject(error_text)\n        //\n        //             } else {\n        //                 // success\n        //                 const params = {\n        //                     user: data.user,\n        //                     login_token: data.login_token\n        //                 }\n        //\n        //                 global.userInfo = {\n        //                     username: username,\n        //                     password: password\n        //                 }\n        //\n        //                 self.params = params;\n        //\n        //                 localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params))\n        //                 self.props.mapDispatchToLoginWithPassword(params)\n        //\n        //                 self.requestToken(self);\n        //                 resolve()\n        //             }\n        //         })\n        //     })\n        //     .then(() => {\n        //         // redirect\n        //         //this.props.history.push(\"/dashboard\")\n        //     })\n        //     .catch((err) => {\n        //         console.log(\"err:\", err)\n        //\n        //         Alert.error(err, {\n        //             position: 'top-right',\n        //             effect: 'slide',\n        //             timeout: 5000\n        //         });\n        //     })\n    }\n    /* http://docs.nativebase.io/docs/examples/ReduxFormExample.html */\n    //\n\n    render() {\n        const { reset, data, loginState } = this.props;\n        return (\n\n                (this.state.session !== 'open') ?\n                    <Container>\n                        {\n                            (this.state.loginMode === 'forgot') ?\n                                <FormForgotPass self={this} message={this.state.forgotMessage}/>\n                            :(this.state.loginMode === 'resetPass')?\n                                <ResetPassword self={this}/>\n                            :(this.state.loginMode === 'forgotMessage')?\n                                <ForgotMessage self={this}/>\n                            :(this.state.loginMode === 'verify')?\n                                <FormResendVerify self={this}/>\n                            :(this.state.loginMode === 'signup')?\n                                (this.state.successCreate || this.state.errorCreate)?\n                                    <SuccessMsg self={this} msg={this.state.successMsg}></SuccessMsg>\n                                    :\n                                    <FormSignUpContainer self={this} focused={this.state.focused} loginBtnStyle={this.state.loginBtnStyle} lastFormValue={this.state.lastFromValue}/>\n                            :(this.state.loginMode === 'signuped')?\n                                (this.state.successCreate || this.state.errorCreate)?\n                                    <SuccessMsg self={this} msg={this.state.successMsg}></SuccessMsg>\n                                    :<div></div>\n                            :(this.state.loginMode === 'login')?\n                                <FormContainer self={this} focused={this.state.focused} loginBtnStyle={this.state.loginBtnStyle} login_danger={this.state.loginDanger}/>\n                            :\n                            <div></div>\n\n                        }\n                    </Container>\n                :\n                (this.state.redirect) ?\n                <Redirect push to={this.state.directLink} />\n                :\n                <Container>\n                    <Label>{`${this.state.uid}님 로그인 상태입니다`}</Label>\n                    <Button onClick={this.onSignOut}>LOGOUT</Button>\n                </Container>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n                                let profile = state.form.profile ? state.form.profile : null;\n                                let loginmode = state.loginMode ? state.loginMode : null;\n                                let createSuccess = state.createAccount ? state.createAccount.created.success : null;\n                                let userInfo = state.createAccount ? state.createAccount.created.info : null;\n    return {\n            values: profile ? profile.values : null,\n            submitSucceeded: profile ? profile.submitSucceeded : null,\n            loginMode: loginmode ? loginmode.mode : null,\n            createSuccess : createSuccess,\n            userInfo: userInfo\n        }\n};\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleCreatingSpinner: (data) => { dispatch(actions.creatingSpinner(data))},\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleChangeTab: (data) => { dispatch(actions.changeTab(data))},\n        mapDispatchToLoginWithPassword: (data) => dispatch(actions.loginWithEmailRedux({ params: data})),\n        handleChangeLoginMode: (data) => { dispatch(actions.changeLoginMode(data))},\n        handleCreateAccount: (data) => { dispatch(actions.createAccount(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))}\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Login);\n"]},"metadata":{},"sourceType":"module"}