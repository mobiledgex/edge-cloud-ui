{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/sites/siteFour_page_cloudlet.js\";\nimport React from 'react';\nimport { Grid, Image, Header, Menu, Dropdown, Button } from 'semantic-ui-react';\nimport sizeMe from 'react-sizeme';\nimport InstanceListView from '../container/instanceListView';\nimport { withRouter } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react';\nimport PageDetailViewer from '../container/pageDetailViewer'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport * as services from '../services/service_compute_service';\nimport './siteThree.css';\nimport MapWithListView from \"../container/mapWithListView\";\nimport Alert from \"react-s-alert\";\nimport * as reducer from '../utils';\nvar _self = null;\nvar rgn = [];\n\nvar SiteFourPageCloudlet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourPageCloudlet, _React$Component);\n\n  function SiteFourPageCloudlet(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourPageCloudlet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourPageCloudlet).call(this, props));\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n      return _this.setState({\n        activeItem: name\n      });\n    };\n\n    _this.receiveResult = function (result) {\n      // @inki if data has expired token\n      if (result.error && result.error.indexOf('Expired') > -1) {\n        _self.props.handleAlertInfo('error', result.error);\n\n        setTimeout(function () {\n          return _self.gotoUrl('/logout');\n        }, 4000);\n\n        _self.props.handleComputeRefresh(false);\n\n        _self.props.handleLoadingSpinner(false);\n\n        return;\n      }\n\n      var regionGroup = !result.error ? reducer.groupBy(result, 'Region') : {};\n\n      if (Object.keys(regionGroup)[0]) {\n        _self._cloudletDummy = _self._cloudletDummy.concat(result);\n      }\n\n      _this.loadCount++;\n      console.log(\"20191119 ..cloudlet EditEditEdit\", rgn.length, \":::\", _this.loadCount);\n\n      if (rgn.length == _this.loadCount) {\n        _self.countJoin();\n      }\n\n      _self.props.handleLoadingSpinner(false); // let join = null;\n      // if(result[0]['Edit']) {\n      //     join = this.state.devData.concat(result);\n      // } else {\n      //     join = this.state.devData;\n      // }\n      // this.loadCount ++;\n      // this.setState({devData:join})\n      // this.props.handleLoadingSpinner(false);\n      // if(rgn.length == this.loadCount-1){\n      //     return\n      // }\n\n    };\n\n    _this.getDataDeveloper = function (region, regionArr) {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n\n      _this.setState({\n        devData: []\n      });\n\n      _this._cloudletDummy = [];\n      _self.loadCount = 0;\n\n      if (region !== 'All') {\n        rgn = [region];\n      } else {\n        rgn = regionArr ? regionArr : _this.props.regionInfo.region;\n      }\n\n      rgn.map(function (item, i) {\n        //setTimeout(() => services.getMCService('ShowCloudlet',{token:store.userToken, region:item}, _self.receiveResult), 0)\n        services.getMCService('ShowCloudlet', {\n          token: store.userToken,\n          region: item\n        }, _self.receiveResult);\n      });\n\n      _this.props.handleLoadingSpinner(true);\n    };\n\n    _this.getDataDeveloperSub = function (region) {\n      var _region = region ? region : 'All';\n\n      _this.getDataDeveloper(_region);\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      shouldShowBox: true,\n      shouldShowCircle: false,\n      contHeight: 0,\n      contWidth: 0,\n      bodyHeight: 0,\n      activeItem: 'Developers',\n      devData: [],\n      viewMode: 'listView',\n      regions: [],\n      regionToggle: false,\n      dataSort: false,\n      changeRegion: null\n    };\n    _this.headerH = 70;\n    _this.hgap = 0;\n    _this.hiddenKeys = ['Ip_support', 'Num_dynamic_ips', 'Status', 'Physical_name', 'Platform_type'];\n    _this.headerLayout = [1, 3, 3, 3, 2, 2, 2];\n    _this.userToken = null;\n    _this._devData = [];\n    _this.loadCount = 0;\n    _this._cloudletDummy = [];\n    return _this;\n  }\n\n  _createClass(SiteFourPageCloudlet, [{\n    key: \"gotoUrl\",\n    value: function gotoUrl(site, subPath) {\n      var mainPath = site;\n\n      _self.props.history.push({\n        pathname: site,\n        search: subPath\n      });\n\n      _self.props.history.location.search = subPath;\n\n      _self.props.handleChangeSite({\n        mainPath: mainPath,\n        subPath: subPath\n      });\n    } //go to\n\n  }, {\n    key: \"gotoPreview\",\n    value: function gotoPreview(site) {\n      //브라우져 입력창에 주소 기록\n      var mainPath = site;\n      var subPath = 'pg=0';\n\n      _self.props.history.push({\n        pathname: mainPath,\n        search: subPath,\n        state: {\n          some: 'state'\n        }\n      });\n\n      _self.props.history.location.search = subPath;\n\n      _self.props.handleChangeSite({\n        mainPath: mainPath,\n        subPath: subPath\n      });\n    }\n  }, {\n    key: \"onHandleRegistry\",\n    value: function onHandleRegistry() {\n      this.props.handleInjectDeveloper('userInfo');\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        bodyHeight: window.innerHeight - this.headerH\n      });\n      this.setState({\n        contHeight: (window.innerHeight - this.headerH) / 2 - this.hgap\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null; // this.getDataDeveloper(this.props.changeRegion);\n\n      this.userToken = store.userToken;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._devData = [];\n      this._cloudletDummy = [];\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"20191119 ..cloudlet 11 region info in page cloudlet\", nextProps.changeRegion, \"-- : --\", this.state.changeRegion, \": props region ==>\", nextProps.regionInfo.region, \": state region==>\", this.state.regions);\n      this.setState({\n        bodyHeight: window.innerHeight - this.headerH\n      });\n      this.setState({\n        contHeight: (nextProps.size.height - this.headerH) / 2 - this.hgap\n      });\n\n      if (nextProps.viewMode) {\n        if (nextProps.viewMode === 'listView') {\n          //alert('viewmode..'+nextProps.viewMode+':'+ this.state.devData)\n          //this.getDataDeveloper(this.props.changeRegion)\n          this.setState({\n            viewMode: nextProps.viewMode\n          });\n        } else {\n          this.setState({\n            viewMode: nextProps.viewMode\n          }); // setTimeout(() => this.setState({detailData:nextProps.detailData}), 300)\n\n          this.setState({\n            detailData: nextProps.detailData\n          });\n        }\n      }\n\n      if (this.state.changeRegion !== nextProps.changeRegion) {\n        console.log(\"20191119 ..cloudlet 22 nextProps.changeRegion = \", nextProps.changeRegion, \"-- : --\", this.props.changeRegion);\n        this.setState({\n          changeRegion: nextProps.changeRegion\n        });\n        this.getDataDeveloper(nextProps.changeRegion, this.state.regions);\n      } else {}\n\n      if (nextProps.computeRefresh.compute) {\n        console.log('20191119 computeRefresh..');\n        this._cloudletDummy = [];\n        this.getDataDeveloper(nextProps.changeRegion);\n        this.props.handleComputeRefresh(false);\n        this.setState({\n          dataSort: true\n        });\n      }\n\n      if (nextProps.regionInfo.region.length && !this.state.regionToggle) {\n        //{ key: 1, text: 'All', value: 'All' }\n        console.log(\"20191119 ..cloudlet 33 region info in page cloudlet\");\n\n        _self.setState({\n          regionToggle: true,\n          regions: nextProps.regionInfo.region\n        });\n\n        this.getDataDeveloper(nextProps.changeRegion, nextProps.regionInfo.region);\n      }\n    }\n  }, {\n    key: \"countJoin\",\n    value: function countJoin() {\n      var cloudlet = this._cloudletDummy;\n      console.log('20191119 ..cloudlet---', cloudlet);\n\n      _self.setState({\n        devData: cloudlet,\n        dataSort: false\n      });\n\n      this.props.handleLoadingSpinner(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          shouldShowBox = _this$state.shouldShowBox,\n          shouldShowCircle = _this$state.shouldShowCircle;\n      var _this$state2 = this.state,\n          activeItem = _this$state2.activeItem,\n          viewMode = _this$state2.viewMode;\n      var randomValue = Math.round(Math.random() * 100);\n      return viewMode === 'listView' ? React.createElement(MapWithListView, {\n        devData: this.state.devData,\n        randomValue: randomValue,\n        headerLayout: this.headerLayout,\n        hiddenKeys: this.hiddenKeys,\n        siteId: 'Cloudlet',\n        userToken: this.userToken,\n        dataRefresh: this.getDataDeveloperSub,\n        dataSort: this.state.dataSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }) : React.createElement(PageDetailViewer, {\n        data: this.state.detailData,\n        page: \"cloudlet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SiteFourPageCloudlet;\n}(React.Component);\n\n;\nSiteFourPageCloudlet.defaultProps = {\n  changeRegion: ''\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"20191119 regionssInfo\", state.regionInfo, \":\", state.changeRegion);\n  var viewMode = null;\n  var detailData = null;\n\n  if (state.changeViewMode.mode && state.changeViewMode.mode.viewMode) {\n    viewMode = state.changeViewMode.mode.viewMode;\n    detailData = state.changeViewMode.mode.data;\n  }\n\n  var regionInfo = state.regionInfo ? state.regionInfo : null;\n  return {\n    computeRefresh: state.computeRefresh ? state.computeRefresh : null,\n    changeRegion: state.changeRegion ? state.changeRegion.region : null,\n    viewMode: viewMode,\n    detailData: detailData,\n    regionInfo: regionInfo\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectData(data));\n    },\n    handleInjectDeveloper: function handleInjectDeveloper(data) {\n      dispatch(actions.registDeveloper(data));\n    },\n    handleComputeRefresh: function handleComputeRefresh(data) {\n      dispatch(actions.computeRefresh(data));\n    },\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(sizeMe({\n  monitorHeight: true\n})(SiteFourPageCloudlet)));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/sites/siteFour_page_cloudlet.js"],"names":["React","Grid","Image","Header","Menu","Dropdown","Button","sizeMe","InstanceListView","withRouter","MaterialIcon","PageDetailViewer","connect","actions","services","MapWithListView","Alert","reducer","_self","rgn","SiteFourPageCloudlet","props","handleItemClick","e","name","setState","activeItem","receiveResult","result","error","indexOf","handleAlertInfo","setTimeout","gotoUrl","handleComputeRefresh","handleLoadingSpinner","regionGroup","groupBy","Object","keys","_cloudletDummy","concat","loadCount","console","log","length","countJoin","getDataDeveloper","region","regionArr","store","localStorage","PROJECT_INIT","JSON","parse","devData","regionInfo","map","item","i","getMCService","token","userToken","getDataDeveloperSub","_region","state","shouldShowBox","shouldShowCircle","contHeight","contWidth","bodyHeight","viewMode","regions","regionToggle","dataSort","changeRegion","headerH","hgap","hiddenKeys","headerLayout","_devData","site","subPath","mainPath","history","push","pathname","search","location","handleChangeSite","some","handleInjectDeveloper","window","innerHeight","nextProps","size","height","detailData","computeRefresh","compute","cloudlet","randomValue","Math","round","random","Component","defaultProps","mapStateToProps","changeViewMode","mode","data","mapDispatchProps","dispatch","changeSite","handleInjectData","injectData","registDeveloper","loadingSpinner","msg","alertInfo","monitorHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Image, Header, Menu, Dropdown, Button } from 'semantic-ui-react';\nimport sizeMe from 'react-sizeme';\nimport InstanceListView from '../container/instanceListView';\nimport { withRouter } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react';\nimport PageDetailViewer from '../container/pageDetailViewer';\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport * as services from '../services/service_compute_service';\nimport './siteThree.css';\nimport MapWithListView from \"../container/mapWithListView\";\nimport Alert from \"react-s-alert\";\nimport * as reducer from '../utils'\n\n\nlet _self = null;\nlet rgn = [];\nclass SiteFourPageCloudlet extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        this.state = {\n            shouldShowBox: true,\n            shouldShowCircle: false,\n            contHeight:0,\n            contWidth:0,\n            bodyHeight:0,\n            activeItem: 'Developers',\n            devData:[],\n            viewMode:'listView',\n            regions:[],\n            regionToggle:false,\n            dataSort:false,\n            changeRegion:null\n        };\n        this.headerH = 70;\n        this.hgap = 0;\n        this.hiddenKeys = ['Ip_support', 'Num_dynamic_ips','Status','Physical_name','Platform_type'];\n        this.headerLayout = [1,3,3,3,2,2,2];\n        this.userToken = null;\n        this._devData = [];\n        this.loadCount = 0;\n        this._cloudletDummy = [];\n    }\n    gotoUrl(site, subPath) {\n        let mainPath = site;\n        _self.props.history.push({\n            pathname: site,\n            search: subPath\n        });\n        _self.props.history.location.search = subPath;\n        _self.props.handleChangeSite({mainPath:mainPath, subPath: subPath})\n\n\n    }\n    //go to\n    gotoPreview(site) {\n        //브라우져 입력창에 주소 기록\n        let mainPath = site;\n        let subPath = 'pg=0';\n        _self.props.history.push({\n            pathname: mainPath,\n            search: subPath,\n            state: { some: 'state' }\n        });\n        _self.props.history.location.search = subPath;\n        _self.props.handleChangeSite({mainPath:mainPath, subPath: subPath})\n\n    }\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    onHandleRegistry() {\n        this.props.handleInjectDeveloper('userInfo');\n    }\n    componentWillMount() {\n        this.setState({bodyHeight : (window.innerHeight - this.headerH)})\n        this.setState({contHeight:(window.innerHeight-this.headerH)/2 - this.hgap})\n    }\n    componentDidMount() {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        // this.getDataDeveloper(this.props.changeRegion);\n        this.userToken = store.userToken;\n    }\n    componentWillUnmount() {\n        this._devData = [];\n        this._cloudletDummy = [];\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"20191119 ..cloudlet 11 region info in page cloudlet\",nextProps.changeRegion,\"-- : --\",this.state.changeRegion,\": props region ==>\",nextProps.regionInfo.region,\": state region==>\",this.state.regions)\n\n        this.setState({bodyHeight : (window.innerHeight - this.headerH)})\n        this.setState({contHeight:(nextProps.size.height-this.headerH)/2 - this.hgap})\n        if(nextProps.viewMode) {\n            if(nextProps.viewMode === 'listView') {\n                //alert('viewmode..'+nextProps.viewMode+':'+ this.state.devData)\n                //this.getDataDeveloper(this.props.changeRegion)\n                this.setState({viewMode:nextProps.viewMode})\n            } else {\n                this.setState({viewMode:nextProps.viewMode})\n                // setTimeout(() => this.setState({detailData:nextProps.detailData}), 300)\n                this.setState({detailData:nextProps.detailData})\n            }\n\n        }\n        if(this.state.changeRegion !== nextProps.changeRegion){\n            console.log(\"20191119 ..cloudlet 22 nextProps.changeRegion = \",nextProps.changeRegion,\"-- : --\",this.props.changeRegion)\n            this.setState({changeRegion: nextProps.changeRegion})\n            this.getDataDeveloper(nextProps.changeRegion, this.state.regions);\n        } else {\n\n        }\n        if(nextProps.computeRefresh.compute) {\n            console.log('20191119 computeRefresh..')\n            this._cloudletDummy = [];\n            this.getDataDeveloper(nextProps.changeRegion);\n            this.props.handleComputeRefresh(false);\n            this.setState({dataSort:true});\n        }\n\n        if(nextProps.regionInfo.region.length && !this.state.regionToggle) {\n            //{ key: 1, text: 'All', value: 'All' }\n            console.log(\"20191119 ..cloudlet 33 region info in page cloudlet\")\n            _self.setState({regionToggle:true,regions:nextProps.regionInfo.region})\n            this.getDataDeveloper(nextProps.changeRegion,nextProps.regionInfo.region);\n        }\n\n\n    }\n    receiveResult = (result) => {\n\n        // @inki if data has expired token\n        if(result.error && result.error.indexOf('Expired') > -1) {\n            _self.props.handleAlertInfo('error', result.error);\n            setTimeout(() => _self.gotoUrl('/logout'), 4000);\n            _self.props.handleComputeRefresh(false);\n            _self.props.handleLoadingSpinner(false);\n            return;\n        }\n\n        let regionGroup = (!result.error) ? reducer.groupBy(result, 'Region'):{};\n        if(Object.keys(regionGroup)[0]) {\n            _self._cloudletDummy = _self._cloudletDummy.concat(result)\n        }\n\n        this.loadCount ++;\n        console.log(\"20191119 ..cloudlet EditEditEdit\",rgn.length,\":::\",this.loadCount)\n        if(rgn.length == this.loadCount){\n            _self.countJoin()            \n        }\n        _self.props.handleLoadingSpinner(false);\n\n        // let join = null;\n        // if(result[0]['Edit']) {\n        //     join = this.state.devData.concat(result);\n        // } else {\n        //     join = this.state.devData;\n        // }\n        // this.loadCount ++;\n        // this.setState({devData:join})\n        // this.props.handleLoadingSpinner(false);\n        // if(rgn.length == this.loadCount-1){\n        //     return\n        // }\n\n    }\n\n    countJoin() {\n        let cloudlet = this._cloudletDummy;\n        console.log('20191119 ..cloudlet---', cloudlet)\n        _self.setState({devData:cloudlet,dataSort:false})\n        this.props.handleLoadingSpinner(false);\n    }\n\n\n    getDataDeveloper = (region,regionArr) => {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        this.setState({devData:[]})\n        this._cloudletDummy = [];\n        _self.loadCount = 0;\n        if(region !== 'All'){\n            rgn = [region]\n        } else {\n            rgn = (regionArr)?regionArr:this.props.regionInfo.region;\n        }\n\n        rgn.map((item, i) => {\n            //setTimeout(() => services.getMCService('ShowCloudlet',{token:store.userToken, region:item}, _self.receiveResult), 0)\n            services.getMCService('ShowCloudlet',{token:store.userToken, region:item}, _self.receiveResult)\n        })\n        this.props.handleLoadingSpinner(true);\n    }\n    getDataDeveloperSub = (region) => {\n        let _region = (region)?region:'All';\n        this.getDataDeveloper(_region);\n    }\n    render() {\n        const {shouldShowBox, shouldShowCircle} = this.state;\n        const { activeItem, viewMode } = this.state;\n        let randomValue = Math.round(Math.random() * 100);\n        return (\n            (viewMode === 'listView')?\n            <MapWithListView devData={this.state.devData} randomValue={randomValue} headerLayout={this.headerLayout} hiddenKeys={this.hiddenKeys} siteId={'Cloudlet'} userToken={this.userToken} dataRefresh={this.getDataDeveloperSub} dataSort={this.state.dataSort}></MapWithListView>\n            :\n            <PageDetailViewer data={this.state.detailData} page='cloudlet'/>\n        );\n    }\n\n};\nSiteFourPageCloudlet.defaultProps = {\n    changeRegion : ''\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(\"20191119 regionssInfo\",state.regionInfo,\":\", state.changeRegion)\n    let viewMode = null;\n    let detailData = null;\n\n    if(state.changeViewMode.mode && state.changeViewMode.mode.viewMode) {\n        viewMode = state.changeViewMode.mode.viewMode;\n        detailData = state.changeViewMode.mode.data;\n    }\n    let regionInfo = (state.regionInfo)?state.regionInfo:null;\n    return {\n        computeRefresh : (state.computeRefresh) ? state.computeRefresh: null,\n        changeRegion : state.changeRegion?state.changeRegion.region:null,\n        viewMode : viewMode, detailData:detailData,\n        regionInfo: regionInfo\n    }\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectData: (data) => { dispatch(actions.injectData(data))},\n        handleInjectDeveloper: (data) => { dispatch(actions.registDeveloper(data))},\n        handleComputeRefresh: (data) => { dispatch(actions.computeRefresh(data))},\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(sizeMe({ monitorHeight: true })(SiteFourPageCloudlet)));\n"]},"metadata":{},"sourceType":"module"}