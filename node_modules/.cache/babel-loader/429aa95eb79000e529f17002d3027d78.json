{"ast":null,"code":"/*\n{\n            \"result\": {\n                \"fields\": [],\n                \"key\": {\n                    \"operator_key\": {\n                        \"name\": \"TDG\"\n                    },\n                    \"name\": \"bonn-niantic\"\n                },\n                \"access_uri\": \"\",\n                \"location\": {\n                    \"latitude\": 50.737,\n                    \"longitude\": 7.098,\n                    \"horizontal_accuracy\": 0,\n                    \"vertical_accuracy\": 0,\n                    \"altitude\": 0,\n                    \"course\": 0,\n                    \"speed\": 0,\n                    \"timestamp\": {\n                        \"seconds\": \"0\",\n                        \"nanos\": 0\n                    }\n                },\n                \"ip_support\": \"IpSupportDynamic\",\n                \"static_ips\": \"\",\n                \"num_dynamic_ips\": 5\n            }\n        }\n//\n\n */\nimport * as moment from 'moment';\n\nvar trimData = function trimData(datas) {\n  var newData = datas.splice(0, 1);\n  return datas;\n};\n\nvar week_kr = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\nvar week = moment().format('E');\nvar getWeek = week_kr[week - 1];\n\nvar numberDes = function numberDes(a, b) {\n  return b - a;\n};\n\nvar generateData = function generateData(datas) {\n  var result = datas;\n  var values = [];\n\n  if (result) {\n    result.map(function (data, i) {\n      var dataResult = data.result || '-';\n      var Index = i;\n      var OperatorName = dataResult.key.name || '-';\n      var newRegistKey = ['OperatorName'];\n      values.push({\n        OperatorName: OperatorName,\n        Edit: newRegistKey\n      });\n    });\n  } else {\n    console.log('there is no result');\n  } //ascending or descending\n  //values.sort(numberDes);\n  //values.reverse();\n\n\n  return values;\n};\n\nvar retunDate = function retunDate(str) {\n  var year = str.substring(0, 4);\n  var month = str.substring(4, 6);\n  var day = str.substring(6, 8);\n  var hour = str.substring(8, 10);\n  var minute = str.substring(10, 12); //var second = str.substring(12, 14);\n\n  var date = new Date(year, month - 1, day, hour, minute);\n  return moment(date).format('hh:mm');\n};\n\nvar FormatComputeOper = function FormatComputeOper(props) {\n  return generateData(props);\n};\n\nexport default FormatComputeOper;","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/services/formatter/formatComputeOperator.js"],"names":["moment","trimData","datas","newData","splice","week_kr","week","format","getWeek","numberDes","a","b","generateData","result","values","map","data","i","dataResult","Index","OperatorName","key","name","newRegistKey","push","Edit","console","log","retunDate","str","year","substring","month","day","hour","minute","date","Date","FormatComputeOper","props"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;;AACA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACtB,MAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAe,CAAf,CAAd;AACA,SAAOF,KAAP;AACH,CAHD;;AAIA,IAAMG,OAAO,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAhB;AACA,IAAIC,IAAI,GAAGN,MAAM,GAAGO,MAAT,CAAgB,GAAhB,CAAX;AACA,IAAIC,OAAO,GAAGH,OAAO,CAAEC,IAAI,GAAC,CAAP,CAArB;;AACA,IAAMG,SAAS,GAAE,SAAXA,SAAW,CAACC,CAAD,EAAGC,CAAH;AAAA,SACbA,CAAC,GAACD,CADW;AAAA,CAAjB;;AAIA,IAAIE,YAAY,GAAG,SAAfA,YAAe,CAACV,KAAD,EAAW;AAE1B,MAAIW,MAAM,GAAGX,KAAb;AACA,MAAIY,MAAM,GAAG,EAAb;;AACA,MAAGD,MAAH,EAAU;AACNA,IAAAA,MAAM,CAACE,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP,EAAa;AACpB,UAAIC,UAAU,GAAGF,IAAI,CAACH,MAAL,IAAe,GAAhC;AACA,UAAIM,KAAK,GAAGF,CAAZ;AACA,UAAIG,YAAY,GAAGF,UAAU,CAACG,GAAX,CAAeC,IAAf,IAAuB,GAA1C;AACA,UAAIC,YAAY,GAAG,CAAC,cAAD,CAAnB;AAEAT,MAAAA,MAAM,CAACU,IAAP,CAAY;AAACJ,QAAAA,YAAY,EAACA,YAAd;AAA4BK,QAAAA,IAAI,EAACF;AAAjC,OAAZ;AACH,KAPD;AAQH,GATD,MASO;AACHG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GAfyB,CAiB1B;AAEA;AACA;;;AAEA,SAAOb,MAAP;AAEH,CAxBD;;AAyBA,IAAMc,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACvB,MAAIC,IAAI,GAAGD,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAX;AACA,MAAIC,KAAK,GAAGH,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAZ;AACA,MAAIE,GAAG,GAAGJ,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAV;AACA,MAAIG,IAAI,GAAGL,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAX;AACA,MAAII,MAAM,GAAGN,GAAG,CAACE,SAAJ,CAAc,EAAd,EAAkB,EAAlB,CAAb,CALuB,CAMvB;;AACA,MAAIK,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAT,EAAeE,KAAK,GAAC,CAArB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,MAAnC,CAAX;AACA,SAAOnC,MAAM,CAACoC,IAAD,CAAN,CAAa7B,MAAb,CAAoB,OAApB,CAAP;AACH,CATD;;AAUA,IAAM+B,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SACtB3B,YAAY,CAAC2B,KAAD,CADU;AAAA,CAA1B;;AAIA,eAAeD,iBAAf","sourcesContent":["/*\n{\n            \"result\": {\n                \"fields\": [],\n                \"key\": {\n                    \"operator_key\": {\n                        \"name\": \"TDG\"\n                    },\n                    \"name\": \"bonn-niantic\"\n                },\n                \"access_uri\": \"\",\n                \"location\": {\n                    \"latitude\": 50.737,\n                    \"longitude\": 7.098,\n                    \"horizontal_accuracy\": 0,\n                    \"vertical_accuracy\": 0,\n                    \"altitude\": 0,\n                    \"course\": 0,\n                    \"speed\": 0,\n                    \"timestamp\": {\n                        \"seconds\": \"0\",\n                        \"nanos\": 0\n                    }\n                },\n                \"ip_support\": \"IpSupportDynamic\",\n                \"static_ips\": \"\",\n                \"num_dynamic_ips\": 5\n            }\n        }\n//\n\n */\n\n\nimport * as moment from 'moment';\nlet trimData = (datas) => {\n    let newData = datas.splice(0,1);\n    return datas ;\n}\nconst week_kr = [\"월\",\"화\",\"수\",\"목\",\"금\",\"토\",\"일\"]\nlet week = moment().format('E');\nlet getWeek = week_kr[(week-1)];\nconst numberDes =(a,b)=> (\n    b-a\n)\n\nlet generateData = (datas) => {\n\n    let result = datas;\n    let values = [];\n    if(result){\n        result.map((data, i) => {\n            let dataResult = data.result || '-';\n            let Index = i;\n            let OperatorName = dataResult.key.name || '-';\n            let newRegistKey = ['OperatorName'];\n\n            values.push({OperatorName:OperatorName, Edit:newRegistKey})\n        })\n    } else {\n        console.log('there is no result')\n    }\n\n    //ascending or descending\n\n    //values.sort(numberDes);\n    //values.reverse();\n\n    return values\n\n}\nconst retunDate = (str) => {\n    var year = str.substring(0, 4);\n    var month = str.substring(4, 6);\n    var day = str.substring(6, 8);\n    var hour = str.substring(8, 10);\n    var minute = str.substring(10, 12);\n    //var second = str.substring(12, 14);\n    var date = new Date(year, month-1, day, hour, minute);\n    return moment(date).format('hh:mm');\n}\nconst FormatComputeOper = (props) => (\n    generateData(props)\n)\n\nexport default FormatComputeOper;\n"]},"metadata":{},"sourceType":"module"}