{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/timeseries.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { connect } from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\"; //https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\nvar TimeSeries =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimeSeries, _React$Component);\n\n  function TimeSeries() {\n    var _this;\n\n    _classCallCheck(this, TimeSeries);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeries).call(this));\n    _this.state = {\n      vWidth: 600,\n      vHeight: 300,\n      data: [],\n      chartData: [{\n        x: [1, 2, 3, 4, 5],\n        y: [1, 2, 4, 8, 16]\n      }],\n      layout: {\n        datarevision: 0\n      },\n      currentKey: '',\n      revision: 10\n    };\n    _this.colors = ['#22cccc', '#6699ff', '#ff710a', '#ffce03'];\n    _this.colorsErr = ['#22cccc', '#ff3355', '#6699ff', '#ffce03'];\n    return _this;\n  }\n\n  _createClass(TimeSeries, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.chartData && nextProps.series[0]) {\n        this.reloadChart(nextProps.chartData, nextProps.series[0], nextProps.label, nextProps.single);\n      }\n    }\n  }, {\n    key: \"reloadChart\",\n    value: function reloadChart(data, series, names, dataId) {\n      var _this2 = this;\n\n      var xaxis = series;\n\n      var _data = dataId ? data[parseInt(dataId)] : data;\n\n      var seriesData = null;\n\n      if (!dataId) {\n        seriesData = data.map(function (item, i) {\n          return {\n            type: 'scatter',\n            x: series,\n            y: item,\n            yaxis: i === 0 ? 'y' : i === 1 ? 'y2' : i === 2 ? 'y3' : 'y',\n            name: names && names.length > 0 ? names[i] : '',\n            line: {\n              color: _this2.props.error ? _this2.colorsErr[i] : _this2.colors[i],\n              width: 1\n            },\n            marker: {\n              size: 5\n            }\n          };\n        });\n      } else {\n        var sData = [];\n\n        _data.map(function (dt) {\n          sData.push(Number(dt));\n        });\n\n        seriesData = [{\n          type: 'scatter',\n          x: series,\n          y: sData,\n          yaxis: 'y',\n          name: names && names.length > 0 ? names[parseInt(dataId)] : '',\n          line: {\n            color: this.props.error ? this.colorsErr[parseInt(dataId)] : this.colors[parseInt(dataId)],\n            width: 1\n          },\n          marker: {\n            size: 5\n          }\n        }];\n      }\n\n      this.setState({\n        chartData: seriesData\n      });\n      this.setState({\n        revision: this.state.revision + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var error = this.props.error;\n      return React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, function (_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n        return React.createElement(\"div\", {\n          className: \"plotContainer\",\n          style: {\n            display: 'flex',\n            overflowY: 'hidden',\n            overflowX: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Plot, {\n          style: {\n            backgroundColor: 'transparent',\n            overflow: 'hidden'\n          },\n          data: _this3.state.chartData,\n          layout: {\n            title: null,\n            autosize: true,\n            width: width - _this3.props.marginRight,\n            height: 350,\n            margin: _this3.props.margin,\n            paper_bgcolor: 'transparent',\n            plot_bgcolor: 'transparent',\n            legend: {\n              x: 1.05,\n              y: 1\n            },\n            xaxis: {\n              showgrid: false,\n              zeroline: true,\n              showline: true,\n              mirror: 'ticks',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              domain: [0, 0.94]\n            },\n            yaxis: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)' //rangemode: 'tozero'\n\n            },\n            yaxis2: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              overlaying: 'y',\n              side: 'right',\n              position: _this3.props.y2Position,\n              range: _this3.props.y2Range //rangemode: 'tozero'\n\n            },\n            yaxis3: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              overlaying: 'y',\n              side: 'right',\n              position: _this3.props.y3Position,\n              range: _this3.props.y3Range\n            },\n            showlegend: _this3.props.showLegend,\n            points: {\n              width: 1\n            },\n            hoverlabel: {\n              bordercolor: 'rgba(255,255,255,.3)',\n              font: {\n                color: 'rgba(255,255,255,.7)'\n              }\n            },\n            datarevision: _this3.state.datarevision + 1\n          },\n          revision: _this3.state.revision,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return TimeSeries;\n}(React.Component);\n\nTimeSeries.defaultProps = {\n  margin: {\n    l: 50,\n    r: 15,\n    b: 35,\n    t: 5,\n    pad: 0\n  },\n  marginRight: 0,\n  showLegend: false,\n  y2Range: null,\n  y3Range: null,\n  y2Position: null,\n  y3Position: null\n}; //\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    currentKey: state.cityChanger.city\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(TimeSeries);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/timeseries.js"],"names":["React","Plot","ContainerDimensions","connect","actions","TimeSeries","state","vWidth","vHeight","data","chartData","x","y","layout","datarevision","currentKey","revision","colors","colorsErr","nextProps","nextContext","series","reloadChart","label","single","names","dataId","xaxis","_data","parseInt","seriesData","map","item","i","type","yaxis","name","length","line","color","props","error","width","marker","size","sData","dt","push","Number","setState","height","display","overflowY","overflowX","backgroundColor","overflow","title","autosize","marginRight","margin","paper_bgcolor","plot_bgcolor","legend","showgrid","zeroline","showline","mirror","gridcolor","gridwidth","zerolinecolor","zerolinewidth","linecolor","linewidth","domain","ticklen","tickcolor","yaxis2","overlaying","side","position","y2Position","range","y2Range","yaxis3","y3Position","y3Range","showlegend","showLegend","points","hoverlabel","bordercolor","font","Component","defaultProps","l","r","b","t","pad","mapStateToProps","ownProps","cityChanger","city","mapDispatchProps","dispatch","handleChangeCity","changeCity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport {connect} from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\";\n\n//https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\n\n\n\n\nclass TimeSeries extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            vWidth: 600,\n            vHeight: 300,\n            data:[],\n            chartData:[{\n                x: [1, 2, 3, 4, 5],\n                y: [1, 2, 4, 8, 16] }],\n            layout: {\n                datarevision: 0,\n            },\n            currentKey:'',\n            revision: 10,\n        }\n        this.colors = ['#22cccc', '#6699ff','#ff710a', '#ffce03' ];\n        this.colorsErr = ['#22cccc','#ff3355', '#6699ff', '#ffce03' ];\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.chartData && nextProps.series[0]) {\n            this.reloadChart(nextProps.chartData, nextProps.series[0], nextProps.label, nextProps.single);\n        }\n\n    }\n    reloadChart(data, series,names, dataId) {\n        let xaxis = series;\n\n        let _data = dataId ? data[parseInt(dataId)] : data;\n\n        let seriesData = null;\n\n        if(!dataId) {\n            seriesData = data.map((item, i) => (\n                {\n                    type: 'scatter',\n                    x: series,\n                    y: item,\n                    yaxis:(i === 0)?'y':(i === 1)?'y2':(i === 2)?'y3':'y',\n                    name:(names && names.length>0)?names[i]:'',\n                    line: {color: (this.props.error)?this.colorsErr[i]:this.colors[i],width:1},\n                    marker:{size:5}\n                }\n            ))\n        }  else {\n            let sData = [];\n\n            _data.map((dt) => {\n                sData.push(Number(dt))\n            })\n            seriesData = [{\n                type: 'scatter',\n                x: series,\n                y: sData,\n                yaxis:'y',\n                name:(names && names.length>0)?names[parseInt(dataId)]:'',\n                line: {color: (this.props.error)?this.colorsErr[parseInt(dataId)]:this.colors[parseInt(dataId)],width:1},\n                marker:{size:5}\n            }];\n\n        }\n\n        this.setState({\n            chartData:seriesData\n        })\n\n\n        this.setState({ revision: this.state.revision + 1 });\n    }\n\n    render() {\n        let {error} = this.props;\n        return (\n            <ContainerDimensions>\n                { ({ width, height }) =>\n                    <div  className=\"plotContainer\" style={{ display:'flex', overflowY:'hidden', overflowX:'auto'}}>\n                        <Plot style={{backgroundColor:'transparent', overflow:'hidden'}}\n                            data={this.state.chartData}\n                            layout={{\n                                title: null,\n                                autosize: true,\n                                width:width-this.props.marginRight,\n                                height:350,\n                                margin:this.props.margin,\n                                paper_bgcolor: 'transparent',\n                                plot_bgcolor: 'transparent',\n                                legend: {\n                                    x: 1.05,\n                                    y: 1\n                                },\n                                xaxis: {\n                                    showgrid: false,\n                                    zeroline: true,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth: 1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)',\n                                    domain: [0, 0.94]\n                                },\n                                yaxis: {\n                                    showgrid: true,\n                                    zeroline: false,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    ticklen: 3,\n                                    tickcolor: 'rgba(0,0,0,0)',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth:1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)',\n                                    //rangemode: 'tozero'\n                                },\n                                yaxis2:{\n                                    showgrid: true,\n                                    zeroline: false,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    ticklen: 3,\n                                    tickcolor: 'rgba(0,0,0,0)',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth:1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)',\n                                    overlaying: 'y',\n                                    side: 'right',\n                                    position:this.props.y2Position,\n                                    range:this.props.y2Range,\n                                    //rangemode: 'tozero'\n                                },\n                                yaxis3:{\n                                    showgrid: true,\n                                    zeroline: false,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    ticklen: 3,\n                                    tickcolor: 'rgba(0,0,0,0)',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth:1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)',\n                                    overlaying: 'y',\n                                    side: 'right',\n                                    position:this.props.y3Position,\n                                    range:this.props.y3Range\n                                },\n                                showlegend: this.props.showLegend,\n                                points: {\n                                    width: 1\n                                },\n                                hoverlabel: {\n                                    bordercolor: 'rgba(255,255,255,.3)',\n                                    font: {color:'rgba(255,255,255,.7)'},\n                                },\n                                datarevision: this.state.datarevision + 1\n\n                            }}\n                              revision={this.state.revision}\n                        />\n                    </div>\n\n                }\n            </ContainerDimensions>\n\n\n\n        );\n    }\n}\nTimeSeries.defaultProps = {\n    margin: {\n        l: 50,\n        r: 15,\n        b: 35,\n        t: 5,\n        pad: 0\n    },\n    marginRight:0,\n    showLegend:false,\n    y2Range:null,\n    y3Range:null,\n    y2Position:null,\n    y3Position:null\n}\n\n\n//\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        currentKey: state.cityChanger.city\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(TimeSeries);\n"]},"metadata":{},"sourceType":"module"}