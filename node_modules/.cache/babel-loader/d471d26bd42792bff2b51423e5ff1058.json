{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormAppInstDefault.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Table, List, Grid, Card, Header, Divider, Tab, Item, Popup, Icon, Input, Dropdown } from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset, stopSubmit, change } from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport './styles.css';\n\nvar makeOption = function makeOption(options) {\n  return options.map(function (value) {\n    return {\n      key: value,\n      text: value,\n      value: value\n    };\n  });\n};\n\nvar renderCheckbox = function renderCheckbox(field) {\n  return React.createElement(Form.Checkbox, {\n    toggle: true,\n    style: {\n      height: '33px',\n      paddingTop: '8px'\n    },\n    checked: !!field.input.value,\n    name: field.input.name,\n    label: field.label,\n    onChange: function onChange(e, _ref) {\n      var checked = _ref.checked;\n      return field.input.onChange(checked);\n    },\n    disabled: field.disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nvar renderSelect = function renderSelect(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      options = _ref2.options,\n      placeholder = _ref2.placeholder,\n      error = _ref2.error,\n      disabled = _ref2.disabled;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: label,\n    name: input.name,\n    onChange: function onChange(e, _ref3) {\n      var value = _ref3.value;\n      return input.onChange(value);\n    },\n    options: makeOption(options),\n    placeholder: placeholder,\n    value: input.value,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, error));\n};\n\nvar renderDropDown = function renderDropDown(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Dropdown, Object.assign({}, field.input, {\n    placeholder: field.placeholder,\n    fluid: true,\n    multiple: true,\n    selection: true,\n    options: makeOption(field.options),\n    onChange: function onChange(e, _ref4) {\n      var value = _ref4.value;\n      return field.input.onChange(value);\n    },\n    disabled: field.disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), field.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, field.error));\n};\n\nvar renderInput = function renderInput(_ref5) {\n  var input = _ref5.input,\n      placeholder = _ref5.placeholder,\n      label = _ref5.label,\n      type = _ref5.type,\n      error = _ref5.error,\n      disabled = _ref5.disabled;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, input, {\n    type: type,\n    label: label,\n    placeholder: placeholder,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, error));\n};\n\nvar renderInputDisabled = function renderInputDisabled(field) {\n  return React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label,\n    placeholder: field.placeholder,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nvar style = {\n  borderRadius: 0,\n  opacity: 0.7,\n  padding: '2em'\n};\n\nvar SiteFourCreateFormAppInstDefault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourCreateFormAppInstDefault, _React$Component);\n\n  function SiteFourCreateFormAppInstDefault(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourCreateFormAppInstDefault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourCreateFormAppInstDefault).call(this, props));\n\n    _this.getHelpPopup = function (value) {\n      return React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"question circle outline\",\n          size: \"large\",\n          style: {\n            lineHeight: 'unset',\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }),\n        content: value,\n        style: style,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      });\n    };\n\n    _this.handleRegionChange = function (e) {\n      _this.props.getOptionData(e);\n    };\n\n    _this.receiveResult = function (result) {\n      var arr = [];\n      result.map(function (item, i) {\n        arr.push(item.Organization);\n      });\n\n      _this.setState({\n        orgArr: arr\n      });\n    };\n\n    _this.cancelClick = function (e) {\n      e.preventDefault();\n\n      _this.props.gotoUrl();\n    };\n\n    _this.onHandleToggleChange = function (e) {\n      _this.setState({\n        ClusterDisable: e\n      });\n    };\n\n    _this.onHandleChange = function (key) {\n      if (key === 'Region') {\n        // this.props.dispatch(change('createAppFormDefault', 'Cloudlet', null));\n        // this.props.dispatch(change('createAppFormDefault', 'ClusterInst', null));\n        _this.handleInitialize(_this.props.data.data[0]);\n      }\n    };\n\n    _this.state = {\n      typeValue: '',\n      data: null,\n      regKey: null,\n      fieldKeys: null,\n      dataInit: false,\n      portArray: ['item'],\n      orgArr: [],\n      ClusterDisable: false,\n      title: 'Settings',\n      editToggle: false,\n      editDsb: false\n    };\n    return _this;\n  } // data.map((dt) => {\n\n\n  _createClass(SiteFourCreateFormAppInstDefault, [{\n    key: \"handleInitialize\",\n    value: function handleInitialize(data) {\n      var initData = [];\n      if (data.Cloudlet) data.Cloudlet = [data.Cloudlet];\n      if (data.OrganizationName) data.DeveloperName = data.OrganizationName;\n      if (data.ClusterInst) data.ClusterInst = [data.ClusterInst];\n\n      if (data.length) {} else {\n        this.props.initialize(data);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data && this.props.data.data.length) {\n        var keys = Object.keys(this.props.data.data[0]);\n        this.setState({\n          data: this.props.data.data[0],\n          regKeys: keys,\n          fieldKeys: this.props.data.keys,\n          pId: this.props.pId\n        });\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(this.props.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n\n      if (this.props.getUserRole == 'AdminManager') {\n        var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n        services.getMCService('showOrg', {\n          token: store.userToken\n        }, this.receiveResult);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.data && nextProps.data.data.length) {\n        var keys = Object.keys(nextProps.data.data[0]);\n        this.setState({\n          data: nextProps.data.data[0],\n          regKeys: keys,\n          fieldKeys: nextProps.data.keys,\n          pId: nextProps.pId\n        }); // submitSucceeded 초기화\n\n        if (this.props.toggleSubmit) {\n          this.props.dispatch(stopSubmit('createAppFormDefault', {}));\n        }\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(nextProps.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n\n      if (nextProps.data.editMode && nextProps.data.editData && !this.state.editToggle) {\n        this.setState({\n          editToggle: true,\n          editDsb: true\n        });\n        this.handleInitialize(nextProps.data.editData, nextProps.data.editMode);\n      }\n\n      if (nextProps.data.editMode) this.setState({\n        title: 'Update Settings'\n      });\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['label'] : null;\n    }\n  }, {\n    key: \"getNecessary\",\n    value: function getNecessary(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['necessary'] ? ' *' : '' : null;\n    }\n  }, {\n    key: \"onHandleSubmit\",\n    value: function onHandleSubmit() {\n      this.props.handleSubmit();\n      this.props.onSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          reset = _this$props.reset,\n          dimmer = _this$props.dimmer,\n          selected = _this$props.selected,\n          open = _this$props.open,\n          close = _this$props.close,\n          option = _this$props.option,\n          value = _this$props.value,\n          change = _this$props.change,\n          org = _this$props.org,\n          type = _this$props.type,\n          pId = _this$props.pId,\n          getUserRole = _this$props.getUserRole;\n      var _this$state = this.state,\n          data = _this$state.data,\n          regKeys = _this$state.regKeys,\n          fieldKeys = _this$state.fieldKeys,\n          title = _this$state.title;\n      var cType = type ? type.substring(0, 1).toUpperCase() + type.substring(1) : '';\n      return React.createElement(Item, {\n        className: \"content create-org\",\n        style: {\n          margin: '0 auto',\n          maxWidth: 1200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          borderBottom: '1px solid rgba(255,255,255,0.1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, title), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.onHandleSubmit();\n        },\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        style: {\n          flexDirection: 'column',\n          marginLeft: 10,\n          marginRight: 10,\n          alignContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, regKeys && regKeys.length > 0 ? regKeys.map(function (key, i) {\n        return _this2.getLabel(key, pId) ? !_this2.props.autoClusterDisable || key !== 'AutoClusterInst' && key !== 'ClusterInst' ? React.createElement(Grid.Row, {\n          columns: 3,\n          key: i,\n          className: 'createAppInst' + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 4,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, _this2.getLabel(key, pId), _this2.getNecessary(key, pId))), React.createElement(Grid.Column, {\n          width: 11,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, fieldKeys[pId][key]['type'] === 'RenderSelect' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          value: data[key],\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          onChange: function onChange() {\n            return _this2.onHandleChange(key);\n          },\n          disabled: fieldKeys[pId][key]['label'] == 'Region' && fieldKeys[pId][key]['disable'] == false ? true : false,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderDropDown' ? React.createElement(Field, {\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          component: renderDropDown,\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderCheckbox' ? React.createElement(Field, {\n          component: renderCheckbox,\n          value: data[key],\n          name: key,\n          onChange: function onChange(e) {\n            return _this2.onHandleToggleChange(e);\n          },\n          disabled: _this2.props.autoClusterDisable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderInputDisabled' ? getUserRole == 'AdminManager' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: 'Select Organization Name',\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          disabled: true,\n          component: renderInputDisabled,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderClusterDisabled' ? !_this2.state.ClusterDisable ? React.createElement(Field, {\n          component: renderDropDown,\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          value: data[key],\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          disabled: _this2.props.autoClusterDisable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          disabled: true,\n          component: renderInputDisabled,\n          type: \"input\",\n          name: key,\n          placeholder: 'autocluster',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          disabled: fieldKeys[pId][key]['disable'] == false ? true : false,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          width: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, fieldKeys[pId][key] && fieldKeys[pId][key]['tip'] ? _this2.getHelpPopup(fieldKeys[pId][key]['tip']) : null)) : null : null;\n      }) : '')), React.createElement(Form.Group, {\n        className: \"submitButtonGroup orgButton\",\n        id: \"submitButtonGroup\",\n        inline: true,\n        style: {\n          flexDirection: 'row',\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          marginRight: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.cancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        className: \"createAppInst8\",\n        primary: true,\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return SiteFourCreateFormAppInstDefault;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"createAppFormDefault\" // validate\n  // enableReinitialize: true\n\n})(SiteFourCreateFormAppInstDefault);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormAppInstDefault.js"],"names":["React","Fragment","Button","Form","Table","List","Grid","Card","Header","Divider","Tab","Item","Popup","Icon","Input","Dropdown","Field","reduxForm","initialize","reset","stopSubmit","change","MaterialIcon","services","makeOption","options","map","value","key","text","renderCheckbox","field","height","paddingTop","input","name","label","e","checked","onChange","disabled","renderSelect","placeholder","error","renderDropDown","renderInput","type","renderInputDisabled","style","borderRadius","opacity","padding","SiteFourCreateFormAppInstDefault","props","getHelpPopup","lineHeight","margin","handleRegionChange","getOptionData","receiveResult","result","arr","item","i","push","Organization","setState","orgArr","cancelClick","preventDefault","gotoUrl","onHandleToggleChange","ClusterDisable","onHandleChange","handleInitialize","data","state","typeValue","regKey","fieldKeys","dataInit","portArray","title","editToggle","editDsb","initData","Cloudlet","OrganizationName","DeveloperName","ClusterInst","length","keys","Object","regKeys","pId","getUserRole","store","localStorage","PROJECT_INIT","JSON","parse","getMCService","token","userToken","nextProps","toggleSubmit","dispatch","editMode","editData","handleSubmit","onSubmit","dimmer","selected","open","close","option","org","cType","substring","toUpperCase","maxWidth","borderBottom","onHandleSubmit","flexDirection","marginLeft","marginRight","alignContent","getLabel","autoClusterDisable","getNecessary","validError","indexOf","Component","form"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport {Button, Form, Table, List, Grid, Card, Header, Divider, Tab, Item, Popup, Icon, Input, Dropdown} from \"semantic-ui-react\";\n\nimport { Field, reduxForm, initialize, reset, stopSubmit, change } from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport './styles.css';\n\nconst makeOption =(options)=> (\n    options.map((value) =>(\n        {key:value, text:value, value:value}\n    ))\n)\n\nconst renderCheckbox = field => (\n    <Form.Checkbox toggle\n        style={{height:'33px', paddingTop:'8px'}}\n        checked={!!field.input.value}\n        name={field.input.name}\n        label={field.label}\n        onChange={(e, { checked }) => field.input.onChange(checked)}\n        disabled = {field.disabled}\n    />\n);\n\nconst renderSelect = ({ input, label, options, placeholder, error, disabled }) => (\n    <div>\n        <Form.Select\n            label={label}\n            name={input.name}\n            onChange={(e, { value }) => input.onChange(value)}\n            options={makeOption(options)}\n            placeholder={placeholder}\n            value={input.value}\n            disabled = {disabled}\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n);\n\nconst renderDropDown = field => (\n    <div>\n        <Form.Dropdown\n            {...field.input}\n            placeholder={field.placeholder}\n            fluid\n            multiple\n            selection\n            options={makeOption(field.options)}\n            onChange={(e, { value }) => field.input.onChange(value)}\n            disabled = {field.disabled}\n        />\n        {field.error && <span className=\"text-danger\">{field.error}</span>}\n    </div>\n);\n\nconst renderInput = ({ input, placeholder, label, type, error, disabled }) => (\n    <div>\n        <Form.Input\n            {...input}\n            type={type}\n            label={label}\n            placeholder={placeholder}\n            disabled = {disabled}\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\nconst renderInputDisabled = field => (\n    <Form.Input\n        {...field.input}\n        type={field.type}\n        label={field.label}\n        placeholder={field.placeholder}\n        disabled\n    />\n);\n\nconst style = {\n    borderRadius: 0,\n    opacity: 0.7,\n    padding:'2em'\n}\n\nclass SiteFourCreateFormAppInstDefault extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeValue:'',\n            data:null,\n            regKey:null,\n            fieldKeys:null,\n            dataInit:false,\n            portArray:['item'],\n            orgArr:[],\n            ClusterDisable:false,\n            title:'Settings',\n            editToggle:false,\n            editDsb:false\n        };\n\n    }\n\n    // data.map((dt) => {\n    handleInitialize(data) {\n        const initData = [];\n        if(data.Cloudlet) data.Cloudlet = [data.Cloudlet];\n        if(data.OrganizationName) data.DeveloperName = data.OrganizationName;\n        if(data.ClusterInst) data.ClusterInst = [data.ClusterInst];\n        if(data.length){\n\n        } else {\n            this.props.initialize(data);\n\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        if(this.props.data && this.props.data.data.length){\n            let keys = Object.keys(this.props.data.data[0])\n            this.setState({data:this.props.data.data[0], regKeys:keys, fieldKeys:this.props.data.keys, pId:this.props.pId})\n            if(!this.state.dataInit){\n                this.handleInitialize(this.props.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n        if(this.props.getUserRole == 'AdminManager') {\n            let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n            services.getMCService('showOrg',{token:store.userToken}, this.receiveResult)\n        }\n\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.data && nextProps.data.data.length){\n            let keys = Object.keys(nextProps.data.data[0])\n            this.setState({data:nextProps.data.data[0], regKeys:keys, fieldKeys:nextProps.data.keys, pId:nextProps.pId})\n            // submitSucceeded 초기화\n            if(this.props.toggleSubmit) {\n                this.props.dispatch(stopSubmit('createAppFormDefault',{}))\n            }\n            if(!this.state.dataInit){\n                this.handleInitialize(nextProps.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n\n        if(nextProps.data.editMode && nextProps.data.editData && !this.state.editToggle){\n            this.setState({editToggle:true, editDsb:true});\n            this.handleInitialize(nextProps.data.editData,nextProps.data.editMode);\n        }\n        \n        if(nextProps.data.editMode) this.setState({title:'Update Settings'})\n        \n    }\n\n    getLabel (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['label'] : null\n    }\n    getNecessary (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['necessary'] ? ' *':'' : null\n    }\n\n    getHelpPopup =(value)=> (\n        <Popup\n            trigger={<Icon name='question circle outline' size='large' style={{lineHeight:'unset', margin:'10px 0'}} />}\n            content={value}\n            style={style}\n            inverted\n        />\n    )\n    onHandleSubmit() {\n        this.props.handleSubmit();\n        this.props.onSubmit();\n    }\n\n    handleRegionChange = (e) => {\n        this.props.getOptionData(e)\n    }\n\n\n    receiveResult = (result) => {\n        let arr = [];\n        result.map((item,i) => {\n            arr.push(item.Organization);\n        })\n        this.setState({orgArr:arr});\n    }\n\n    cancelClick = (e) => {\n        e.preventDefault();\n        this.props.gotoUrl()\n    }\n\n    onHandleToggleChange = (e) => {\n        this.setState({ClusterDisable:e})\n    }\n\n    onHandleChange = (key) => {\n        if(key === 'Region'){\n            // this.props.dispatch(change('createAppFormDefault', 'Cloudlet', null));\n            // this.props.dispatch(change('createAppFormDefault', 'ClusterInst', null));\n            this.handleInitialize(this.props.data.data[0]);\n        }\n        \n    }\n    \n    render (){\n        const { handleSubmit, reset, dimmer, selected, open, close, option, value, change, org, type, pId, getUserRole } = this.props;\n        const { data, regKeys, fieldKeys, title } = this.state;\n        let cType = (type)?type.substring(0,1).toUpperCase() + type.substring(1):'';\n        return (\n\n            <Item className='content create-org' style={{margin:'0 auto', maxWidth:1200}}>\n                <Header style={{borderBottom:'1px solid rgba(255,255,255,0.1)'}}>{title}</Header>\n                <Fragment >\n                    <Form onSubmit={() => this.onHandleSubmit()} className={\"fieldForm\"} >\n                        <Form.Group widths=\"equal\" style={{flexDirection:'column', marginLeft:10, marginRight:10, alignContent:'space-around'}}>\n                            <Grid columns={2}>\n                                {\n                                    (regKeys && regKeys.length > 0) ?\n                                        regKeys.map((key, i) => (\n\n                                            (this.getLabel(key, pId))?\n                                                (!this.props.autoClusterDisable || (key !== 'AutoClusterInst' && key !== 'ClusterInst'))?\n                                                <Grid.Row columns={3} key={i} className={'createAppInst'+i}>\n\n                                                    <Grid.Column width={4} className='detail_item'>\n                                                        <div>{this.getLabel(key, pId)}{this.getNecessary(key, pId)}</div>\n                                                    </Grid.Column>\n                                                    <Grid.Column width={11}>\n                                                        {\n                                                            (fieldKeys[pId][key]['type'] === 'RenderSelect') ?\n                                                            <Field\n                                                                component={renderSelect}\n                                                                placeholder={'Select '+fieldKeys[pId][key]['label']}\n                                                                value={data[key]}\n                                                                options={fieldKeys[pId][key]['items']}\n                                                                name={key}\n                                                                onChange={()=>this.onHandleChange(key)}\n                                                                disabled={(fieldKeys[pId][key]['label'] == 'Region' && fieldKeys[pId][key]['disable'] == false)?true:false}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderDropDown') ?\n                                                            <Field\n                                                                placeholder={'Select '+fieldKeys[pId][key]['label'] }\n                                                                component={renderDropDown}\n                                                                options={fieldKeys[pId][key]['items']}\n                                                                name={key}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}\n                                                            />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderCheckbox') ?\n                                                            <Field\n                                                                component={renderCheckbox}\n                                                                value={data[key]}\n                                                                name={key}\n                                                                onChange={(e)=>this.onHandleToggleChange(e)}\n                                                                disabled={this.props.autoClusterDisable}\n                                                                />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderInputDisabled') ?\n                                                                (getUserRole == 'AdminManager') ?\n                                                                    <Field\n                                                                        component={renderSelect}\n                                                                        placeholder={'Select Organization Name'}\n                                                                        options={fieldKeys[pId][key]['items']}\n                                                                        name={key}\n                                                                        error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                                :\n                                                                    <Field\n                                                                        disabled\n                                                                        component={renderInputDisabled}\n                                                                        type=\"input\"\n                                                                        name={key}\n                                                                        value={data[key]}\n                                                                        />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderClusterDisabled') ?\n                                                                (!this.state.ClusterDisable) ?\n                                                                    <Field\n                                                                        component={renderDropDown}\n                                                                        placeholder={'Select '+fieldKeys[pId][key]['label']}\n                                                                        value={data[key]}\n                                                                        options={fieldKeys[pId][key]['items']}\n                                                                        name={key}\n                                                                        error={(this.props.validError.indexOf(key) !== -1)?'Required':''}\n                                                                        disabled={this.props.autoClusterDisable}\n                                                                        />\n                                                                :\n                                                                    <Field\n                                                                        disabled\n                                                                        component={renderInputDisabled}\n                                                                        type=\"input\"\n                                                                        name={key}\n                                                                        placeholder={'autocluster'}\n                                                                        />\n                                                            :\n                                                            <Field\n                                                                component={renderInput}\n                                                                type=\"input\"\n                                                                name={key}\n                                                                value={data[key]}\n                                                                disabled={(fieldKeys[pId][key]['disable'] == false)?true:false}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                        }\n                                                    </Grid.Column>\n                                                    <Grid.Column width={1}>\n                                                    {(fieldKeys[pId][key] && fieldKeys[pId][key]['tip']) ? this.getHelpPopup(fieldKeys[pId][key]['tip']):null}\n\n                                                    </Grid.Column>\n                                                </Grid.Row>\n                                                :null\n                                            : null\n                                        ))\n                                        : ''\n                                }\n                            </Grid>\n                        </Form.Group>\n                        <Form.Group className={\"submitButtonGroup orgButton\"} id={\"submitButtonGroup\"} inline style={{flexDirection:'row', marginLeft:10, marginRight:10}}>\n                            <Form.Group inline>\n                                {/*<Button onClick={()=>this.onHandleReset()}>Reset</Button>*/}\n                                <span style={{marginRight:'1em'}}>\n                                    <Button onClick={this.cancelClick}>\n                                        Cancel\n                                    </Button>\n                                </span>\n                                <Button\n                                    className='createAppInst8'\n                                    primary\n                                    positive\n                                    icon='checkmark'\n                                    labelPosition='right'\n                                    content=\"Create\"\n                                />\n                            </Form.Group>\n\n                        </Form.Group>\n                    </Form>\n                </Fragment>\n            </Item>\n        )\n        \n    }\n};\n\nexport default reduxForm({\n    form: \"createAppFormDefault\",\n    // validate\n    // enableReinitialize: true\n})(SiteFourCreateFormAppInstDefault);\n"]},"metadata":{},"sourceType":"module"}