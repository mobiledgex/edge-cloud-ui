{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourOrgaAdduser.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Table, List, Grid, Card, Header, Image } from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { Field, reduxForm, stopSubmit } from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport './styles.css';\n\nvar validate = function validate(values) {\n  console.log(\"validatedfsf\", values);\n  var errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  }\n\n  if (!values.orgName) {\n    errors.orgName = 'Required';\n  }\n\n  if (!values.orgType) {\n    errors.orgType = 'Required';\n  }\n\n  if (!values.selectRole) {\n    errors.selectRole = 'Required';\n  }\n\n  return errors;\n};\n\nvar roles = {\n  Developer: [{\n    Users: 'Manage',\n    Cloudlets: 'View',\n    Flavor: 'View',\n    'Cluster Instance': 'Manage',\n    Apps: 'Manage',\n    'App Instance': 'Manage'\n  }, {\n    Users: 'View',\n    Cloudlets: 'View',\n    Flavor: 'View',\n    'Cluster Instance': 'Manage',\n    Apps: 'Manage',\n    'App Instance': 'Manage'\n  }, {\n    Users: 'View',\n    Cloudlets: 'View',\n    Flavor: 'View',\n    'Cluster Instance': 'View',\n    Apps: 'View',\n    'App Instance': 'View'\n  }],\n  Operator: [{\n    Users: 'Manage',\n    Cloudlets: 'Manage',\n    Flavor: 'disabled',\n    'Cluster Instance': 'disabled',\n    Apps: 'disabled',\n    'App Instance': 'disabled'\n  }, {\n    Users: 'View',\n    Cloudlets: 'Manage',\n    Flavor: 'disabled',\n    'Cluster Instance': 'disabled',\n    Apps: 'disabled',\n    'App Instance': 'disabled'\n  }, {\n    Users: 'View',\n    Cloudlets: 'View',\n    Flavor: 'disabled',\n    'Cluster Instance': 'disabled',\n    Apps: 'disabled',\n    'App Instance': 'disabled'\n  }]\n};\n\nvar makeRoleList = function makeRoleList(selectedType, i) {\n  return React.createElement(List, {\n    divided: true,\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, Object.keys(roles[selectedType][i]).map(function (key) {\n    return React.createElement(List.Header, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: roles[selectedType][i][key] === 'Manage' ? 'rgba(255,255,255,.6)' : 'rgba(255,255,255,.6)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, key + \" : \" + roles[selectedType][i][key]));\n  }))));\n};\n\nvar items = [{\n  header: 'Manager',\n  description: \"Leverage agile frameworks to provide a robust synopsis \\n\\r for high level overviews.\",\n  meta: 'ROI: 30%'\n}, {\n  header: 'Contributor',\n  description: 'Bring to the table win-win survival strategies to ensure proactive domination.',\n  meta: 'ROI: 34%'\n}, {\n  header: 'Viewer',\n  description: 'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n  meta: 'ROI: 27%'\n}];\n\nvar renderSelect = function renderSelect(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref) {\n      var value = _ref.value;\n      return field.input.onChange(value);\n    },\n    options: field.options,\n    placeholder: field.placeholder,\n    value: field.input.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), field.meta.touched && (field.meta.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, field.meta.error) || field.meta.warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, field.meta.warning)));\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form.TextArea, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nvar renderInput = function renderInput(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), field.meta.touched && (field.meta.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, field.meta.error) || field.meta.warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, field.meta.warning)));\n};\n\nvar makeAdduser = function makeAdduser() {\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    columns: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: renderInput,\n    name: \"username\",\n    type: \"input\",\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      backgroundColor: '#ababab',\n      width: 50,\n      height: 23,\n      borderRadius: 3,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"ADD\")))));\n};\n\nvar makeListView = function makeListView() {\n  return React.createElement(Table, {\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Role\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Check\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"D\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"user 1\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: renderSelect,\n    name: \"selectRole\",\n    options: [{\n      key: \"m\",\n      text: \"Manager\",\n      value: \"male\"\n    }, {\n      key: \"c\",\n      text: \"Contributor\",\n      value: \"female\"\n    }, {\n      key: \"v\",\n      text: \"Viewer\",\n      value: \"viewer\"\n    }],\n    placeholder: \"Select Role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(MaterialIcon, {\n    icon: 'close',\n    size: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }))))));\n};\n\nvar userAvatar = ['assets/avatar/large/matthew.png', 'assets/avatar/large/elliot.jpg', 'assets/avatar/large/daniel.jpg', 'assets/avatar/large/jenny.jpg', 'assets/avatar/large/molly.png', 'assets/avatar/large/steve.jpg', 'assets/avatar/large/helen.jpg', 'assets/avatar/large/ade.jpg', 'assets/avatar/large/nan.jpg', 'assets/avatar/large/chris.jpg', 'assets/avatar/large/veronika.jpg', 'assets/avatar/large/stevie.jpg', 'assets/avatar/large/justen.jpg', 'assets/avatar/large/tom.jpg', 'assets/avatar/large/christian.jpg', 'assets/avatar/large/matt.jpg', 'assets/avatar/large/joe.jpg', 'assets/avatar/large/zoe.jpg'];\nvar avatarRandom = Math.floor(Math.random() * userAvatar.length);\n\nvar makeCardContent = function makeCardContent(item, i, type) {\n  return React.createElement(Grid.Row, {\n    style: {\n      display: 'flex',\n      flexGrow: '1',\n      marginBottom: '14px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, item['header']), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, type), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, makeRoleList(type, i)))));\n};\n\nvar _self = null;\n\nvar SiteFourOrgaAdduser =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourOrgaAdduser, _React$Component);\n\n  function SiteFourOrgaAdduser(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourOrgaAdduser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourOrgaAdduser).call(this, props));\n\n    _this.onHandleSubmit = function () {\n      _self.props.handleSubmit(); // setTimeout(() => {\n      //     //_self.props.dispatch(reset('orgaStepAddUser'));\n      //     // _self.props.dispatch(initialize('orgaStepAddUser', {\n      //     //     submitSucceeded: false\n      //     // }))\n      //     this.handleInitialize();\n      // },0);\n\n    };\n\n    _this.continueClick = function (e) {\n      e.preventDefault();\n\n      _this.props.nextstep(3);\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      typeValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(SiteFourOrgaAdduser, [{\n    key: \"handleInitialize\",\n    value: function handleInitialize() {\n      //let cType = this.props.type.substring(0,1).toUpperCase() + this.props.type.substring(1);\n      var initData = {\n        \"orgName\": this.props.org,\n        \"orgType\": this.props.type\n      };\n      this.props.initialize(initData);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleInitialize();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"twoProps\", nextProps);\n\n      if (this.props.toggleSubmit) {\n        this.props.dispatch(stopSubmit('orgaStepAddUser', {}));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          reset = _this$props.reset,\n          org = _this$props.org,\n          type = _this$props.type;\n      console.log(\"ororororo@@\", org, \":::\", type); //let cType = type.substring(0,1).toUpperCase() + type.substring(1);\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onHandleSubmit,\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Add Users to Your Organization!\"), React.createElement(Form.Group, {\n        widths: \"equal\",\n        style: {\n          flexDirection: 'column',\n          marginLeft: 10,\n          marginRight: 10,\n          alignContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        className: \"avatar_img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: userAvatar[avatarRandom],\n        width: \"250px\",\n        centered: true,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Username\")), React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: renderInput,\n        name: \"username\",\n        type: \"input\",\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"OrganizationName\")), React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: renderInput,\n        name: \"orgName\",\n        type: \"input\",\n        placeholder: org,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Type\")), React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: renderInput,\n        name: \"orgType\",\n        type: \"input\",\n        placeholder: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Role\")), React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: renderSelect,\n        lable: \"Role\",\n        name: \"selectRole\",\n        options: [{\n          key: \"m\",\n          text: \"Manager\",\n          value: \"Manager\"\n        }, {\n          key: \"c\",\n          text: \"Contributor\",\n          value: \"Contributor\"\n        }, {\n          key: \"v\",\n          text: \"Viewer\",\n          value: \"Viewer\"\n        }],\n        placeholder: \"Select Role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))))), React.createElement(Form.Group, {\n        className: \"submitButtonGroup orgButton\",\n        id: \"submitButtonGroup\",\n        inline: true,\n        style: {\n          flexDirection: 'row',\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Form.Button, {\n        primary: true,\n        positive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Form.Button, {\n        onClick: this.continueClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Skip\")))), React.createElement(Grid.Column, {\n        width: 5,\n        className: \"step_side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, items.map(function (item, i) {\n        return makeCardContent(item, i, type);\n      })))));\n    }\n  }]);\n\n  return SiteFourOrgaAdduser;\n}(React.Component);\n\n;\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    }\n  };\n};\n\nSiteFourOrgaAdduser = connect(null, mapDispatchProps)(SiteFourOrgaAdduser);\nexport default reduxForm({\n  form: \"orgaStepAddUser\",\n  validate: validate\n})(SiteFourOrgaAdduser);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourOrgaAdduser.js"],"names":["React","Fragment","Button","Form","Table","List","Grid","Card","Header","Image","connect","actions","Field","reduxForm","stopSubmit","MaterialIcon","validate","values","console","log","errors","username","orgName","orgType","selectRole","roles","Developer","Users","Cloudlets","Flavor","Apps","Operator","makeRoleList","selectedType","i","Object","keys","map","key","color","items","header","description","meta","renderSelect","field","label","input","name","e","value","onChange","options","placeholder","touched","error","warning","renderTextArea","renderInput","type","makeAdduser","backgroundColor","width","height","borderRadius","display","justifyContent","alignItems","cursor","makeListView","text","userAvatar","avatarRandom","Math","floor","random","length","makeCardContent","item","flexGrow","marginBottom","_self","SiteFourOrgaAdduser","props","onHandleSubmit","handleSubmit","continueClick","preventDefault","nextstep","state","typeValue","initData","org","initialize","handleInitialize","nextProps","toggleSubmit","dispatch","reset","flexDirection","marginLeft","marginRight","alignContent","Component","mapDispatchProps","handleLoadingSpinner","data","loadingSpinner","form"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {Button, Form, Table, List, Grid, Card, Header, Image} from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport {Field, reduxForm, stopSubmit} from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport './styles.css';\n\nconst validate = values => {\n    console.log(\"validatedfsf\",values)\n    const errors = {}\n    if (!values.username) {\n        errors.username = 'Required'\n    }\n    if (!values.orgName) {\n        errors.orgName = 'Required'\n    }\n    if (!values.orgType) {\n        errors.orgType = 'Required'\n    }\n    if (!values.selectRole) {\n        errors.selectRole = 'Required'\n    }\n    return errors\n}\nconst roles =\n    {\n        Developer: [\n            { Users:'Manage', Cloudlets:'View', Flavor:'View', 'Cluster Instance':'Manage', Apps:'Manage', 'App Instance':'Manage'},\n            { Users:'View', Cloudlets:'View', Flavor:'View', 'Cluster Instance':'Manage', Apps:'Manage', 'App Instance':'Manage'},\n            { Users:'View', Cloudlets:'View', Flavor:'View', 'Cluster Instance':'View', Apps:'View', 'App Instance':'View'}\n        ],\n        Operator: [\n            { Users:'Manage', Cloudlets:'Manage', Flavor:'disabled', 'Cluster Instance':'disabled', Apps:'disabled', 'App Instance':'disabled'},\n            { Users:'View', Cloudlets:'Manage', Flavor:'disabled', 'Cluster Instance':'disabled', Apps:'disabled', 'App Instance':'disabled'},\n            { Users:'View', Cloudlets:'View', Flavor:'disabled', 'Cluster Instance':'disabled', Apps:'disabled', 'App Instance':'disabled'},\n        ]\n    }\n\n\n\nconst makeRoleList = (selectedType, i) => (\n    <List divided verticalAlign='middle'>\n        <List.Item>\n            <List.Content>\n                {\n                    Object.keys(roles[selectedType][i]).map((key) => (\n                        <List.Header key={key}><div style={{color:((roles[selectedType][i][key] === 'Manage')?'rgba(255,255,255,.6)':'rgba(255,255,255,.6)')}}>{ key +\" : \"+ (roles[selectedType][i][key]) }</div></List.Header>\n                    ))\n                }\n\n            </List.Content>\n        </List.Item>\n    </List>\n)\n\nconst items = [\n    {\n        header: 'Manager',\n        description: `Leverage agile frameworks to provide a robust synopsis \\n\\r for high level overviews.`,\n        meta: 'ROI: 30%',\n    },\n    {\n        header: 'Contributor',\n        description: 'Bring to the table win-win survival strategies to ensure proactive domination.',\n        meta: 'ROI: 34%',\n    },\n    {\n        header: 'Viewer',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n]\n\n\nconst renderSelect = field => (\n    <div>\n        <Form.Select\n            label={field.label}\n            name={field.input.name}\n            onChange={(e, { value }) => field.input.onChange(value)}\n            options={field.options}\n            placeholder={field.placeholder}\n            value={field.input.value}\n        />\n        {field.meta.touched && ((field.meta.error && <span className=\"text-danger\">{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\n    </div>\n);\n\nconst renderTextArea = field => (\n    <Form.TextArea\n        {...field.input}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\nconst renderInput = field => (\n    <div>\n        <Form.Input\n            {...field.input}\n            type={field.type}\n            label={field.label}\n            placeholder={field.placeholder}\n        />\n        {field.meta.touched && ((field.meta.error && <span className=\"text-danger\">{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\n    </div>\n);\nconst makeAdduser = () => (\n    <Grid>\n        <Grid.Row columns={2}>\n            <Grid.Column>\n                <Field\n                    component={renderInput}\n                    name=\"username\"\n                    type=\"input\"\n                    placeholder=\"Username\"\n                />\n            </Grid.Column>\n            <Grid.Column>\n                <div style={{backgroundColor:'#ababab', width:50, height:23, borderRadius:3, display:'flex', justifyContent:'center', alignItems:'center', cursor:'pointer'}}><span>ADD</span></div>\n            </Grid.Column>\n        </Grid.Row>\n    </Grid>\n)\nconst makeListView = () => (\n    <Table striped>\n        <Table.Header>\n            <Table.Row>\n                <Table.HeaderCell>Type</Table.HeaderCell>\n                <Table.HeaderCell>Username</Table.HeaderCell>\n                <Table.HeaderCell>Role</Table.HeaderCell>\n                <Table.HeaderCell>Check</Table.HeaderCell>\n            </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n            <Table.Row>\n                <Table.Cell>D</Table.Cell>\n                <Table.Cell>user 1</Table.Cell>\n                <Table.Cell>\n                    <Field\n                        component={renderSelect}\n                        name=\"selectRole\"\n                        options={[\n                            { key: \"m\", text: \"Manager\", value: \"male\" },\n                            { key: \"c\", text: \"Contributor\", value: \"female\" },\n                            { key: \"v\", text: \"Viewer\", value: \"viewer\" }\n                        ]}\n                        placeholder=\"Select Role\"\n                    />\n                </Table.Cell>\n                <Table.Cell><div><MaterialIcon icon={'close'} size={40}></MaterialIcon></div></Table.Cell>\n            </Table.Row>\n        </Table.Body>\n    </Table>\n)\n\n\nconst userAvatar = [\n    'assets/avatar/large/matthew.png',\n    'assets/avatar/large/elliot.jpg',\n    'assets/avatar/large/daniel.jpg',\n    'assets/avatar/large/jenny.jpg',\n    'assets/avatar/large/molly.png',\n    'assets/avatar/large/steve.jpg',\n    'assets/avatar/large/helen.jpg',\n    'assets/avatar/large/ade.jpg',\n    'assets/avatar/large/nan.jpg',\n    'assets/avatar/large/chris.jpg',\n    'assets/avatar/large/veronika.jpg',\n    'assets/avatar/large/stevie.jpg',\n    'assets/avatar/large/justen.jpg',\n    'assets/avatar/large/tom.jpg',\n    'assets/avatar/large/christian.jpg',\n    'assets/avatar/large/matt.jpg',\n    'assets/avatar/large/joe.jpg',\n    'assets/avatar/large/zoe.jpg',\n\n\n]\n\nlet avatarRandom = Math.floor(Math.random() * userAvatar.length);\n\nconst makeCardContent = (item, i, type) => (\n    <Grid.Row style={{ display:'flex', flexGrow:'1', marginBottom:'14px' }}>\n        <Card>\n            <Card.Content>\n                <Card.Header>{item['header']}</Card.Header>\n                <Card.Meta>{type}</Card.Meta>\n                <Card.Description>\n                    {makeRoleList(type, i)}\n                </Card.Description>\n                {/*<div style={{position:'absolute', top:'1em', right:'1em', width:'auto', display:'flex', alignItem:'right', justifyContent:'right' }}>*/}\n                {/*    <MaterialIcon icon={(item['header'] === role)?'check_circle':'check_circle_outline'} size={40} color={(item['header'] === role)?'rgba(136,221,0,.9)':'rgba(255,255,255,.6)'}/>*/}\n                {/*</div>*/}\n            </Card.Content>\n        </Card>\n    </Grid.Row>\n)\n\nlet _self = null;\nclass SiteFourOrgaAdduser extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        this.state = {\n            typeValue:''\n        };\n       \n    }\n\n    handleInitialize() {\n        //let cType = this.props.type.substring(0,1).toUpperCase() + this.props.type.substring(1);\n        const initData = {\n          \"orgName\": this.props.org,\n          \"orgType\": this.props.type\n        };\n        this.props.initialize(initData);\n      }\n      \n    componentDidMount() {\n        this.handleInitialize();\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        console.log(\"twoProps\",nextProps)\n        if(this.props.toggleSubmit) {\n            this.props.dispatch(stopSubmit('orgaStepAddUser',{}))\n        }\n    }\n\n\n\n    onHandleSubmit = () => {\n        \n        \n        _self.props.handleSubmit();\n        // setTimeout(() => {\n        //     //_self.props.dispatch(reset('orgaStepAddUser'));\n        //     // _self.props.dispatch(initialize('orgaStepAddUser', {\n        //     //     submitSucceeded: false\n        //     // }))\n        //     this.handleInitialize();\n        // },0);\n        \n    }\n\n    continueClick = (e) => {\n        e.preventDefault();\n        this.props.nextstep(3)\n    }\n    \n    render (){\n        const { handleSubmit, reset, org, type } = this.props;\n        console.log(\"ororororo@@\",org,\":::\",type)\n        //let cType = type.substring(0,1).toUpperCase() + type.substring(1);\n        return (\n            <Fragment>\n                <Grid>\n                    <Grid.Row columns={2}>\n                        <Grid.Column width={11}>\n                            <Form onSubmit={this.onHandleSubmit} className={\"fieldForm\"}>\n                                <Header>Add Users to Your Organization!</Header>\n                                <Form.Group widths=\"equal\" style={{flexDirection:'column', marginLeft:10, marginRight:10, alignContent:'space-around'}}>\n                                    <Grid>\n                                        <Grid.Row className='avatar_img'>\n                                            <Grid.Column>\n                                                <Image src={userAvatar[avatarRandom]} width='250px' centered bordered/>\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                            <Grid.Column width={4}>\n                                                <div>Username</div>\n                                            </Grid.Column>\n                                            <Grid.Column width={12}>\n                                                <Field\n                                                    component={renderInput}\n                                                    name=\"username\"\n                                                    type=\"input\"\n                                                    placeholder=\"Username\"\n                                                />\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                            <Grid.Column width={4}>\n                                                <div>OrganizationName</div>\n                                            </Grid.Column>\n                                            <Grid.Column width={12}>\n                                                <Field\n                                                    component={renderInput}\n                                                    name=\"orgName\"\n                                                    type=\"input\"\n                                                    placeholder={org}\n                                                />\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                            <Grid.Column width={4}>\n                                                <div>Type</div>\n                                            </Grid.Column>\n                                            <Grid.Column width={12}>\n                                                <Field\n                                                component={renderInput}\n                                                name=\"orgType\"\n                                                type=\"input\"\n                                                placeholder={type}\n                                                />\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                            <Grid.Column width={4}>\n                                                <div>Role</div>\n                                            </Grid.Column>\n                                            <Grid.Column width={12}>\n                                                <Field\n                                                    component={renderSelect}\n                                                    lable=\"Role\"\n                                                    name=\"selectRole\"\n                                                    options={[\n                                                        { key: \"m\", text: \"Manager\", value: \"Manager\" },\n                                                        { key: \"c\", text: \"Contributor\", value: \"Contributor\" },\n                                                        { key: \"v\", text: \"Viewer\", value: \"Viewer\" }\n                                                    ]}\n                                                    placeholder=\"Select Role\"\n                                                />\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                    </Grid>\n                                </Form.Group>\n\n                                <Form.Group className={\"submitButtonGroup orgButton\"} id={\"submitButtonGroup\"} inline style={{flexDirection:'row', marginLeft:10, marginRight:10}}>\n                                    {/*<Form.Button >Preview</Form.Button>*/}\n                                    <Form.Button primary positive>Add</Form.Button>\n                                    <Form.Button onClick={this.continueClick}>Skip</Form.Button>\n\n                                </Form.Group>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width={5} className='step_side'>\n                                {items.map((item, i) => (\n                                    makeCardContent(item, i, type)\n                                ))}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Fragment>\n        )\n        \n    }\n};\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))}\n    };\n};\n\nSiteFourOrgaAdduser = connect(\n    null,\n    mapDispatchProps\n)(SiteFourOrgaAdduser);\n\nexport default reduxForm({\n    form: \"orgaStepAddUser\",\n    validate\n})(SiteFourOrgaAdduser);\n"]},"metadata":{},"sourceType":"module"}