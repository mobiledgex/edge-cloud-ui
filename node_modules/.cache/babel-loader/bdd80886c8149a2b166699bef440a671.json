{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormFlavorDefault.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Grid, Header, Item, Popup, Icon, Input } from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset, stopSubmit, change } from \"redux-form\";\nimport './styles.css';\n\nvar makeOption = function makeOption(options) {\n  var newOptions = options.sort(function (a, b) {\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n    return 0;\n  });\n  return newOptions.map(function (value) {\n    return {\n      key: value,\n      text: value,\n      value: value\n    };\n  });\n};\n\nvar renderSelect = function renderSelect(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      options = _ref.options,\n      placeholder = _ref.placeholder,\n      error = _ref.error,\n      disabled = _ref.disabled;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: label,\n    name: input.name,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return input.onChange(value);\n    },\n    options: makeOption(options),\n    placeholder: placeholder,\n    value: input.value,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, error));\n};\n\nvar renderInputNum = function renderInputNum(_ref3) {\n  var input = _ref3.input,\n      unit = _ref3.unit,\n      label = _ref3.label,\n      placeholder = _ref3.placeholder,\n      type = _ref3.type,\n      error = _ref3.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form.Field, Object.assign({}, input, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, label), unit ? React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return maxlength(e);\n    },\n    label: {\n      basic: true,\n      content: unit\n    },\n    labelPosition: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return maxlength(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error));\n};\n\nvar renderInput = function renderInput(_ref4) {\n  var input = _ref4.input,\n      placeholder = _ref4.placeholder,\n      label = _ref4.label,\n      type = _ref4.type,\n      error = _ref4.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, input, {\n    type: type,\n    label: label,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, error));\n};\n\nvar maxlength = function maxlength(e) {\n  if (e.target.value > 99999) {\n    e.target.value = e.target.value.slice(0, 5);\n  } else if (e.target.value <= 0) {\n    e.target.value = '';\n  }\n};\n\nvar style = {\n  borderRadius: 0,\n  opacity: 0.7,\n  padding: '2em'\n};\n\nvar SiteFourCreateFormFlavorDefault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourCreateFormFlavorDefault, _React$Component);\n\n  function SiteFourCreateFormFlavorDefault(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourCreateFormFlavorDefault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourCreateFormFlavorDefault).call(this, props));\n\n    _this.getHelpPopup = function (value) {\n      return React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"question circle outline\",\n          size: \"large\",\n          style: {\n            lineHeight: 'unset',\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }),\n        content: value,\n        style: style,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    };\n\n    _this.cancelClick = function (e) {\n      e.preventDefault();\n\n      _this.props.gotoUrl();\n    };\n\n    _this.onHandleChange = function (key) {\n      if (key === 'Region') {\n        _this.handleInitialize(_this.props.data.data[0]);\n      }\n    };\n\n    _this.state = {\n      data: null,\n      regKey: null,\n      fieldKeys: null,\n      dataInit: false\n    };\n    return _this;\n  } // data.map((dt) => {\n\n\n  _createClass(SiteFourCreateFormFlavorDefault, [{\n    key: \"handleInitialize\",\n    value: function handleInitialize(data) {\n      var initData = [];\n\n      if (data.length) {} else {\n        this.props.initialize(data);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data && this.props.data.data.length) {\n        var keys = Object.keys(this.props.data.data[0]);\n        this.setState({\n          data: this.props.data.data[0],\n          regKeys: keys,\n          fieldKeys: this.props.data.keys,\n          pId: this.props.pId\n        });\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(this.props.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.data && nextProps.data.data.length) {\n        var keys = Object.keys(nextProps.data.data[0]);\n        this.setState({\n          data: nextProps.data.data[0],\n          regKeys: keys,\n          fieldKeys: nextProps.data.keys,\n          pId: nextProps.pId\n        }); // submitSucceeded 초기화\n\n        if (this.props.toggleSubmit) {\n          this.props.dispatch(stopSubmit('createAppFormDefault', {}));\n        }\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(nextProps.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['label'] : null;\n    }\n  }, {\n    key: \"getNecessary\",\n    value: function getNecessary(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['necessary'] ? ' *' : '' : null;\n    }\n  }, {\n    key: \"onHandleSubmit\",\n    value: function onHandleSubmit() {\n      this.props.handleSubmit();\n      this.props.onSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          type = _this$props.type,\n          pId = _this$props.pId;\n      var _this$state = this.state,\n          data = _this$state.data,\n          regKeys = _this$state.regKeys,\n          fieldKeys = _this$state.fieldKeys;\n      return React.createElement(Item, {\n        className: \"content create-org\",\n        style: {\n          margin: '0 auto',\n          maxWidth: 1200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          borderBottom: '1px solid rgba(255,255,255,0.1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.onHandleSubmit();\n        },\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        style: {\n          flexDirection: 'column',\n          marginLeft: 10,\n          marginRight: 10,\n          alignContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, regKeys && regKeys.length > 0 ? regKeys.map(function (key, i) {\n        return _this2.getLabel(key, pId) ? React.createElement(Grid.Row, {\n          columns: 3,\n          key: i,\n          className: 'createFlavorForm' + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 4,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, _this2.getLabel(key, pId), _this2.getNecessary(key, pId))), React.createElement(Grid.Column, {\n          width: 11,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, fieldKeys[pId][key]['type'] === 'RenderSelect' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          value: data[key],\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          onChange: function onChange() {\n            return _this2.onHandleChange(key);\n          },\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'renderInputNum' ? React.createElement(Field, {\n          component: renderInputNum,\n          value: data[key],\n          name: key,\n          unit: fieldKeys[pId][key]['unit'],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }))) : null;\n      }) : '')), React.createElement(Form.Group, {\n        className: \"submitButtonGroup orgButton\",\n        id: \"submitButtonGroup\",\n        inline: true,\n        style: {\n          flexDirection: 'row',\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          marginRight: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.cancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        className: \"saveButton\",\n        primary: true,\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return SiteFourCreateFormFlavorDefault;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"createAppFormDefault\"\n})(SiteFourCreateFormFlavorDefault);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormFlavorDefault.js"],"names":["React","Fragment","Button","Form","Grid","Header","Item","Popup","Icon","Input","Field","reduxForm","initialize","reset","stopSubmit","change","makeOption","options","newOptions","sort","a","b","toLowerCase","map","value","key","text","renderSelect","input","label","placeholder","error","disabled","name","e","onChange","renderInputNum","unit","type","maxlength","basic","content","renderInput","target","slice","style","borderRadius","opacity","padding","SiteFourCreateFormFlavorDefault","props","getHelpPopup","lineHeight","margin","cancelClick","preventDefault","gotoUrl","onHandleChange","handleInitialize","data","state","regKey","fieldKeys","dataInit","initData","length","keys","Object","setState","regKeys","pId","nextProps","toggleSubmit","dispatch","handleSubmit","onSubmit","maxWidth","borderBottom","onHandleSubmit","flexDirection","marginLeft","marginRight","alignContent","i","getLabel","getNecessary","validError","indexOf","Component","form"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {Button, Form, Grid, Header, Item, Popup, Icon, Input} from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset, stopSubmit, change } from \"redux-form\";\nimport './styles.css';\n\nconst makeOption =(options)=> {\n\n    let newOptions = options.sort(\n\n        function(a, b) {\n            if (a.toLowerCase() < b.toLowerCase()) return -1;\n            if (a.toLowerCase() > b.toLowerCase()) return 1;\n            return 0;\n        }\n    );\n\n    return (\n\n        newOptions.map((value) => (\n            {key: value, text: value, value: value}\n        ))\n\n    )\n\n};\n\n\nconst renderSelect = ({ input, label, options, placeholder, error, disabled }) => (\n    <div>\n        <Form.Select\n            label={label}\n            name={input.name}\n            onChange={(e, { value }) => input.onChange(value)}\n            options={makeOption(options)}\n            placeholder={placeholder}\n            value={input.value}\n            disabled = {disabled}\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n);\n\nconst renderInputNum = ({ input, unit, label, placeholder, type, error }) => (\n    <div>\n        <Form.Field\n            {...input}\n            type={type}\n        >\n            <label>{label}</label>\n            {(unit)?\n            <Input fluid\n                   type=\"number\"\n                   onChange={(e) => maxlength(e)}\n                   label={{ basic: true, content: unit}}\n                   labelPosition='right'></Input>\n            :\n            <Input fluid type=\"number\" onChange={(e) => maxlength(e)}></Input>}\n        </Form.Field>\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\n\nconst renderInput = ({ input, placeholder, label, type, error }) => (\n    <div>\n        <Form.Input\n            {...input}\n            type={type}\n            label={label}\n            placeholder={placeholder}\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\n\nconst maxlength = (e) => {\n    if(e.target.value > 99999){\n        e.target.value = e.target.value.slice(0, 5);\n    } else if(e.target.value <= 0){\n        e.target.value = ''\n    }\n}\n\nconst style = {\n    borderRadius: 0,\n    opacity: 0.7,\n    padding:'2em'\n}\n\nclass SiteFourCreateFormFlavorDefault extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:null,\n            regKey:null,\n            fieldKeys:null,\n            dataInit:false\n        };\n    }\n\n    // data.map((dt) => {\n    handleInitialize(data) {\n        const initData = [];\n        if(data.length){\n\n        } else {\n            this.props.initialize(data);\n\n        }\n\n    }\n\n\n    componentDidMount() {\n        if(this.props.data && this.props.data.data.length){\n            let keys = Object.keys(this.props.data.data[0])\n            this.setState({data:this.props.data.data[0], regKeys:keys, fieldKeys:this.props.data.keys, pId:this.props.pId})\n            if(!this.state.dataInit){\n                this.handleInitialize(this.props.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n        \n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.data && nextProps.data.data.length){\n            let keys = Object.keys(nextProps.data.data[0])\n            this.setState({data:nextProps.data.data[0], regKeys:keys, fieldKeys:nextProps.data.keys, pId:nextProps.pId})\n            // submitSucceeded 초기화\n            if(this.props.toggleSubmit) {\n                this.props.dispatch(stopSubmit('createAppFormDefault',{}))\n            }\n            if(!this.state.dataInit){\n                this.handleInitialize(nextProps.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n        \n        \n    }\n\n    getLabel (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['label'] : null\n    }\n    getNecessary (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['necessary'] ? ' *':'' : null\n    }\n\n    getHelpPopup =(value)=> (\n        <Popup\n            trigger={<Icon name='question circle outline' size='large' style={{lineHeight:'unset', margin:'10px 0'}} />}\n            content={value}\n            style={style}\n            inverted\n        />\n    )\n    onHandleSubmit() {\n        this.props.handleSubmit();\n        this.props.onSubmit();\n    }\n\n    cancelClick = (e) => {\n        e.preventDefault();\n        this.props.gotoUrl()\n    }\n\n    onHandleChange = (key) => {\n        if(key === 'Region'){\n            this.handleInitialize(this.props.data.data[0]);\n        }\n        \n    }\n    \n    render (){\n        const {type, pId} = this.props;\n        const { data, regKeys, fieldKeys } = this.state;\n        return (\n\n            <Item className='content create-org' style={{margin:'0 auto', maxWidth:1200}}>\n                <Header style={{borderBottom:'1px solid rgba(255,255,255,0.1)'}}>Settings</Header>\n                <Fragment >\n                    <Form onSubmit={() => this.onHandleSubmit()} className={\"fieldForm\"} >\n                        <Form.Group widths=\"equal\" style={{flexDirection:'column', marginLeft:10, marginRight:10, alignContent:'space-around'}}>\n                            <Grid columns={2}>\n                                {\n                                    (regKeys && regKeys.length > 0) ?\n                                        regKeys.map((key, i) => (\n\n                                            (this.getLabel(key, pId))?\n                                                <Grid.Row columns={3} key={i} className={'createFlavorForm'+i}>\n\n                                                    <Grid.Column width={4} className='detail_item'>\n                                                        <div>{this.getLabel(key, pId)}{this.getNecessary(key, pId)}</div>\n                                                    </Grid.Column>\n                                                    <Grid.Column width={11}>\n                                                        {\n                                                            (fieldKeys[pId][key]['type'] === 'RenderSelect') ?\n                                                            <Field\n                                                                component={renderSelect}\n                                                                placeholder={'Select '+fieldKeys[pId][key]['label']}\n                                                                value={data[key]}\n                                                                options={fieldKeys[pId][key]['items']}\n                                                                name={key}\n                                                                onChange={()=>this.onHandleChange(key)}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                            :\n\n                                                            (fieldKeys[pId][key]['type'] === 'renderInputNum') ?\n                                                            <Field\n                                                                component={renderInputNum}\n                                                                value={data[key]}\n                                                                name={key}\n                                                                unit={fieldKeys[pId][key]['unit']}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                            :\n                                                            \n                                                            <Field\n                                                                component={renderInput}\n                                                                type=\"input\"\n                                                                name={key}\n                                                                value={data[key]}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                        }\n                                                    </Grid.Column>\n                                                    {/* <Grid.Column width={1}>\n                                                    {(fieldKeys[pId][key] && fieldKeys[pId][key]['tip']) ? this.getHelpPopup(fieldKeys[pId][key]['tip']):null}\n\n                                                    </Grid.Column> */}\n                                                </Grid.Row>\n                                            : null\n                                        ))\n                                        : ''\n                                }\n                            </Grid>\n                        </Form.Group>\n                        <Form.Group className={\"submitButtonGroup orgButton\"} id={\"submitButtonGroup\"} inline style={{flexDirection:'row', marginLeft:10, marginRight:10}}>\n                            <Form.Group inline>\n                                <span style={{marginRight:'1em'}}>\n                                    <Button onClick={this.cancelClick}>\n                                        Cancel\n                                    </Button>\n                                </span>\n                                <Button\n                                    className='saveButton'\n                                    primary\n                                    positive\n                                    icon='checkmark'\n                                    labelPosition='right'\n                                    content=\"Save\"\n                                />\n                            </Form.Group>\n\n                        </Form.Group>\n                    </Form>\n                </Fragment>\n            </Item>\n        )\n        \n    }\n};\n\nexport default reduxForm({\n    form: \"createAppFormDefault\"\n})(SiteFourCreateFormFlavorDefault);\n"]},"metadata":{},"sourceType":"module"}