{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registNewListItem.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Divider, Modal, Grid, Input, TextArea, Dropdown } from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './styles.css';\nimport RegistNewListInput from \"./registNewListInput\";\nimport * as service from '../services/service_compute_service'; //http://react-s-alert.jsdemo.be/\n\nimport Alert from 'react-s-alert';\nimport * as aggregate from \"../utils\";\nvar _self = null;\n\nvar RegistNewListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistNewListItem, _React$Component);\n\n  function RegistNewListItem() {\n    var _this;\n\n    _classCallCheck(this, RegistNewListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistNewListItem).call(this));\n\n    _this.handleChangeOne = function (e, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        dropdownValueOne: value\n      }); //reset list of sub dropwDown\n\n\n      _this.setCloudletList(value);\n    };\n\n    _this.handleChangeTwo = function (e, _ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        dropdownValueTwo: value\n      });\n\n      _this.setAppList(value);\n    };\n\n    _this.handleChangeThree = function (e, _ref3) {\n      var value = _ref3.value;\n\n      _this.setState({\n        dropdownValueThree: value\n      });\n    };\n\n    _this.handleChangeFour = function (e, _ref4) {\n      var value = _ref4.value;\n\n      _this.setState({\n        dropdownValueFour: value\n      });\n    };\n\n    _this.handleChangeFive = function (e, _ref5) {\n      var value = _ref5.value;\n\n      _this.setState({\n        dropdownValueFive: value\n      });\n    };\n\n    _this.handleChangeSix = function (e, _ref6) {\n      var value = _ref6.value;\n\n      _this.setState({\n        dropdownValueSix: value\n      });\n    };\n\n    _this.handleChangeOrgType = function (e, _ref7) {\n      var value = _ref7.value;\n\n      _this.setState({\n        dropdownValueOrgType: value\n      });\n    };\n\n    _this.handleChangeOrgRole = function (e, _ref8) {\n      var value = _ref8.value;\n\n      _this.setState({\n        dropdownValueOrgRole: value\n      });\n    };\n\n    _this.setCloudletList = function (operNm) {\n      var cl = [];\n      if (!_self.state.cloudletResult) return;\n\n      _self.state.cloudletResult[operNm].map(function (oper, i) {\n        if (i === 0) _self.setState({\n          dropdownValueThree: oper.CloudletName\n        });\n        cl.push({\n          key: i,\n          value: oper.CloudletName,\n          text: oper.CloudletName\n        });\n      });\n\n      _self.setState({\n        devOptionsThree: cl\n      });\n    };\n\n    _this.setAppList = function (devNm) {\n      var cl = [];\n      var vr = [];\n\n      _self.state.appResult[devNm].map(function (oper, i) {\n        if (i === 0) _self.setState({\n          dropdownValueFour: oper.AppName\n        });\n        cl.push({\n          key: i,\n          value: oper.AppName,\n          text: oper.AppName\n        });\n        vr.push({\n          key: i,\n          value: oper.Version,\n          text: oper.Version\n        });\n      });\n\n      _self.setState({\n        devOptionsFour: cl,\n        devOptionsFive: vr\n      });\n    };\n\n    _this.receiveSubmit = function (result, body) {\n      _this.props.refresh('All');\n\n      var paseData = result.data;\n\n      if (paseData.error) {\n        _this.props.handleAlertInfo('error', paseData.error);\n\n        return;\n      } else {\n        _this.props.handleAlertInfo('success', 'Flavor ' + body.params.flavor.key.name + ' created successfully');\n      }\n\n      _this.props.handleLoadingSpinner(false);\n    };\n\n    _this.onSubmit = function () {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      var serviceBody = {}; //playing spinner\n      //this.props.handleSpinner(true)\n      //TODO: 20190410 메뉴 별 구분 필요\n\n      if (localStorage.selectMenu === 'Flavors') {\n        var flavor = ['Region', 'FlavorName', 'RAM', 'vCPUs', 'Disk'];\n        var error = [];\n        flavor.map(function (item) {\n          if (!_this.props.flavorValue.values[item]) {\n            error.push(item);\n          }\n        });\n        var _this$props$submitDat = _this.props.submitData.registNewListInput.values,\n            FlavorName = _this$props$submitDat.FlavorName,\n            RAM = _this$props$submitDat.RAM,\n            vCPUs = _this$props$submitDat.vCPUs,\n            Disk = _this$props$submitDat.Disk,\n            Region = _this$props$submitDat.Region;\n        serviceBody = {\n          \"token\": store ? store.userToken : 'null',\n          \"params\": {\n            \"region\": Region,\n            \"flavor\": {\n              \"key\": {\n                \"name\": FlavorName\n              },\n              \"ram\": Number(RAM),\n              \"vcpus\": Number(vCPUs),\n              \"disk\": Number(Disk)\n            }\n          }\n        };\n\n        if (error.length == 0) {\n          _this.close();\n\n          _this.props.handleLoadingSpinner(true);\n\n          service.createNewFlavor('CreateFlavor', serviceBody, _this.receiveSubmit);\n        }\n\n        _this.setState({\n          validateError: error\n        });\n      }\n    };\n\n    _this.close = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.close();\n    };\n\n    _this.state = {\n      dummyData: [],\n      selected: {},\n      open: false,\n      dimmer: '',\n      devOptionsOne: [],\n      devOptionsTwo: [],\n      devOptionsThree: [],\n      devOptionsFour: [],\n      devOptionsFive: [],\n      devOptionsSix: [],\n      dropdownValueOne: '',\n      dropdownValueTwo: '',\n      dropdownValueThree: '',\n      dropdownValueFour: '',\n      dropdownValueFive: '',\n      dropdownValueSix: '',\n      dropdownValueOrgType: '',\n      dropdownValueOrgRole: '',\n      cloudletResult: null,\n      appResult: null,\n      devOptionsMF: [],\n      validateError: [],\n      devOptionsOrgType: [{\n        key: 'Developer',\n        value: 'Developer',\n        text: 'Developer'\n      }, {\n        key: 'Operator',\n        value: 'Operator',\n        text: 'Operator'\n      }],\n      devOptionsOrgRole: [{\n        key: 'Manager',\n        value: 'Manager',\n        text: 'Manager'\n      }, {\n        key: 'Contributor',\n        value: 'Contributor',\n        text: 'Contributor'\n      }, {\n        key: 'Viewer',\n        value: 'Viewer',\n        text: 'Viewer'\n      }]\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(RegistNewListItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n\n      if (nextProps.open) {\n        this.setState({\n          open: nextProps.open,\n          dimmer: nextProps.dimmer\n        });\n      }\n    }\n  }, {\n    key: \"receiveOper\",\n    value: function receiveOper(result) {\n      _self.setState({\n        devOptionsOne: result.map(function (oper, i) {\n          return {\n            key: i,\n            value: oper.OperatorName,\n            text: oper.OperatorName\n          };\n        })\n      });\n    }\n  }, {\n    key: \"receiveDev\",\n    value: function receiveDev(result) {\n      _self.setState({\n        devOptionsTwo: result.map(function (oper, i) {\n          return {\n            key: i,\n            value: oper.DeveloperName,\n            text: oper.DeveloperName\n          };\n        })\n      });\n    } //190429\n\n  }, {\n    key: \"receiveMF\",\n    value: function receiveMF(result) {\n      _self.setState({\n        devOptionsMF: result.map(function (item, i) {\n          return {\n            key: i,\n            value: item.FlavorName,\n            text: item.FlavorName\n          };\n        })\n      });\n    }\n  }, {\n    key: \"receiveCloudlet\",\n    value: function receiveCloudlet(result) {\n      var groupByOper = aggregate.groupBy(result, 'Operator');\n\n      _self.setState({\n        cloudletResult: groupByOper\n      });\n    }\n  }, {\n    key: \"receiveApp\",\n    value: function receiveApp(result) {\n      var groupByOper = aggregate.groupBy(result, 'DeveloperName');\n\n      _self.setState({\n        appResult: groupByOper\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          dimmer = _this$props.dimmer,\n          selected = _this$props.selected;\n      var regKeys = data[0] ? data[0]['Edit'] : null;\n      var optionArr = [this.state.devOptionsMF];\n      var valueArr = [this.state.dropdownValueMF];\n      var changeArr = [this.handleChangeMF];\n      return React.createElement(RegistNewListInput, {\n        handleSubmit: this.onSubmit,\n        data: data,\n        dimmer: dimmer,\n        selected: selected,\n        regKeys: regKeys,\n        open: this.state.open,\n        close: this.close,\n        option: optionArr,\n        value: valueArr,\n        change: changeArr,\n        validError: this.state.validateError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return RegistNewListItem;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var formFlavor = state.form.registNewListInput ? {\n    values: state.form.registNewListInput.values\n  } : {};\n  return {\n    locLong: state.mapCoordinatesLong ? state.mapCoordinatesLong : null,\n    locLat: state.mapCoordinatesLat ? state.mapCoordinatesLat : null,\n    computeItem: state.computeItem ? state.computeItem.item : null,\n    userToken: state.user ? state.user.userToken : null,\n    submitData: state.form ? state.form : null,\n    flavorValue: formFlavor\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleMapLong: function handleMapLong(data) {\n      dispatch(actions.mapCoordinatesLong(data));\n    },\n    handleMapLat: function handleMapLat(data) {\n      dispatch(actions.mapCoordinatesLat(data));\n    },\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistNewListItem));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registNewListItem.js"],"names":["React","Fragment","Button","Form","Divider","Modal","Grid","Input","TextArea","Dropdown","Field","reduxForm","withRouter","connect","actions","RegistNewListInput","service","Alert","aggregate","_self","RegistNewListItem","handleChangeOne","e","value","setState","dropdownValueOne","setCloudletList","handleChangeTwo","dropdownValueTwo","setAppList","handleChangeThree","dropdownValueThree","handleChangeFour","dropdownValueFour","handleChangeFive","dropdownValueFive","handleChangeSix","dropdownValueSix","handleChangeOrgType","dropdownValueOrgType","handleChangeOrgRole","dropdownValueOrgRole","operNm","cl","state","cloudletResult","map","oper","i","CloudletName","push","key","text","devOptionsThree","devNm","vr","appResult","AppName","Version","devOptionsFour","devOptionsFive","receiveSubmit","result","body","props","refresh","paseData","data","error","handleAlertInfo","params","flavor","name","handleLoadingSpinner","onSubmit","store","localStorage","PROJECT_INIT","JSON","parse","serviceBody","selectMenu","item","flavorValue","values","submitData","registNewListInput","FlavorName","RAM","vCPUs","Disk","Region","userToken","Number","length","close","createNewFlavor","validateError","open","dummyData","selected","dimmer","devOptionsOne","devOptionsTwo","devOptionsSix","devOptionsMF","devOptionsOrgType","devOptionsOrgRole","nextProps","nextContext","OperatorName","DeveloperName","groupByOper","groupBy","regKeys","optionArr","valueArr","dropdownValueMF","changeArr","handleChangeMF","Component","mapStateToProps","formFlavor","form","locLong","mapCoordinatesLong","locLat","mapCoordinatesLat","computeItem","user","mapDispatchProps","dispatch","handleMapLong","handleMapLat","loadingSpinner","mode","msg","alertInfo"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {Button, Form, Divider, Modal, Grid, Input, TextArea, Dropdown} from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './styles.css';\nimport RegistNewListInput from \"./registNewListInput\";\n\nimport * as service from '../services/service_compute_service';\n\n//http://react-s-alert.jsdemo.be/\nimport Alert from 'react-s-alert';\n\nimport * as aggregate from \"../utils\";\n\n\nlet _self = null;\nclass RegistNewListItem extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            dummyData:[],\n            selected:{},\n            open:false,\n            dimmer:'',\n            devOptionsOne:[],\n            devOptionsTwo:[],\n            devOptionsThree:[],\n            devOptionsFour:[],\n            devOptionsFive:[],\n            devOptionsSix:[],\n            dropdownValueOne:'',\n            dropdownValueTwo:'',\n            dropdownValueThree:'',\n            dropdownValueFour:'',\n            dropdownValueFive:'',\n            dropdownValueSix:'',\n            dropdownValueOrgType:'',\n            dropdownValueOrgRole:'',\n            cloudletResult:null,\n            appResult:null,\n            devOptionsMF:[],\n            validateError:[],\n            devOptionsOrgType:[\n                {\n                    key:'Developer',\n                    value:'Developer',\n                    text:'Developer',\n                },\n                {\n                    key:'Operator',\n                    value:'Operator',\n                    text:'Operator',\n                }\n            ],\n            devOptionsOrgRole:[\n                {\n                    key:'Manager',\n                    value:'Manager',\n                    text:'Manager',\n                },\n                {\n                    key:'Contributor',\n                    value:'Contributor',\n                    text:'Contributor',\n                },\n                {\n                    key:'Viewer',\n                    value:'Viewer',\n                    text:'Viewer',\n                },\n            ],\n        }\n\n        _self = this;\n    }\n\n    componentDidMount() {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n       \n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        if(nextProps.open) {\n            this.setState({open:nextProps.open, dimmer:nextProps.dimmer});\n        }\n    }\n    \n    handleChangeOne = (e, {value}) => {\n        this.setState({ dropdownValueOne: value })\n        //reset list of sub dropwDown\n        this.setCloudletList(value)\n    }\n    handleChangeTwo = (e, {value}) => {\n        this.setState({ dropdownValueTwo: value })\n        this.setAppList(value)\n    }\n    handleChangeThree = (e, {value}) => {\n        this.setState({ dropdownValueThree: value })\n    }\n    handleChangeFour = (e, {value}) => {\n        this.setState({ dropdownValueFour: value })\n    }\n    handleChangeFive = (e, {value}) => {\n        this.setState({ dropdownValueFive: value })\n    }\n    handleChangeSix = (e, {value}) => {\n        this.setState({ dropdownValueSix: value })\n    }\n    handleChangeOrgType = (e, {value}) => {\n        this.setState({ dropdownValueOrgType: value })\n    }\n    handleChangeOrgRole = (e, {value}) => {\n        this.setState({ dropdownValueOrgRole: value })\n    }\n    setCloudletList = (operNm) => {\n        let cl = [];\n        if(!_self.state.cloudletResult) return;\n        _self.state.cloudletResult[operNm].map((oper, i) => {\n            if(i === 0) _self.setState({dropdownValueThree: oper.CloudletName})\n            cl.push({ key: i, value: oper.CloudletName, text: oper.CloudletName })\n        })\n\n        _self.setState({devOptionsThree: cl})\n    }\n    setAppList = (devNm) => {\n        let cl = [];\n        let vr = [];\n        _self.state.appResult[devNm].map((oper, i) => {\n            if(i === 0) _self.setState({dropdownValueFour: oper.AppName})\n            cl.push({ key: i, value: oper.AppName, text: oper.AppName })\n            vr.push({ key: i, value: oper.Version, text: oper.Version })\n\n        })\n\n        _self.setState({devOptionsFour: cl, devOptionsFive: vr})\n    }\n\n    receiveOper(result) {\n        _self.setState({devOptionsOne: result.map((oper, i) => (\n                { key: i, value: oper.OperatorName, text: oper.OperatorName }\n            ))})\n    }\n    receiveDev(result) {\n        _self.setState({devOptionsTwo: result.map((oper, i) => (\n                { key: i, value: oper.DeveloperName, text: oper.DeveloperName }\n            ))})\n    }\n    //190429\n    receiveMF(result) {\n        _self.setState({devOptionsMF: result.map((item, i) => (\n            { key: i, value: item.FlavorName, text: item.FlavorName }\n        ))})\n    }\n\n    receiveCloudlet(result) {\n        let groupByOper = aggregate.groupBy(result, 'Operator')\n        _self.setState({cloudletResult:groupByOper})\n    }\n    receiveApp(result) {\n        let groupByOper = aggregate.groupBy(result, 'DeveloperName')\n        _self.setState({appResult:groupByOper})\n    }\n    receiveSubmit = (result, body) => {\n        \n        this.props.refresh('All')\n        let paseData = result.data;\n        if(paseData.error) {\n            this.props.handleAlertInfo('error',paseData.error)\n            return\n        } else {\n            this.props.handleAlertInfo('success','Flavor '+body.params.flavor.key.name+' created successfully')\n        }\n        this.props.handleLoadingSpinner(false);\n    }\n\n    onSubmit = () => {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        let serviceBody = {};\n\n        //playing spinner\n        //this.props.handleSpinner(true)\n\n\n\n        //TODO: 20190410 메뉴 별 구분 필요\n        if(localStorage.selectMenu === 'Flavors'){\n            const flavor = ['Region','FlavorName','RAM','vCPUs','Disk']\n            let error = [];\n            flavor.map((item) => {\n                if(!this.props.flavorValue.values[item]) {\n                    error.push(item)\n                }\n            })\n\n            const {FlavorName,RAM,vCPUs,Disk,Region} = this.props.submitData.registNewListInput.values\n            serviceBody = {\n                \"token\":store ? store.userToken : 'null',\n                \"params\": {\n                    \"region\":Region,\n                    \"flavor\":{\n                        \"key\":{\"name\":FlavorName},\n                        \"ram\":Number(RAM),\n                        \"vcpus\":Number(vCPUs),\n                        \"disk\":Number(Disk)\n                    }\n                }\n            }\n            if(error.length == 0) {\n                this.close();\n                this.props.handleLoadingSpinner(true);\n                service.createNewFlavor('CreateFlavor',serviceBody, this.receiveSubmit)\n            }\n            this.setState({validateError:error})\n        }\n\n    }\n    close = () => {\n        this.setState({ open: false })\n        this.props.close()\n    }\n\n    render() {\n        let {data, dimmer, selected} = this.props;\n        let regKeys = (data[0])?data[0]['Edit']:null;\n        \n        let optionArr = [this.state.devOptionsMF]\n        let valueArr = [this.state.dropdownValueMF]\n        let changeArr = [this.handleChangeMF]\n        return (\n            <RegistNewListInput\n                handleSubmit={this.onSubmit}\n                data={data} dimmer={dimmer}\n                selected={selected}\n                regKeys={regKeys}\n                open={this.state.open}\n                close={this.close}\n                option={optionArr}\n                value={valueArr}\n                change={changeArr}\n                validError={this.state.validateError}\n            >\n            </RegistNewListInput>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n\n    let formFlavor= state.form.registNewListInput\n    ? {\n        values: state.form.registNewListInput.values\n    }\n    : {};\n    return {\n        locLong : state.mapCoordinatesLong?state.mapCoordinatesLong:null,\n        locLat : state.mapCoordinatesLat?state.mapCoordinatesLat:null,\n        computeItem : state.computeItem?state.computeItem.item:null,\n        userToken : state.user?state.user.userToken:null,\n        submitData : state.form?state.form : null,\n        flavorValue:formFlavor\n    }\n};\n\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleMapLong: (data) => { dispatch(actions.mapCoordinatesLong(data))},\n        handleMapLat: (data) => { dispatch(actions.mapCoordinatesLat(data))},\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))}\n    };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(RegistNewListItem));\n"]},"metadata":{},"sourceType":"module"}