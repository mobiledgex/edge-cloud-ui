{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/sites/siteTwo.js\";\n//TODO:\n//tab 클릭 이벤트 받기 redux 구조\n//tab 클릭 이벤트 발생하면 페이지 넘기, 페이지 넘김 애니메이션 적용\nimport React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom'; //\n\nimport Datamap from '../libs/datamaps';\nimport SiteTwoPageOne from './siteTwo_page_one'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'; //header\n\nimport HeaderGlobal from '../container/headerGlobal'; //style\n\nimport Styles from './styles';\n\nvar ContainerOne = function ContainerOne(props) {\n  return React.createElement(SiteTwoPageOne, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nvar Footer = function Footer() {\n  return React.createElement(\"div\", {\n    className: \"console_footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"console_footer_img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nvar SiteTwo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteTwo, _React$Component);\n\n  function SiteTwo(props) {\n    var _this;\n\n    _classCallCheck(this, SiteTwo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteTwo).call(this, props));\n    _this.state = {\n      receivedData: null,\n      url: ''\n    };\n    return _this;\n  }\n\n  _createClass(SiteTwo, [{\n    key: \"clearData\",\n    value: function clearData() {\n      //TODO : 각 페이지에 데이터 전달하기 위해 redux 엑션 발생\n      this.props.handleInjectData(null);\n    }\n    /*********************\n     * Call Data from Server as REST\n     **********************/\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//test speech\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log('receive props ----- ' + JSON.stringify(nextProps));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      //console.log(\"업데이트 할지 말지: \" + JSON.stringify(nextProps) + \" \" + JSON.stringify(nextState));\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"mainCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ContainerOne, Object.assign({\n        ref: function ref(_ref) {\n          return _this2.container = _ref;\n        }\n      }, this.props, {\n        data: this.state.receivedData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(HeaderGlobal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SiteTwo;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var tab = state.tabChanger.tab;\n  return {\n    tabName: tab\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectData(data));\n    }\n  };\n};\n\nSiteTwo.defaultProps = {\n  tabName: 0,\n  onReceive: {\n    data: null\n  }\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(SiteTwo));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/sites/siteTwo.js"],"names":["React","Image","withRouter","Datamap","SiteTwoPageOne","connect","actions","HeaderGlobal","Styles","ContainerOne","props","Footer","SiteTwo","state","receivedData","url","handleInjectData","nextProps","console","log","JSON","stringify","nextState","ref","container","Component","mapStateToProps","tab","tabChanger","tabName","mapDispatchProps","dispatch","data","injectData","defaultProps","onReceive"],"mappings":";;;;;;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAEb,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFa;AAAA,CAArB;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACX;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADW;AAAA,CAAf;;IAMMC,O;;;;;AACF,mBAAYF,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;AACA,UAAKG,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAC,IADJ;AAETC,MAAAA,GAAG,EAAC;AAFK,KAAb;AAFc;AAMjB;;;;gCACW;AAER;AACA,WAAKL,KAAL,CAAWM,gBAAX,CAA4B,IAA5B;AAEH;AACD;;;;;;wCAGoB,CAChB;AAGH;;;8CACyBC,S,EAAW;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAnC;AAEH;;;0CACqBA,S,EAAWK,S,EAAW;AACxC;AACA,aAAO,KAAP;AACH;;;6BACQ;AAAA;;AACL,aACI;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,aAAAC,IAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,GAAiBD,IAArB;AAAA;AAAtB,SAAoD,KAAKb,KAAzD;AAAgE,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;;;EAtCiBd,KAAK,CAACyB,S;;AAuC3B;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AAC/B,MAAIc,GAAG,GAAGd,KAAK,CAACe,UAAN,CAAiBD,GAA3B;AACA,SAAO;AACHE,IAAAA,OAAO,EAAEF;AADN,GAAP;AAGH,CALD;;AAMA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACnC,SAAO;AACHf,IAAAA,gBAAgB,EAAE,0BAACgB,IAAD,EAAU;AAAED,MAAAA,QAAQ,CAACzB,OAAO,CAAC2B,UAAR,CAAmBD,IAAnB,CAAD,CAAR;AAAmC;AAD9D,GAAP;AAGH,CAJD;;AAKApB,OAAO,CAACsB,YAAR,GAAuB;AACnBL,EAAAA,OAAO,EAAG,CADS;AAEnBM,EAAAA,SAAS,EAAE;AAACH,IAAAA,IAAI,EAAC;AAAN;AAFQ,CAAvB;AAIA,eAAe9B,UAAU,CAACG,OAAO,CAACqB,eAAD,EAAkBI,gBAAlB,CAAP,CAA2ClB,OAA3C,CAAD,CAAzB","sourcesContent":["\n//TODO:\n//tab 클릭 이벤트 받기 redux 구조\n//tab 클릭 이벤트 발생하면 페이지 넘기, 페이지 넘김 애니메이션 적용\n\nimport React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n//\nimport Datamap from '../libs/datamaps';\nimport SiteTwoPageOne from './siteTwo_page_one';\n\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\n//header\nimport HeaderGlobal from '../container/headerGlobal';\n\n//style\nimport Styles from './styles';\n\n\nconst ContainerOne = (props) => (\n\n        <SiteTwoPageOne/>\n\n);\nconst Footer = () => (\n    <div className='console_footer'>\n        <div className='console_footer_img' />\n    </div>\n)\n\nclass SiteTwo extends React.Component  {\n    constructor(props){\n        super(props)\n        this.state = {\n            receivedData:null,\n            url:''\n        }\n    }\n    clearData() {\n\n        //TODO : 각 페이지에 데이터 전달하기 위해 redux 엑션 발생\n        this.props.handleInjectData(null);\n\n    }\n    /*********************\n     * Call Data from Server as REST\n     **********************/\n    componentDidMount() {\n        //test speech\n\n\n    }\n    componentWillReceiveProps(nextProps) {\n        console.log('receive props ----- '+JSON.stringify(nextProps))\n\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        //console.log(\"업데이트 할지 말지: \" + JSON.stringify(nextProps) + \" \" + JSON.stringify(nextState));\n        return false;\n    }\n    render() {\n        return (\n            <div id=\"mainCont\">\n                <ContainerOne ref={ref => this.container = ref} {...this.props} data={this.state.receivedData}></ContainerOne>\n                <HeaderGlobal />\n                <Footer></Footer>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    let tab = state.tabChanger.tab;\n    return {\n        tabName: tab\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleInjectData: (data) => { dispatch(actions.injectData(data))}\n    };\n};\nSiteTwo.defaultProps = {\n    tabName : 0,\n    onReceive: {data:null}\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(SiteTwo));\n"]},"metadata":{},"sourceType":"module"}