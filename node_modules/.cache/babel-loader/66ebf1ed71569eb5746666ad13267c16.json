{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/instanceListView.js\";\nimport React from 'react';\nimport { Modal, Grid, Header, Button, Table, Icon, Input, Divider, List } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport ContainerDimensions from 'react-container-dimensions';\nimport SelectFromTo from '../components/selectFromTo';\nimport RegistNewItem from './registNewItem';\nimport './styles.css';\nvar ReactGridLayout = WidthProvider(RGL);\nvar headerStyle = {\n  backgroundImage: 'url()'\n};\nvar horizon = 6;\nvar vertical = 20;\nvar layout = [{\n  \"w\": 19,\n  \"h\": 20,\n  \"x\": 0,\n  \"y\": 0,\n  \"i\": \"0\",\n  \"moved\": false,\n  \"static\": false,\n  \"title\": \"Developer\"\n}];\n\nvar InstanceListView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstanceListView, _React$Component);\n\n  function InstanceListView(props) {\n    var _this;\n\n    _classCallCheck(this, InstanceListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstanceListView).call(this, props));\n\n    _this.show = function (dim) {\n      return _this.setState({\n        dimmer: dim,\n        open: true\n      });\n    };\n\n    _this.close = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.handleInjectDeveloper(null);\n    };\n\n    _this.makeHeader_noChild = function (title) {\n      return React.createElement(Header, {\n        className: \"panel_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, title);\n    };\n\n    _this.makeHeader_date = function (title) {\n      return React.createElement(Header, {\n        className: \"panel_title\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexGrow: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, title), React.createElement(SelectFromTo, {\n        style: {\n          display: 'flex',\n          alignSelf: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    };\n\n    _this.makeHeader_select = function (title) {\n      return React.createElement(Header, {\n        className: \"panel_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, title);\n    };\n\n    _this.TableExampleVeryBasic = function () {\n      return React.createElement(List, {\n        divided: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, _this.state.dummyData.map(function (data, i) {\n        return React.createElement(List.Item, {\n          className: \"detail_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, data['Application Name']), React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          columns: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 3,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, Object.keys(data).map(function (key) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, key);\n        })), React.createElement(Grid.Column, {\n          width: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, Object.keys(data).map(function (key) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, data[key]);\n        })), React.createElement(Grid.Column, {\n          width: 3,\n          style: {\n            display: 'flex',\n            alignItems: 'flex-end',\n            justifyContent: 'flex-end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return alert('Are you sure?');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(Button, {\n          disabled: true,\n          color: \"teal\",\n          bId: 'edit_' + i,\n          onClick: function onClick() {\n            return _this.onHandleClick(true, data);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: 'edit',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })))))));\n      }));\n    };\n\n    var layout = _this.generateLayout();\n\n    _this.state = {\n      layout: layout,\n      open: false,\n      dimmer: true,\n      dummyData: [],\n      selected: {}\n    };\n    return _this;\n  }\n\n  _createClass(InstanceListView, [{\n    key: \"onHandleClick\",\n    value: function onHandleClick(dim, data) {\n      console.log('on handle click == ', data);\n      this.setState({\n        dimmer: dim,\n        open: true,\n        selected: data\n      });\n    }\n  }, {\n    key: \"generateDOM\",\n    value: function generateDOM() {\n      var _this2 = this;\n\n      return layout.map(function (item, i) {\n        return React.createElement(\"div\", {\n          className: \"round_panel\",\n          key: i,\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(ContainerDimensions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, function (_ref) {\n          var width = _ref.width,\n              height = _ref.height;\n          return React.createElement(\"div\", {\n            style: {\n              width: width,\n              height: height - 4,\n              display: 'flex',\n              overflowY: 'auto',\n              overflowX: 'hidden'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, _this2.TableExampleVeryBasic());\n        })));\n      });\n    }\n  }, {\n    key: \"generateLayout\",\n    value: function generateLayout() {\n      var p = this.props;\n      return layout;\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout) {\n      //this.props.onLayoutChange(layout);\n      console.log('changed layout = ', JSON.stringify(layout));\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      console.log('nextProps');\n\n      if (nextProps.accountInfo) {\n        this.setState({\n          dimmer: 'blurring',\n          open: true\n        });\n      }\n\n      if (nextProps.devData) {\n        this.setState({\n          dummyData: nextProps.devData\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        sizeH: 800\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          dimmer = _this$state.dimmer;\n      return React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, function (_ref2) {\n        var width = _ref2.width,\n            height = _ref2.height;\n        return React.createElement(\"div\", {\n          style: {\n            width: width,\n            height: height,\n            display: 'flex',\n            overflowY: 'auto',\n            overflowX: 'hidden'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(RegistNewItem, {\n          data: _this3.state.dummyData,\n          dimmer: _this3.state.dimmer,\n          open: _this3.state.open,\n          selected: _this3.state.selected,\n          close: _this3.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(ReactGridLayout, Object.assign({\n          layout: _this3.state.layout,\n          onLayoutChange: _this3.onLayoutChange\n        }, _this3.props, {\n          style: {\n            width: width,\n            height: height - 20\n          },\n          useCSSTransforms: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), _this3.generateDOM(open, dimmer, width, height)));\n      });\n    }\n  }]);\n\n  return InstanceListView;\n}(React.Component);\n\nInstanceListView.defaultProps = {\n  className: \"layout\",\n  items: 20,\n  rowHeight: 30,\n  cols: 12,\n  width: 1600\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var account = state.registryAccount.account;\n  console.log('account -- ' + account);\n  return account ? {\n    accountInfo: account + Math.random() * 10000\n  } : null;\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectDeveloper: function handleInjectDeveloper(data) {\n      dispatch(actions.registDeveloper(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(InstanceListView);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/instanceListView.js"],"names":["React","Modal","Grid","Header","Button","Table","Icon","Input","Divider","List","connect","actions","RGL","WidthProvider","ContainerDimensions","SelectFromTo","RegistNewItem","ReactGridLayout","headerStyle","backgroundImage","horizon","vertical","layout","InstanceListView","props","show","dim","setState","dimmer","open","close","handleInjectDeveloper","makeHeader_noChild","title","makeHeader_date","display","flexDirection","flexGrow","alignSelf","makeHeader_select","TableExampleVeryBasic","width","state","dummyData","map","data","i","Object","keys","key","alignItems","justifyContent","alert","onHandleClick","generateLayout","selected","console","log","item","height","overflowY","overflowX","p","JSON","stringify","nextProps","nextContext","accountInfo","devData","sizeH","onLayoutChange","generateDOM","Component","defaultProps","className","items","rowHeight","cols","mapStateToProps","account","registryAccount","Math","random","mapDispatchProps","dispatch","handleChangeSite","changeSite","registDeveloper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Grid, Header, Button, Table, Icon, Input, Divider, List } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport ContainerDimensions from 'react-container-dimensions'\n\nimport SelectFromTo from '../components/selectFromTo';\nimport RegistNewItem from './registNewItem';\n\nimport './styles.css';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\n\nconst headerStyle = {\n    backgroundImage: 'url()'\n}\nvar horizon = 6;\nvar vertical = 20;\nvar layout = [\n    {\"w\":19,\"h\":20,\"x\":0,\"y\":0,\"i\":\"0\",\"moved\":false,\"static\":false, \"title\":\"Developer\"},\n]\n\nclass InstanceListView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const layout = this.generateLayout();\n        this.state = {\n            layout,open: false,\n            dimmer:true,\n            dummyData:[],\n            selected:{}\n        };\n\n    }\n\n    onHandleClick(dim, data) {\n        console.log('on handle click == ', data)\n        this.setState({ dimmer:dim, open: true, selected:data })\n\n    }\n\n    show = (dim) => this.setState({ dimmer:dim, open: true })\n    close = () => {\n        this.setState({ open: false })\n        this.props.handleInjectDeveloper(null)\n    }\n\n    makeHeader_noChild =(title)=> (\n        <Header className='panel_title'>{title}</Header>\n    )\n    makeHeader_date =(title)=> (\n        <Header className='panel_title' style={{display:'flex',flexDirection:'row'}}>\n            <div style={{display:'flex', flexGrow:8}}>{title}</div>\n            <SelectFromTo style={{display:'flex', alignSelf:'flex-end'}}></SelectFromTo>\n        </Header>\n    )\n    makeHeader_select =(title)=> (\n        <Header className='panel_title'>{title}</Header>\n    )\n\n\n\n\n\n    generateDOM() {\n\n        return layout.map((item, i) => (\n            <div className=\"round_panel\" key={i} style={{display:'flex'}}>\n                <div className='grid_table'>\n                    <ContainerDimensions>\n                        { ({ width, height }) =>\n                            <div style={{width:width, height:height-4, display:'flex', overflowY:'auto', overflowX:'hidden'}}>{this.TableExampleVeryBasic()}</div>\n                        }\n                    </ContainerDimensions>\n                </div>\n            </div>\n        ))\n    }\n\n    generateLayout() {\n        const p = this.props;\n\n        return layout\n    }\n\n    onLayoutChange(layout) {\n        //this.props.onLayoutChange(layout);\n        console.log('changed layout = ', JSON.stringify(layout))\n    }\n    TableExampleVeryBasic = () => (\n        <List divided style={{width:'100%'}}>\n            {this.state.dummyData.map((data, i)=>(\n                <List.Item className='detail_list'>\n                    <List.Header>{data['Application Name']}</List.Header>\n                    <Grid>\n                        <Grid.Row columns={3}>\n                            <Grid.Column width={3} className='detail_item'>\n                                {Object.keys(data).map((key)=>(\n                                    <div>{key}</div>\n                                ))}\n                            </Grid.Column>\n                            <Grid.Column width={10}>\n                                {Object.keys(data).map((key)=>(\n                                    <div>{data[key]}</div>\n                                ))}\n                            </Grid.Column>\n                            <Grid.Column width={3} style={{display:'flex', alignItems:'flex-end', justifyContent:'flex-end'}}>\n                                <div>\n                                    <Button onClick={() => alert('Are you sure?')}>Delete</Button>\n                                    <Button disabled color='teal' bId={'edit_'+i} onClick={() => this.onHandleClick(true, data)}><Icon name={'edit'}/></Button>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </List.Item>\n            ))}\n        </List>\n    )\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('nextProps')\n        if(nextProps.accountInfo){\n            this.setState({ dimmer:'blurring', open: true })\n        }\n        if(nextProps.devData) {\n            this.setState({dummyData:nextProps.devData})\n        }\n    }\n    componentDidMount() {\n        this.setState({sizeH:800})\n    }\n\n    render() {\n        const { open, dimmer } = this.state;\n        return (\n\n            <ContainerDimensions>\n                { ({ width, height }) =>\n                    <div style={{width:width, height:height, display:'flex', overflowY:'auto', overflowX:'hidden'}}>\n                        <RegistNewItem data={this.state.dummyData} dimmer={this.state.dimmer} open={this.state.open} selected={this.state.selected} close={this.close}/>\n                        <ReactGridLayout\n                            layout={this.state.layout}\n                            onLayoutChange={this.onLayoutChange}\n                            {...this.props}\n                            style={{width:width, height:height-20}}\n                            useCSSTransforms={false}\n                        >\n                            {this.generateDOM(open, dimmer, width, height)}\n                        </ReactGridLayout>\n                    </div>\n                }\n            </ContainerDimensions>\n\n        );\n    }\n    static defaultProps = {\n        className: \"layout\",\n        items: 20,\n        rowHeight: 30,\n        cols: 12,\n        width: 1600\n    };\n}\n\nconst mapStateToProps = (state) => {\n    let account = state.registryAccount.account;\n    console.log('account -- '+account)\n\n    return (account)?{\n        accountInfo: account + Math.random()*10000\n    }:null;\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectDeveloper: (data) => { dispatch(actions.registDeveloper(data))}\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(InstanceListView);\n\n"]},"metadata":{},"sourceType":"module"}