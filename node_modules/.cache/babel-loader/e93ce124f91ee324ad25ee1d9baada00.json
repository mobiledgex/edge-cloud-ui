{"ast":null,"code":"import axios from 'axios-jsonp-pro';\nimport Influx from 'influx';\nimport FormatCPUMEMUsage from './formatter/formatCPUMEMUsage';\nimport FormatNetworkIO from './formatter/formatNetworkIO';\nimport FormatFILEUsage from './formatter/formatFILEUsage';\nvar gUrl = 'http://dashboard.mobiledgex.net:9090/api/v1/query?query=';\n/*\n신공항    : 097 <Integer>\n북인천    : 098 <Integer>\n청라      : 099 <Integer>\n전체      : ALL <Integer>\n*/\n\nvar areaCode = ['097', '098', '099', 'ALL'];\n/*\nhttp://dashboard.mobiledgex.net:9090/api/v1/query?query=sum%20(irate(node_network_receive_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)\nhttp://dashboard.mobiledgex.net:9090/api/v1/query?query=sum%20(irate(node_network_transmit_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)\n\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/operator\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/app\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/appinst\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/developer\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cluster\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\n*/\n\nvar siteAddress = {\n  cpuUsage: '100%20-%20(avg%20by%20(instance)%20(irate(node_cpu_seconds_total%7Bjob%3D%22prometheus%22%2Cmode%3D%22idle%22%7D%5B5m%5D))%20*%20100)',\n  memoryUsage: '100%20-%20((node_memory_MemAvailable_bytes%7Bjob%3D%22prometheus%22%7D%20*%20100)%20%2F%20node_memory_MemTotal_bytes%7Bjob%3D%22prometheus%22%7D)',\n  networkTraffic_recv: 'sum%20(irate(node_network_receive_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)',\n  networkTraffic_send: 'sum%20(irate(node_network_transmit_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)',\n  filesystemUsage: '100%20-%20((node_filesystem_avail_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D%20*%20100)%20%2F%20node_filesystem_size_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D)'\n}; /////////////////\n// below script is just test on local\n/////////////////\n// export function getHipassMonitor(resource, hId, callback, every) {\n//     console.log('request data as global area code == '+global.areaCode)\n//     let area = '';\n//     switch(gobal.areaCode) {\n//         case '/site1': area = areaCode[0]; break;\n//         case '/site2': area = areaCode[1]; break;\n//         case '/site3': area = areaCode[2]; break;\n//     }\n//     let ajaxcall = () => axios.get('http://localhost:3004/'+resource).then(response => {\n//         callback(response.data);\n//         //if(every) setTimeout(ajaxcall, 1000*every);\n//     });\n//     setTimeout(ajaxcall, 100);\n// }\n\nvar services = {};\n\nfunction getUrl(resource) {\n  var area = '';\n\n  switch (global.areaCode.mainPath) {\n    case '/site1':\n      area = areaCode[0];\n      break;\n\n    case '/site2':\n      area = areaCode[1];\n      break;\n\n    case '/site3':\n      area = areaCode[2];\n      break;\n  }\n\n  services.currentSite = global.areaCode.mainPath;\n  return gUrl + siteAddress[resource] + '&officeNum=' + area;\n}\n\nvar ajaxcall0 = null;\nexport function getStatusCPU(callback, every, stop) {\n  //console.log('request data as global area code == '+global.areaCode)\n  var url = gUrl + siteAddress.cpuUsage;\n  var responseData = null;\n\n  var start = function start() {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      responseData = FormatCPUMEMUsage(data);\n      callback(responseData);\n    });\n  }; //start();\n\n\n  axios.jsonp(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    responseData = FormatCPUMEMUsage(response);\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getStatusMEM(callback, every, stop) {\n  //console.log('request data as global area code == '+global.areaCode)\n  var url = gUrl + siteAddress.memoryUsage;\n  var responseData = null;\n\n  var start = function start() {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      responseData = FormatCPUMEMUsage(data);\n      callback(responseData);\n    });\n  }; //start();\n\n\n  axios.jsonp(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    responseData = FormatCPUMEMUsage(response);\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getStatusNET(callback, every, stop) {\n  var url1 = gUrl + siteAddress.networkTraffic_recv;\n  var url2 = gUrl + siteAddress.networkTraffic_send;\n  var responseData1 = null,\n      responseData2 = null; //console.log('network url == ', url1, url2)\n\n  var start = function start() {\n    if (stop) {\n      return;\n    }\n\n    fetch(url1).then(function (response) {\n      return response.json();\n    }).then(function (data1) {\n      responseData1 = FormatNetworkIO(data1);\n\n      if (responseData1 && responseData2) {\n        //console.log('res data 1-- '+responseData1)\n        callback(responseData1, responseData2);\n      }\n    });\n    fetch(url2).then(function (response) {\n      return response.json();\n    }).then(function (data2) {\n      responseData2 = FormatNetworkIO(data2);\n\n      if (responseData1 && responseData2) {\n        //console.log('res data 2-- '+responseData2)\n        callback(responseData1, responseData2);\n      }\n    });\n  }; //start();\n\n}\nexport function getStatusFilesys(callback, every, stop) {\n  //console.log('request data as global area code == '+global.areaCode)\n  var url = gUrl + siteAddress.filesystemUsage;\n  var responseData = null;\n\n  var start = function start() {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      responseData = FormatFILEUsage(data);\n      callback(responseData);\n    });\n  }; //start();\n\n\n  axios.jsonp(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    responseData = FormatFILEUsage(response);\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n} //////////////////////////////////\n// curl -X POST...\n\n/*\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/operator\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/app\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/appinst\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/developer\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cluster\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\n*/\n//////////////////////////////////\n\nexport function getPublicAccountKey(resource, rId, callback) {\n  var url = gUrl + resource; ///////////// Fetch\n  //https://github.com/camsong/fetch-jsonp\n  // fetchJsonp(url, {\n  //     jsonpCallback: 'callback',\n  // })\n  // .then(function(response) {\n  //     return response.json()\n  // }).then(function(json) {\n  //     console.log('parsed json', json)\n  //     callback(json)\n  // }).catch(function(ex) {\n  //     console.log('parsing failed', ex)\n  // })\n  ///////////// Axios\n  //https://www.npmjs.com/package/axios-jsonp-pro\n\n  axios.jsonp(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    console.log('axios json p == ' + JSON.stringify(response));\n    callback(response);\n  }).catch(function (error) {\n    console.log('axios json p error == ' + error);\n  });\n}\nexport function postUserAccount(resource, userInfo, callback) {\n  var url = gUrl + resource + '&securedUserid=' + userInfo.securedUserid + '&securedPasswd=' + userInfo.securedPasswd;\n  var params = {\n    securedUserid: userInfo.securedUserid,\n    securedPasswd: userInfo.securedPasswd,\n    headers: {\n      'Acces-Control-Allow-Origin': '*'\n    }\n  };\n  axios.jsonp(url, params).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    console.log(JSON.stringify(response));\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getLoginStatus(resource, callback) {\n  var url = gUrl + resource;\n  axios.jsonp(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    console.log(JSON.stringify(response));\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/services/index.js"],"names":["axios","Influx","FormatCPUMEMUsage","FormatNetworkIO","FormatFILEUsage","gUrl","areaCode","siteAddress","cpuUsage","memoryUsage","networkTraffic_recv","networkTraffic_send","filesystemUsage","services","getUrl","resource","area","global","mainPath","currentSite","ajaxcall0","getStatusCPU","callback","every","stop","url","responseData","start","fetch","then","response","json","data","jsonp","catch","error","console","log","getStatusMEM","getStatusNET","url1","url2","responseData1","responseData2","data1","data2","getStatusFilesys","getPublicAccountKey","rId","JSON","stringify","postUserAccount","userInfo","securedUserid","securedPasswd","params","headers","getLoginStatus"],"mappings":"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","sourcesContent":["\nimport axios from 'axios-jsonp-pro';\nimport Influx from 'influx';\n\nimport FormatCPUMEMUsage from './formatter/formatCPUMEMUsage';\nimport FormatNetworkIO from './formatter/formatNetworkIO';\nimport FormatFILEUsage from './formatter/formatFILEUsage';\n\nlet gUrl = 'http://dashboard.mobiledgex.net:9090/api/v1/query?query=';\n\n/*\n신공항    : 097 <Integer>\n북인천    : 098 <Integer>\n청라      : 099 <Integer>\n전체      : ALL <Integer>\n*/\nlet areaCode = ['097', '098', '099', 'ALL'];\n\n/*\nhttp://dashboard.mobiledgex.net:9090/api/v1/query?query=sum%20(irate(node_network_receive_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)\nhttp://dashboard.mobiledgex.net:9090/api/v1/query?query=sum%20(irate(node_network_transmit_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)\n\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/operator\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/app\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/appinst\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/developer\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cluster\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\n*/\n\nlet siteAddress = {\n    cpuUsage: '100%20-%20(avg%20by%20(instance)%20(irate(node_cpu_seconds_total%7Bjob%3D%22prometheus%22%2Cmode%3D%22idle%22%7D%5B5m%5D))%20*%20100)',\n    memoryUsage: '100%20-%20((node_memory_MemAvailable_bytes%7Bjob%3D%22prometheus%22%7D%20*%20100)%20%2F%20node_memory_MemTotal_bytes%7Bjob%3D%22prometheus%22%7D)',\n    networkTraffic_recv: 'sum%20(irate(node_network_receive_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)',\n    networkTraffic_send: 'sum%20(irate(node_network_transmit_packets_total%7Bjob%3D%22prometheus%22%7D%5B5m%5D))%20by%20(instance)',\n    filesystemUsage: '100%20-%20((node_filesystem_avail_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D%20*%20100)%20%2F%20node_filesystem_size_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D)'\n}\n\n\n/////////////////\n// below script is just test on local\n/////////////////\n// export function getHipassMonitor(resource, hId, callback, every) {\n//     console.log('request data as global area code == '+global.areaCode)\n//     let area = '';\n//     switch(gobal.areaCode) {\n//         case '/site1': area = areaCode[0]; break;\n//         case '/site2': area = areaCode[1]; break;\n//         case '/site3': area = areaCode[2]; break;\n//     }\n//     let ajaxcall = () => axios.get('http://localhost:3004/'+resource).then(response => {\n//         callback(response.data);\n//         //if(every) setTimeout(ajaxcall, 1000*every);\n//     });\n//     setTimeout(ajaxcall, 100);\n// }\n\nlet services = {};\nfunction getUrl(resource) {\n    let area = '';\n    switch(global.areaCode.mainPath) {\n        case '/site1': area = areaCode[0]; break;\n        case '/site2': area = areaCode[1]; break;\n        case '/site3': area = areaCode[2]; break;\n    }\n    services.currentSite = global.areaCode.mainPath;\n    return gUrl+siteAddress[resource]+'&officeNum='+area;\n}\n\n\nlet ajaxcall0 = null;\nexport function getStatusCPU(callback, every, stop) {\n    //console.log('request data as global area code == '+global.areaCode)\n    let url = gUrl + siteAddress.cpuUsage;\n    let responseData = null\n    var start = () => {\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                responseData = FormatCPUMEMUsage(data)\n                callback(responseData);\n            });\n    }\n\n    //start();\n\n    axios.jsonp(url)\n        .then(response => response.json())\n        .then(function (response) {\n            responseData = FormatCPUMEMUsage(response)\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n}\nexport function getStatusMEM(callback, every, stop) {\n    //console.log('request data as global area code == '+global.areaCode)\n    let url = gUrl + siteAddress.memoryUsage;\n    let responseData = null\n    var start = () => {\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                responseData = FormatCPUMEMUsage(data)\n                callback(responseData);\n            });\n    }\n    //start();\n\n    axios.jsonp(url)\n        .then(response => response.json())\n        .then(function (response) {\n            responseData = FormatCPUMEMUsage(response)\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getStatusNET(callback, every, stop) {\n\n    let url1 = gUrl + siteAddress.networkTraffic_recv;\n    let url2 = gUrl + siteAddress.networkTraffic_send;\n    let responseData1 = null, responseData2 = null\n    //console.log('network url == ', url1, url2)\n\n    const start = () => {\n        if(stop){\n            return;\n        }\n        fetch(url1)\n            .then(response => response.json())\n            .then(data1 => {\n                responseData1 = FormatNetworkIO(data1)\n                if(responseData1 && responseData2){\n                    //console.log('res data 1-- '+responseData1)\n                    callback(responseData1, responseData2);\n                }\n\n            });\n        fetch(url2)\n            .then(response => response.json())\n            .then(data2 => {\n                responseData2 = FormatNetworkIO(data2)\n                if(responseData1 && responseData2){\n                    //console.log('res data 2-- '+responseData2)\n                    callback(responseData1, responseData2);\n                }\n            });\n    }\n    //start();\n\n}\nexport function getStatusFilesys(callback, every, stop) {\n    //console.log('request data as global area code == '+global.areaCode)\n    let url = gUrl + siteAddress.filesystemUsage;\n    let responseData = null\n    var start = () => {\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                responseData = FormatFILEUsage(data)\n                callback(responseData);\n            });\n    }\n    //start();\n\n    axios.jsonp(url)\n        .then(response => response.json())\n        .then(function (response) {\n            responseData = FormatFILEUsage(response)\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n//////////////////////////////////\n// curl -X POST...\n/*\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/operator\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/app\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/appinst\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/developer\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\ncurl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cluster\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\n*/\n//////////////////////////////////\n\nexport function getPublicAccountKey(resource, rId, callback) {\n\n    let url = gUrl+resource;\n\n    ///////////// Fetch\n    //https://github.com/camsong/fetch-jsonp\n    // fetchJsonp(url, {\n    //     jsonpCallback: 'callback',\n    // })\n    // .then(function(response) {\n    //     return response.json()\n    // }).then(function(json) {\n    //     console.log('parsed json', json)\n    //     callback(json)\n    // }).catch(function(ex) {\n    //     console.log('parsing failed', ex)\n    // })\n\n    ///////////// Axios\n    //https://www.npmjs.com/package/axios-jsonp-pro\n    axios.jsonp(url)\n        .then(response => response.json())\n    .then(function (response) {\n        console.log('axios json p == '+JSON.stringify(response));\n        callback(response)\n    })\n    .catch(function (error) {\n        console.log('axios json p error == '+error);\n    });\n\n\n\n}\n\nexport function postUserAccount(resource, userInfo, callback) {\n    let url = gUrl+resource+'&securedUserid='+userInfo.securedUserid+'&securedPasswd='+userInfo.securedPasswd;\n    let params = {\n        securedUserid: userInfo.securedUserid,\n        securedPasswd: userInfo.securedPasswd,\n        headers:{\n            'Acces-Control-Allow-Origin': '*'\n        }\n    };\n\n    axios.jsonp(url, params)\n        .then(response => response.json())\n    .then(function (response) {\n        console.log(JSON.stringify(response));\n        callback(response)\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n}\nexport function getLoginStatus(resource, callback) {\n    let url = gUrl+resource;\n\n    axios.jsonp(url)\n        .then(response => response.json())\n    .then(function (response) {\n        console.log(JSON.stringify(response));\n        callback(response)\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}