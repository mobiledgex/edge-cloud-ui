{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/timeseriesFlow.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { connect } from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\"; //https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\nvar TimeSeriesFlow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimeSeriesFlow, _React$Component);\n\n  function TimeSeriesFlow() {\n    var _this;\n\n    _classCallCheck(this, TimeSeriesFlow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeriesFlow).call(this));\n    _this.state = {\n      vWidth: 600,\n      vHeight: 300,\n      data: [],\n      chartData: [{\n        x: [1, 2, 3, 4, 5],\n        y: [1, 2, 4, 8, 16]\n      }],\n      layout: {\n        datarevision: 0\n      },\n      currentKey: '',\n      revision: 0\n    };\n    _this.colors = ['#22cccc', '#6699ff', '#ffce03', '#ff710a'];\n    return _this;\n  }\n\n  _createClass(TimeSeriesFlow, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.chartData && nextProps.series[0]) {\n        this.reloadChart(nextProps.chartData, nextProps.series[0], nextProps.label, nextProps.lineLimit);\n      }\n    }\n  }, {\n    key: \"reloadChart\",\n    value: function reloadChart(data, series, names, lineLimit) {\n      var _this2 = this;\n\n      var xaxis = series;\n      var seriesData = data.map(function (item, i) {\n        return {\n          type: 'scatter',\n          x: series,\n          y: item,\n          name: names && names.length > 0 ? names[i] : '',\n          line: {\n            color: _this2.colors[i],\n            width: 1\n          },\n          marker: {\n            size: 5\n          }\n        };\n      });\n      this.setState({\n        chartData: seriesData\n      }); // this.setState({\n      //     data:seriesData\n      // })\n\n      this.setState({\n        revision: this.state.revision + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ContainerDimensions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (_ref) {\n        var width = _ref.width,\n            height = _ref.height;\n        return React.createElement(\"div\", {\n          className: \"plotContainer\",\n          style: {\n            width: width,\n            height: height - 2,\n            display: 'flex',\n            overflowY: 'hidden',\n            overflowX: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Plot, {\n          style: {\n            backgroundColor: 'transparent',\n            overflow: 'hidden',\n            width: width,\n            height: height\n          },\n          data: _this3.state.chartData,\n          layout: {\n            title: null,\n            autosize: false,\n            width: width + _this3.props.marginRight,\n            height: height,\n            margin: _this3.props.margin,\n            paper_bgcolor: 'transparent',\n            plot_bgcolor: 'transparent',\n            xaxis: {\n              showgrid: false,\n              zeroline: true,\n              showline: true,\n              mirror: 'ticks',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)'\n            },\n            yaxis: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)'\n            },\n            yaxis2: {\n              showgrid: true,\n              zeroline: false,\n              showline: true,\n              mirror: 'ticks',\n              ticklen: 3,\n              tickcolor: 'rgba(0,0,0,0)',\n              gridcolor: 'rgba(255,255,255,.05)',\n              gridwidth: 1,\n              zerolinecolor: 'rgba(255,255,255,0)',\n              zerolinewidth: 1,\n              linecolor: 'rgba(255,255,255,.2)',\n              linewidth: 1,\n              color: 'rgba(255,255,255,.4)',\n              overlaying: 'y',\n              side: 'right'\n            },\n            showlegend: false,\n            points: {\n              width: 1\n            },\n            hoverlabel: {\n              bordercolor: 'rgba(255,255,255,.3)',\n              font: {\n                color: 'rgba(255,255,255,.7)'\n              }\n            },\n            datarevision: _this3.state.datarevision + 1\n          },\n          revision: _this3.state.revision,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return TimeSeriesFlow;\n}(React.Component);\n\nTimeSeriesFlow.defaultProps = {\n  margin: {\n    l: 40,\n    r: 20,\n    b: 40,\n    t: 5,\n    pad: 0\n  },\n  marginRight: 0\n}; //\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    currentKey: state.cityChanger.city\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeCity: function handleChangeCity(data) {\n      dispatch(actions.changeCity(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(TimeSeriesFlow);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/charts/plotly/timeseriesFlow.js"],"names":["React","Plot","ContainerDimensions","connect","actions","TimeSeriesFlow","state","vWidth","vHeight","data","chartData","x","y","layout","datarevision","currentKey","revision","colors","nextProps","nextContext","series","reloadChart","label","lineLimit","names","xaxis","seriesData","map","item","i","type","name","length","line","color","width","marker","size","setState","height","display","overflowY","overflowX","backgroundColor","overflow","title","autosize","props","marginRight","margin","paper_bgcolor","plot_bgcolor","showgrid","zeroline","showline","mirror","gridcolor","gridwidth","zerolinecolor","zerolinewidth","linecolor","linewidth","yaxis","ticklen","tickcolor","yaxis2","overlaying","side","showlegend","points","hoverlabel","bordercolor","font","Component","defaultProps","l","r","b","t","pad","mapStateToProps","ownProps","cityChanger","city","mapDispatchProps","dispatch","handleChangeCity","changeCity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport {connect} from \"react-redux\";\nimport './styles.css';\nimport * as actions from \"../../actions\";\n\n//https://plot.ly/python/#layout-options\n//https://plot.ly/javascript/axes/#tick-placement-color-and-style\n//https://plot.ly/javascript/streaming/\n\nclass TimeSeriesFlow extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            vWidth: 600,\n            vHeight: 300,\n            data:[],\n            chartData:[{\n                x: [1, 2, 3, 4, 5],\n                y: [1, 2, 4, 8, 16] }],\n            layout: {\n                datarevision: 0,\n            },\n            currentKey:'',\n            revision: 0,\n        }\n        this.colors = ['#22cccc', '#6699ff', '#ffce03', '#ff710a'];\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        if(nextProps.chartData && nextProps.series[0]) {\n            this.reloadChart(nextProps.chartData, nextProps.series[0], nextProps.label, nextProps.lineLimit);\n        }\n\n    }\n    reloadChart(data, series,names, lineLimit) {\n        let xaxis = series;\n        let seriesData = data.map((item, i) => (\n            {\n                type: 'scatter',\n                x: series,\n                y: item,\n                name:(names && names.length>0)?names[i]:'',\n                line: {color: this.colors[i],width:1},\n                marker:{size:5}\n            }\n        ))\n        this.setState({\n            chartData:seriesData\n        })\n\n        // this.setState({\n        //     data:seriesData\n        // })\n\n        this.setState({ revision: this.state.revision + 1 });\n    }\n\n    render() {\n        return (\n            <ContainerDimensions>\n                { ({ width, height }) =>\n                    <div  className=\"plotContainer\" style={{width:width, height:height-2, display:'flex', overflowY:'hidden', overflowX:'auto'}}>\n                        <Plot style={{backgroundColor:'transparent', overflow:'hidden', width:width, height:height}}\n                            data={this.state.chartData}\n                            layout={{\n                                title: null,\n                                autosize: false,\n                                width:width+this.props.marginRight,\n                                height:height,\n                                margin:this.props.margin,\n                                paper_bgcolor: 'transparent',\n                                plot_bgcolor: 'transparent',\n                                xaxis: {\n                                    showgrid: false,\n                                    zeroline: true,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth: 1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)'\n                                },\n                                yaxis: {\n                                    showgrid: true,\n                                    zeroline: false,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    ticklen: 3,\n                                    tickcolor: 'rgba(0,0,0,0)',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth:1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)'\n\n                                },\n                                yaxis2: {\n                                    showgrid: true,\n                                    zeroline: false,\n                                    showline: true,\n                                    mirror: 'ticks',\n                                    ticklen: 3,\n                                    tickcolor: 'rgba(0,0,0,0)',\n                                    gridcolor: 'rgba(255,255,255,.05)',\n                                    gridwidth:1,\n                                    zerolinecolor: 'rgba(255,255,255,0)',\n                                    zerolinewidth: 1,\n                                    linecolor: 'rgba(255,255,255,.2)',\n                                    linewidth: 1,\n                                    color: 'rgba(255,255,255,.4)',\n                                    overlaying: 'y',\n                                    side: 'right',\n\n\n                                },\n                                showlegend: false,\n\n                                points: {\n                                    width: 1\n                                },\n                                hoverlabel: {\n                                    bordercolor: 'rgba(255,255,255,.3)',\n                                    font: {color:'rgba(255,255,255,.7)'},\n                                },\n                                datarevision: this.state.datarevision + 1\n\n                            }}\n                              revision={this.state.revision}\n                        />\n                    </div>\n\n                }\n            </ContainerDimensions>\n\n\n\n        );\n    }\n}\nTimeSeriesFlow.defaultProps = {\n    margin: {\n        l: 40,\n        r: 20,\n        b: 40,\n        t: 5,\n        pad: 0\n    },\n    marginRight:0\n}\n\n\n//\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        currentKey: state.cityChanger.city\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeCity: (data) => { dispatch(actions.changeCity(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(TimeSeriesFlow);\n"]},"metadata":{},"sourceType":"module"}