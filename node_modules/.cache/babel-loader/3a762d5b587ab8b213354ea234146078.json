{"ast":null,"code":"import axios from 'axios-jsonp-pro';\nimport qs from 'qs';\nimport request from 'request';\nimport * as ServiceSocket from './service_webSocket';\nimport FormatComputeFlavor from './formatter/formatComputeFlavor';\nimport FormatComputeCluster from './formatter/formatComputeCluster';\nimport FormatComputeDev from './formatter/formatComputeDeveloper';\nimport FormatComputeCloudlet from './formatter/formatComputeCloudlet';\nimport FormatComputeApp from './formatter/formatComputeApp';\nimport FormatComputeOper from './formatter/formatComputeOperator';\nimport FormatComputeInst from './formatter/formatComputeInstance';\nimport FormatComputeClstInst from './formatter/formatComputeClstInstance';\nimport FormatComputeOrganization from './formatter/formatComputeOrganization';\nimport formatComputeUsers from './formatter/formatComputeUsers';\nimport formatComputeAccounts from './formatter/formatComputeAccounts';\nvar hostname = window.location.hostname;\nvar serviceDomain = 'https://mc.mobiledgex.net:9900';\nvar ServerUrl = 'https://' + hostname + ':3030';\n\nif (process.env.REACT_APP_API_USE_SERVER_SUFFIX === 'true') {\n  ServerUrl = 'https://' + hostname + '/server';\n}\n\nexport function setDomain(domain) {\n  console.log('reset service domain ---- ', domain);\n  serviceDomain = domain;\n}\nexport function getOperator(resource, callback) {\n  fetch('https://' + hostname + ':3030').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('infux data == ', data);\n  });\n} //curl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\n\nexport function getDevelopersInfo(resource, callback) {\n  axios.get('/dummyData/db_developer.json').then(function (response) {\n    callback(FormatComputeDev(response));\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getCloudletInfo(resource, callback) {\n  axios.get('/dummyData/db_cloudlet.json').then(function (response) {\n    callback(FormatComputeCloudlet(response));\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getAppInfo(resource, callback) {\n  axios.get('/dummyData/db_app.json').then(function (response) {\n    console.log('response  -', response);\n    callback(FormatComputeApp(response));\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getOperatorInfo(resource, callback) {\n  axios.get('/dummyData/db_operator.json').then(function (response) {\n    console.log('response  -', response);\n    callback(FormatComputeOper(response));\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getComputeService(resource, callback) {\n  var orgDummy = [{\n    result: {\n      type: 'Developer',\n      username: 'kunhee',\n      role: 'viewer',\n      email: 'khcho@naver.com',\n      organization: 'BIC',\n      phone: '010-0000-0000'\n    }\n  }, {\n    result: {\n      type: 'Developer',\n      username: 'user1',\n      role: 'contributor',\n      email: 'user1@naver.com',\n      organization: 'BIC',\n      phone: '010-1111-1111'\n    }\n  }, {\n    result: {\n      type: 'Developer',\n      username: 'user2',\n      role: 'viewer',\n      email: 'user2@naver.com',\n      organization: 'BIC',\n      phone: '010-2222-2222'\n    }\n  }];\n  axios.get(ServerUrl + '/compute?service=' + resource).then(function (response) {\n    var paseData = JSON.parse(JSON.stringify(response.data));\n    var splitData = JSON.parse(\"[\" + paseData.split('}\\n{').join('},\\n{') + \"]\");\n    console.log('response paseData  =-=-=-=-=-=-=-=-=-=--', resource, splitData);\n    console.log(splitData);\n    console.log(orgDummy);\n\n    switch (resource) {\n      case 'flavor':\n        callback(FormatComputeFlavor(splitData));\n        break;\n\n      case 'cluster':\n        callback(FormatComputeCluster(splitData));\n        break;\n\n      case 'operator':\n        callback(FormatComputeOper(splitData));\n        break;\n\n      case 'developer':\n        callback(FormatComputeDev(splitData));\n        break;\n\n      case 'cloudlet':\n        callback(FormatComputeCloudlet(splitData));\n        break;\n\n      case 'app':\n        callback(FormatComputeApp(splitData));\n        break;\n\n      case 'appinst':\n        callback(FormatComputeInst(splitData));\n        break;\n\n      case 'clusterinst':\n        callback(FormatComputeClstInst(splitData));\n        break;\n\n      case 'organization':\n        callback(FormatComputeOrganization(orgDummy));\n        break;\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function saveNewCompute(resource, body, callback) {\n  axios.post(ServerUrl + '/create', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function createNewApp(resource, body, callback) {\n  axios.post(ServerUrl + '/' + resource, {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body, resource);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function createNewAppInst(resource, body, callback) {\n  axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  })).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n} //Multi Create\n\nexport function createNewMultiAppInst(resource, body, callback, multiData, filterData, vmCheck) {\n  console.log(\"20191119 bodybodybodydd\", multiData, \":::\", filterData, \": vmCheck=\", vmCheck);\n  axios.all(multiData.Cloudlet.map(function (itemCloudlet) {\n    if (vmCheck) multiData.ClusterInst = [''];\n\n    if (multiData.AutoClusterInst) {\n      multiData.ClusterInst = ['autocluster' + multiData.AppName.replace(/(\\s*)/g, \"\")];\n    }\n\n    console.log('20191119...filterData =', filterData);\n    console.log('20191119...', \":itemCloudlet : \", itemCloudlet, \":\", filterData[itemCloudlet], \": multiData.ClusterInst=\", multiData.ClusterInst);\n\n    if (filterData[itemCloudlet] && filterData[itemCloudlet].length > 0) {\n      filterData[itemCloudlet].map(function (items) {\n        multiData.ClusterInst.map(function (itemCluster) {\n          if (items.ClusterName == itemCluster || itemCluster == '' || itemCluster.indexOf('autocluster') > -1) {\n            console.log(\"20191119 fanillslslsl\", itemCloudlet, \":::\", itemCluster);\n            return axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n              service: resource,\n              serviceBody: body,\n              serviceDomain: serviceDomain,\n              multiCloudlet: itemCloudlet,\n              multiCluster: itemCluster\n            })).then(function (response) {\n              console.log('20191119 response  registry new obj result AppInst-', response, \":\", body);\n              callback(response, body);\n            }).catch(function (error) {\n              console.log(\"appinsterror\", error);\n            });\n          }\n        });\n        console.log(\"20191119 nullcluste!!@RR!\", multiData.ClusterInst);\n\n        if (String(multiData.ClusterInst[0]).indexOf('autocluster') > -1 || multiData.ClusterInst[0] == \"\") {\n          multiData.ClusterInst = [];\n        }\n      }); // hasn't any cluster in selected cloudlets then it should be make the new autocluster.\n    } else if (!filterData[itemCloudlet]) {\n      multiData.ClusterInst.map(function (itemCluster) {\n        if (itemCluster == '' || itemCluster.indexOf('autocluster') > -1) {\n          console.log(\"20191119 fanillslslsl\", itemCloudlet, \":::\", itemCluster);\n          return axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n            service: resource,\n            serviceBody: body,\n            serviceDomain: serviceDomain,\n            multiCloudlet: itemCloudlet,\n            multiCluster: itemCluster\n          })).then(function (response) {\n            console.log('20191119 response  registry new obj result autocluster AppInst-', response.data);\n            callback(response, body);\n          }).catch(function (error) {\n            console.log(\"20191119 appinsterror\", error);\n          });\n        }\n      });\n      console.log(\"20191119 nullcluste!!@RR!\", multiData.ClusterInst);\n\n      if (String(multiData.ClusterInst[0]).indexOf('autocluster') > -1 || multiData.ClusterInst[0] == \"\") {\n        multiData.ClusterInst = [];\n      }\n    } else if (vmCheck) {\n      //Create VM\n      multiData.Cloudlet.map(function (items) {\n        console.log(\"itemsitems\", items);\n        return axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n          service: resource,\n          serviceBody: body,\n          serviceDomain: serviceDomain,\n          multiCloudlet: items,\n          multiCluster: ''\n        })).then(function (response) {\n          console.log('response  registry new obj result VM AppInst-', response.data);\n          callback(response, body);\n        }).catch(function (error) {\n          console.log(\"appinsterror\", error);\n        });\n      });\n    }\n  })); //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n\n  ServiceSocket.serviceStreaming('streamTemp', callback, body);\n}\nexport function deleteCompute(resource, body, callback) {\n  axios.post(ServerUrl + '/deleteService', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  }); //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n\n  ServiceSocket.serviceStreaming('streamTemp', callback, body);\n}\nexport function deleteUser(resource, body, callback) {\n  axios.post(ServerUrl + '/deleteUser', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function deleteAccount(resource, body, callback) {\n  axios.post(ServerUrl + '/deleteAccount', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function deleteOrg(resource, body, callback) {\n  axios.post(ServerUrl + '/deleteOrg', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response  registry new obj result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function createNewClusterInst(resource, body, callback) {\n  axios.post(ServerUrl + '/CreateClusterInst', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('20190820 response clusterInst result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n} //Multi Create\n\nexport function createNewMultiClusterInst(resource, body, callback, multiData) {\n  axios.defaults.timeout = 100000000;\n  axios.all(multiData.map(function (item) {\n    console.log(\"20190820 clusterCreate@111\", item);\n    return axios.post(ServerUrl + '/CreateClusterInst', {\n      service: resource,\n      serviceBody: body,\n      serviceDomain: serviceDomain,\n      multiData: item\n    }).then(function (response) {\n      console.log('20190820 multi response clusterInst result-', response);\n      callback(response, body);\n    }).catch(function (error) {\n      console.log(\"error1\", error);\n    });\n  }));\n} // 20191201 blocked : change saving the tempfile to stream\n\n/*\nexport function creteTempFile(_item, _site, callback) {\n    console.log(\"_item_item\",_item)\n    axios.post(ServerUrl+'/CreteTempFile',{\n        item: _item,\n        site: _site\n    })\n        .then(function (response) {\n            console.log('20190820 result read status progress cluster inst...',response.data);\n            //if(response.data.indexOf('successfully') > -1) clearInterval(readInterval)\n            callback(response, _item)\n        })\n        .catch(function (error) {\n            console.log(\"error2\",error);\n        });\n}\n*/\n\nexport function deleteTempFile(_item, _site) {\n  axios.post(ServerUrl + '/DeleteTempFile', {\n    item: _item,\n    site: _site\n  }).then(function (response) {\n    console.log('20190820 result read status progress cluster inst...', response);\n  }).catch(function (error) {\n    console.log(\"error2\", error);\n  });\n}\nexport function errorTempFile(_item, callback) {\n  axios.post(ServerUrl + '/ErrorTempFile', {\n    item: _item\n  }).then(function (response) {\n    console.log('20190820 result read status progress ErrorTempFile', response.data); //if(response.data.indexOf('successfully') > -1) clearInterval(readInterval)\n\n    callback(response);\n  }).catch(function (error) {\n    console.log(\"error2\", error);\n  });\n}\nexport function createNewFlavor(resource, body, callback) {\n  axios.post(ServerUrl + '/CreateFlavor', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response flavor result-', response);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function createNewClusterFlavor(resource, body, callback) {\n  axios.post(ServerUrl + '/CreateClusterFlavor', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response clusterFlavor result-', response);\n    callback(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getStacksData(resource, body, callback) {\n  axios.defaults.timeout = 10000000;\n  axios.post(ServerUrl + '/GetStatStream', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('20191119 response GetStatStream result-', response, body);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function createNewCloudlet(resource, body, callback) {\n  axios.defaults.timeout = 10000000;\n  axios.post(ServerUrl + '/CreateCloudlet', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('20191119 response cloudlet result-', response, body); //callback(response, body)\n  }).catch(function (error) {\n    console.log(error);\n  }); //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n\n  ServiceSocket.serviceStreaming('streamTemp', callback, body);\n}\nexport function updateAppInst(resource, body, callback) {\n  axios.post('https://' + hostname + ':3030/UpdateAppInst', {\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  }).then(function (response) {\n    console.log('response UpdateAppInst result-', response, body);\n    callback(response, body);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function getMCService(resource, body, callback, self) {\n  console.log('parse data get mc service ===>>>>>>>>>> ', resource);\n  axios.post(ServerUrl + '/' + resource, qs.stringify({\n    service: resource,\n    serviceBody: body,\n    serviceId: Math.round(Math.random() * 10000)\n  })).then(function (response) {\n    console.log('request get response ===== ', response);\n    var parseData = null; //test expired\n    //response.data.error = 'has expired jwt';\n\n    if (response.data) {\n      if (response.data.error) {\n        if (response.data.error.indexOf('Expired') > -1) {\n          localStorage.setItem('userInfo', null);\n          localStorage.setItem('sessionData', null);\n          callback({\n            error: 'Login Timeout Expired.<br/>Please login again'\n          }, resource, self);\n          return;\n        } else {\n          callback({\n            error: response.data.error\n          }, resource, self);\n          return;\n        }\n      } else {\n        parseData = JSON.parse(JSON.stringify(response));\n      }\n    } else {\n      parseData = response;\n    }\n\n    if (parseData) {\n      switch (resource) {\n        case 'showOrg':\n          callback(FormatComputeOrganization(parseData));\n          break;\n\n        case 'ShowFlavor':\n          callback(FormatComputeFlavor(parseData, body));\n          break;\n\n        case 'ShowClusterFlavor':\n          callback(FormatComputeCluster(parseData, body));\n          break;\n\n        case 'ShowUsers':\n          callback(formatComputeUsers(parseData));\n          break;\n\n        case 'ShowAccounts':\n          callback(formatComputeAccounts(parseData));\n          break;\n\n        case 'ShowCloudlet':\n          callback(FormatComputeCloudlet(parseData, body));\n          break;\n\n        case 'ShowClusterInst':\n          callback(FormatComputeClstInst(parseData, body));\n          break;\n\n        case 'ShowClusterInsts':\n          callback(FormatComputeClstInst(parseData, body));\n          break;\n\n        case 'ShowApps':\n          callback(FormatComputeApp(parseData, body));\n          break;\n\n        case 'ShowApp':\n          callback(FormatComputeApp(parseData, body));\n          break;\n\n        case 'ShowAppInst':\n          callback(FormatComputeInst(parseData, body));\n          break;\n\n        case 'ShowAppInsts':\n          callback(FormatComputeInst(parseData, body));\n          break;\n\n        case 'showController':\n          callback(parseData);\n          break;\n\n        case 'ShowRole':\n          callback(parseData);\n          break;\n\n        case 'UpdateVerify':\n          callback(parseData);\n          break;\n\n        case 'ResetPassword':\n          callback(parseData);\n          break;\n\n        case 'passwordreset':\n          callback(parseData);\n          break;\n\n        default:\n          callback(parseData);\n      }\n    }\n  }).catch(function (error) {\n    try {\n      if (String(error).indexOf('Network Error') > -1) {\n        console.log(\"NETWORK ERROR@@@@@\");\n      } else {\n        callback({\n          error: error\n        }, resource, self);\n      }\n    } catch (e) {\n      console.log('any error ??? ');\n    }\n  });\n}\nexport function showController(resource, body, callback, self) {\n  axios.post(ServerUrl + '/' + resource, qs.stringify({\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  })).then(function (response) {\n    var parseData = null;\n\n    if (response.data) {\n      parseData = JSON.parse(JSON.stringify(response));\n    } else {\n      parseData = response;\n    }\n\n    callback(parseData);\n  }).catch(function (error) {\n    console.log('error', error);\n    callback({\n      error: error\n    }, resource, self);\n  });\n}\nexport function getControlService(resource, body, callback, self) {\n  axios.post(ServerUrl + '/' + resource, qs.stringify({\n    service: resource,\n    serviceBody: body,\n    serviceDomain: serviceDomain\n  })).then(function (response) {\n    var parseData = null;\n\n    if (response.data) {\n      parseData = JSON.parse(JSON.stringify(response));\n    } else {}\n\n    console.log('parse data userinfo ===>>>>>>>>>> ', parseData);\n\n    if (parseData) {\n      switch (resource) {\n        case 'ShowClusterInst':\n          callback(FormatComputeClstInst(parseData));\n          break;\n      }\n    }\n  }).catch(function (error) {\n    console.log('error', error);\n    callback({\n      error: error\n    }, resource, self);\n  });\n}","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/services/service_compute_service.js"],"names":["axios","qs","request","ServiceSocket","FormatComputeFlavor","FormatComputeCluster","FormatComputeDev","FormatComputeCloudlet","FormatComputeApp","FormatComputeOper","FormatComputeInst","FormatComputeClstInst","FormatComputeOrganization","formatComputeUsers","formatComputeAccounts","hostname","window","location","serviceDomain","ServerUrl","process","env","REACT_APP_API_USE_SERVER_SUFFIX","setDomain","domain","console","log","getOperator","resource","callback","fetch","then","response","json","data","getDevelopersInfo","get","catch","error","getCloudletInfo","getAppInfo","getOperatorInfo","getComputeService","orgDummy","result","type","username","role","email","organization","phone","paseData","JSON","parse","stringify","splitData","split","join","saveNewCompute","body","post","service","serviceBody","createNewApp","createNewAppInst","createNewMultiAppInst","multiData","filterData","vmCheck","all","Cloudlet","map","itemCloudlet","ClusterInst","AutoClusterInst","AppName","replace","length","items","itemCluster","ClusterName","indexOf","multiCloudlet","multiCluster","String","serviceStreaming","deleteCompute","deleteUser","deleteAccount","deleteOrg","createNewClusterInst","createNewMultiClusterInst","defaults","timeout","item","deleteTempFile","_item","_site","site","errorTempFile","createNewFlavor","createNewClusterFlavor","getStacksData","createNewCloudlet","updateAppInst","getMCService","self","serviceId","Math","round","random","parseData","localStorage","setItem","e","showController","getControlService"],"mappings":"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","sourcesContent":["\nimport axios from 'axios-jsonp-pro';\nimport qs from 'qs';\nimport request from 'request';\nimport * as ServiceSocket from './service_webSocket';\n\nimport FormatComputeFlavor from './formatter/formatComputeFlavor';\nimport FormatComputeCluster from './formatter/formatComputeCluster';\nimport FormatComputeDev from './formatter/formatComputeDeveloper';\nimport FormatComputeCloudlet from './formatter/formatComputeCloudlet';\nimport FormatComputeApp from './formatter/formatComputeApp';\nimport FormatComputeOper from './formatter/formatComputeOperator';\nimport FormatComputeInst from './formatter/formatComputeInstance';\nimport FormatComputeClstInst from './formatter/formatComputeClstInstance';\nimport FormatComputeOrganization from './formatter/formatComputeOrganization';\nimport formatComputeUsers from './formatter/formatComputeUsers';\nimport formatComputeAccounts from './formatter/formatComputeAccounts';\n\nconst hostname = window.location.hostname;\nlet serviceDomain = 'https://mc.mobiledgex.net:9900';\nlet ServerUrl = 'https://'+hostname+':3030';\n\nif(process.env.REACT_APP_API_USE_SERVER_SUFFIX === 'true') {\n    ServerUrl = 'https://'+hostname+'/server';\n}\n\n\n\nexport function setDomain(domain) {\n    console.log('reset service domain ---- ', domain)\n    serviceDomain = domain;\n}\nexport function getOperator(resource, callback) {\n    fetch('https://'+hostname+':3030')\n        .then(response => response.json())\n        .then(data => {\n            console.log('infux data == ', data)\n\n        });\n\n}\n\n//curl -X POST \"https://mexdemo.ctrl.mobiledgex.net:36001/show/cloudlet\" -H \"accept: application/json\" -H \"Content-Type: application/json\" --cacert mex-ca.crt --key mex-client.key --cert mex-client.crt\nexport function getDevelopersInfo(resource, callback) {\n    axios.get('/dummyData/db_developer.json')\n        .then(function (response) {\n            callback(FormatComputeDev(response))\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getCloudletInfo(resource, callback) {\n    axios.get('/dummyData/db_cloudlet.json')\n        .then(function (response) {\n            callback(FormatComputeCloudlet(response))\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getAppInfo(resource, callback) {\n    axios.get('/dummyData/db_app.json')\n        .then(function (response) {\n            console.log('response  -',response);\n            callback(FormatComputeApp(response))\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getOperatorInfo(resource, callback) {\n    axios.get('/dummyData/db_operator.json')\n        .then(function (response) {\n            console.log('response  -',response);\n            callback(FormatComputeOper(response))\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getComputeService(resource, callback) {\n    const orgDummy = [\n        {\n            result:{\n                type:'Developer',\n                username:'kunhee',\n                role:'viewer',\n                email:'khcho@naver.com',\n                organization:'BIC',\n                phone:'010-0000-0000'\n            }\n        },\n        {\n            result:{\n                type:'Developer',\n                username:'user1',\n                role:'contributor',\n                email:'user1@naver.com',\n                organization:'BIC',\n                phone:'010-1111-1111'\n            }\n        },\n        {\n            result:{\n                type:'Developer',\n                username:'user2',\n                role:'viewer',\n                email:'user2@naver.com',\n                organization:'BIC',\n                phone:'010-2222-2222'\n            }\n        },\n    ]\n    axios.get(ServerUrl+'/compute?service='+resource)\n        .then(function (response) {\n            let paseData = JSON.parse(JSON.stringify(response.data));\n            let splitData = JSON.parse( \"[\"+paseData.split('}\\n{').join('},\\n{')+\"]\" );\n            console.log('response paseData  =-=-=-=-=-=-=-=-=-=--',resource, splitData );\n            console.log(splitData);\n            console.log(orgDummy);\n            switch(resource){\n                case 'flavor': callback(FormatComputeFlavor(splitData)); break;\n                case 'cluster': callback(FormatComputeCluster(splitData)); break;\n                case 'operator': callback(FormatComputeOper(splitData)); break;\n                case 'developer': callback(FormatComputeDev(splitData)); break;\n                case 'cloudlet': callback(FormatComputeCloudlet(splitData)); break;\n                case 'app': callback(FormatComputeApp(splitData)); break;\n                case 'appinst': callback(FormatComputeInst(splitData)); break;\n                case 'clusterinst': callback(FormatComputeClstInst(splitData)); break;\n                case 'organization': callback(FormatComputeOrganization(orgDummy)); break;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n}\n\n\nexport function saveNewCompute(resource, body, callback) {\n    axios.post(ServerUrl+'/create',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function createNewApp(resource, body, callback) {\n    axios.post(ServerUrl+'/'+resource,{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response, body, resource)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function createNewAppInst(resource, body, callback) {\n    axios.post(ServerUrl+'/CreateAppInst',qs.stringify({\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    }))\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n//Multi Create\nexport function createNewMultiAppInst(resource, body, callback, multiData, filterData, vmCheck) {\n    console.log(\"20191119 bodybodybodydd\",multiData,\":::\",filterData, \": vmCheck=\",vmCheck)\n\n\n    axios.all(multiData.Cloudlet.map((itemCloudlet) => {\n        if(vmCheck) multiData.ClusterInst = ['']\n        if(multiData.AutoClusterInst) {\n            multiData.ClusterInst = ['autocluster' + multiData.AppName.replace(/(\\s*)/g, \"\")];\n        }\n        console.log('20191119...filterData =', filterData)\n        console.log('20191119...',\":itemCloudlet : \",itemCloudlet,\":\", filterData[itemCloudlet], \": multiData.ClusterInst=\",multiData.ClusterInst)\n        if(filterData[itemCloudlet] && filterData[itemCloudlet].length > 0) {\n            filterData[itemCloudlet].map((items) => {\n                multiData.ClusterInst.map((itemCluster) => {\n                    if (items.ClusterName == itemCluster || itemCluster == '' || itemCluster.indexOf('autocluster') > -1) {\n                        console.log(\"20191119 fanillslslsl\", itemCloudlet, \":::\", itemCluster)\n                        return axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n                            service: resource,\n                            serviceBody: body,\n                            serviceDomain: serviceDomain,\n                            multiCloudlet: itemCloudlet,\n                            multiCluster: itemCluster\n                        }))\n                            .then(function (response) {\n                                console.log('20191119 response  registry new obj result AppInst-', response, \":\", body);\n                                callback(response, body)\n                            })\n                            .catch(function (error) {\n                                console.log(\"appinsterror\", error);\n                            });\n                    }\n                })\n                console.log(\"20191119 nullcluste!!@RR!\", multiData.ClusterInst)\n                if (String(multiData.ClusterInst[0]).indexOf('autocluster') > -1 || multiData.ClusterInst[0] == \"\") {\n                    multiData.ClusterInst = [];\n                }\n            })\n\n            // hasn't any cluster in selected cloudlets then it should be make the new autocluster.\n        } else if(!filterData[itemCloudlet]) {\n            multiData.ClusterInst.map((itemCluster) => {\n                if (itemCluster == '' || itemCluster.indexOf('autocluster') > -1) {\n                    console.log(\"20191119 fanillslslsl\", itemCloudlet, \":::\", itemCluster)\n                    return axios.post(ServerUrl + '/CreateAppInst', qs.stringify({\n                        service: resource,\n                        serviceBody: body,\n                        serviceDomain: serviceDomain,\n                        multiCloudlet: itemCloudlet,\n                        multiCluster: itemCluster\n                    }))\n                        .then(function (response) {\n                            console.log('20191119 response  registry new obj result autocluster AppInst-', response.data);\n                            callback(response, body)\n                        })\n                        .catch(function (error) {\n                            console.log(\"20191119 appinsterror\", error);\n                        });\n                }\n            })\n            console.log(\"20191119 nullcluste!!@RR!\", multiData.ClusterInst)\n            if (String(multiData.ClusterInst[0]).indexOf('autocluster') > -1 || multiData.ClusterInst[0] == \"\") {\n                multiData.ClusterInst = [];\n            }\n\n        } else if(vmCheck) {\n            //Create VM\n            multiData.Cloudlet.map((items) => {\n                console.log(\"itemsitems\",items)\n                return axios.post(ServerUrl+'/CreateAppInst',qs.stringify({\n                    service: resource,\n                    serviceBody:body,\n                    serviceDomain:serviceDomain,\n                    multiCloudlet:items,\n                    multiCluster:''\n                }))\n                    .then(function (response) {\n                        console.log('response  registry new obj result VM AppInst-',response.data);\n                        callback(response, body)\n                    })\n                    .catch(function (error) {\n                        console.log(\"appinsterror\",error);\n                    });\n            })\n        }\n\n\n\n\n    }))\n    //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n    ServiceSocket.serviceStreaming('streamTemp', callback, body);\n\n}\nexport function deleteCompute(resource, body, callback) {\n    axios.post(ServerUrl+'/deleteService',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n    ServiceSocket.serviceStreaming('streamTemp', callback, body);\n}\nexport function deleteUser(resource, body, callback) {\n    axios.post(ServerUrl+'/deleteUser',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function deleteAccount(resource, body, callback) {\n    axios.post(ServerUrl+'/deleteAccount',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function deleteOrg(resource, body, callback) {\n    axios.post(ServerUrl+'/deleteOrg',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response  registry new obj result-',response);\n            callback(response,body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function createNewClusterInst(resource, body, callback) {\n    axios.post(ServerUrl+'/CreateClusterInst',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('20190820 response clusterInst result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n//Multi Create\nexport function createNewMultiClusterInst(resource, body, callback, multiData) {\n\n    axios.defaults.timeout = 100000000;\n    axios.all(multiData.map((item) => {\n        console.log(\"20190820 clusterCreate@111\",item)\n        return axios.post(ServerUrl+'/CreateClusterInst',{\n            service: resource,\n            serviceBody:body,\n            serviceDomain:serviceDomain,\n            multiData:item\n        })\n            .then(function (response) {\n                console.log('20190820 multi response clusterInst result-',response);\n                callback(response, body)\n            })\n            .catch(function (error) {\n                console.log(\"error1\",error);\n            });\n    }))\n\n}\n\n// 20191201 blocked : change saving the tempfile to stream\n/*\nexport function creteTempFile(_item, _site, callback) {\n    console.log(\"_item_item\",_item)\n    axios.post(ServerUrl+'/CreteTempFile',{\n        item: _item,\n        site: _site\n    })\n        .then(function (response) {\n            console.log('20190820 result read status progress cluster inst...',response.data);\n            //if(response.data.indexOf('successfully') > -1) clearInterval(readInterval)\n            callback(response, _item)\n        })\n        .catch(function (error) {\n            console.log(\"error2\",error);\n        });\n}\n*/\nexport function deleteTempFile(_item, _site) {\n\n    axios.post(ServerUrl+'/DeleteTempFile',{\n        item: _item,\n        site: _site\n    })\n        .then(function (response) {\n            console.log('20190820 result read status progress cluster inst...',response);\n\n        })\n        .catch(function (error) {\n            console.log(\"error2\",error);\n        });\n}\n\nexport function errorTempFile(_item, callback) {\n    axios.post(ServerUrl+'/ErrorTempFile',{\n        item: _item,\n    })\n        .then(function (response) {\n            console.log('20190820 result read status progress ErrorTempFile',response.data);\n            //if(response.data.indexOf('successfully') > -1) clearInterval(readInterval)\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(\"error2\",error);\n        });\n}\n\n\n\nexport function createNewFlavor(resource, body, callback) {\n    axios.post(ServerUrl+'/CreateFlavor',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response flavor result-',response);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport function createNewClusterFlavor(resource, body, callback) {\n    axios.post(ServerUrl+'/CreateClusterFlavor',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response clusterFlavor result-',response);\n            callback(response)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function getStacksData(resource, body, callback) {\n    axios.defaults.timeout = 10000000;\n    axios.post(ServerUrl+'/GetStatStream',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('20191119 response GetStatStream result-',response,body);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\nexport function createNewCloudlet(resource, body, callback) {\n    axios.defaults.timeout = 10000000;\n    axios.post(ServerUrl+'/CreateCloudlet',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('20191119 response cloudlet result-',response,body);\n            //callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    //1개 밖에 못받아서, socket 통신으로 푸시를 받음\n    ServiceSocket.serviceStreaming('streamTemp', callback, body);\n}\n\nexport function updateAppInst(resource, body, callback) {\n    axios.post('https://'+hostname+':3030/UpdateAppInst',{\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    })\n        .then(function (response) {\n            console.log('response UpdateAppInst result-',response,body);\n            callback(response, body)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\n\nexport function getMCService(resource, body, callback, self) {\n    console.log('parse data get mc service ===>>>>>>>>>> ', resource)\n    axios.post(ServerUrl+'/'+resource, qs.stringify({\n        service: resource,\n        serviceBody:body,\n        serviceId: Math.round(Math.random()*10000)\n    }))\n        .then(function (response) {\n            console.log('request get response ===== ', response)\n            let parseData = null;\n\n            //test expired\n            //response.data.error = 'has expired jwt';\n\n\n            if(response.data) {\n                if(response.data.error) {\n                    if(response.data.error.indexOf('Expired') > -1) {\n                        localStorage.setItem('userInfo', null)\n                        localStorage.setItem('sessionData', null)\n                        callback({error:'Login Timeout Expired.<br/>Please login again'}, resource, self);\n                        return;\n                    } else {\n                        callback({error:response.data.error}, resource, self);\n                        return;\n                    }\n                } else {\n                    parseData = JSON.parse(JSON.stringify(response));\n                }\n            } else {\n                parseData = response;\n            }\n            if(parseData){\n                switch(resource){\n                    case 'showOrg': callback(FormatComputeOrganization(parseData)); break;\n                    case 'ShowFlavor': callback(FormatComputeFlavor(parseData,body)); break;\n                    case 'ShowClusterFlavor': callback(FormatComputeCluster(parseData,body)); break;\n                    case 'ShowUsers': callback(formatComputeUsers(parseData)); break;\n                    case 'ShowAccounts': callback(formatComputeAccounts(parseData)); break;\n                    case 'ShowCloudlet': callback(FormatComputeCloudlet(parseData,body)); break;\n                    case 'ShowClusterInst': callback(FormatComputeClstInst(parseData,body)); break;\n                    case 'ShowClusterInsts': callback(FormatComputeClstInst(parseData,body)); break;\n                    case 'ShowApps': callback(FormatComputeApp(parseData,body)); break;\n                    case 'ShowApp': callback(FormatComputeApp(parseData,body)); break;\n                    case 'ShowAppInst': callback(FormatComputeInst(parseData,body)); break;\n                    case 'ShowAppInsts': callback(FormatComputeInst(parseData,body)); break;\n                    case 'showController': callback(parseData); break;\n                    case 'ShowRole': callback(parseData); break;\n                    case 'UpdateVerify': callback(parseData); break;\n                    case 'ResetPassword': callback(parseData); break;\n                    case 'passwordreset': callback(parseData); break;\n                    default : callback(parseData);\n                }\n            }\n        })\n        .catch(function (error) {\n            try {\n                if(String(error).indexOf('Network Error') > -1){\n                    console.log(\"NETWORK ERROR@@@@@\");\n                } else {\n                    callback({error:error}, resource, self);\n                }\n            } catch(e) {\n                console.log('any error ??? ')\n            }\n        });\n\n\n}\nexport function showController(resource, body, callback, self) {\n    axios.post(ServerUrl+'/'+resource, qs.stringify({\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    }))\n        .then(function (response) {\n            let parseData = null;\n            if(response.data) {\n                parseData = JSON.parse(JSON.stringify(response));\n            } else {\n                parseData = response;\n            }\n            callback(parseData)\n        })\n        .catch(function (error) {\n            console.log('error',error);\n            callback({error:error}, resource, self);\n        });\n\n\n}\n\n\nexport function getControlService(resource, body, callback, self) {\n\n    axios.post(ServerUrl+'/'+resource, qs.stringify({\n        service: resource,\n        serviceBody:body,\n        serviceDomain:serviceDomain\n    }))\n        .then(function (response) {\n            let parseData = null;\n            if(response.data) {\n                parseData = JSON.parse(JSON.stringify(response));\n            } else {\n\n            }\n            console.log('parse data userinfo ===>>>>>>>>>> ', parseData)\n            if(parseData){\n                switch(resource){\n\n                    case 'ShowClusterInst': callback(FormatComputeClstInst(parseData)); break;\n\n                }\n            }\n        })\n        .catch(function (error) {\n            console.log('error',error);\n            callback({error:error}, resource, self);\n        });\n\n\n}\n"]},"metadata":{},"sourceType":"module"}