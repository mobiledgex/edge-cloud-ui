{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/registNewInput.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Item, Message, Divider, Modal, List, Grid, Card, Dropdown, Input, Popup, Icon } from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, change, reset } from \"redux-form\";\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\nimport EditMap from '../libs/simpleMaps/with-react-motion/editMap';\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.Region) {\n    errors.Region = 'Required';\n  }\n\n  if (!values.CloudletName) {\n    errors.CloudletName = 'Required';\n  }\n\n  if (!values.OperatorName) {\n    errors.OperatorName = 'Required';\n  }\n\n  if (values.Latitude == null) {\n    errors.Latitude = 'Required';\n  }\n\n  if (values.Longitude == null) {\n    errors.Longitude = 'Required';\n  }\n\n  if (!values.Num_dynamic_ips) {\n    errors.Num_dynamic_ips = 'Required';\n  }\n\n  return errors;\n}; // const renderSelect = field => (\n//     <Form.Select\n//         name={field.input.name}\n//         onChange={(e, { value }) => field.input.onChange(value)}\n//         //onChange={field.input.change}\n//         options={field.options}\n//         placeholder={field.placeholder}\n//         value={field.value}\n//         fluid\n//     />\n// );\n\n\nvar renderSelect = function renderSelect(_ref) {\n  var input = _ref.input,\n      options = _ref.options,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      type = _ref.type,\n      error = _ref.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    name: input.name,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return input.onChange(value);\n    } //onChange={input.change}\n    ,\n    options: options,\n    placeholder: placeholder,\n    value: value,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, error));\n}; // const renderInputNum = field => (\n//     <Form.Field\n//         {...field.input}\n//         type={field.type}\n//         // placeholder={field.placeholder}\n//     >\n//         <label>{field.label}</label>\n//         <Input fluid type=\"number\"></Input>\n//     </Form.Field>\n// );\n\n\nvar renderInputNum = function renderInputNum(_ref3) {\n  var input = _ref3.input,\n      unit = _ref3.unit,\n      label = _ref3.label,\n      placeholder = _ref3.placeholder,\n      type = _ref3.type,\n      error = _ref3.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Field, Object.assign({}, input, {\n    type: type // placeholder={field.placeholder}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, label), React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, error));\n}; // const renderInput = field => (\n//     <div>\n//          <Form.Input\n//             {...field.input}\n//             type={field.type}\n//             placeholder={field.placeholder}\n//             disabled={field.disabled}\n//             fluid\n//         />\n//     </div>\n//\n// );\n\n\nvar renderInput = function renderInput(_ref4) {\n  var input = _ref4.input,\n      placeholder = _ref4.placeholder,\n      type = _ref4.type,\n      disabled = _ref4.disabled,\n      error = _ref4.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, input, {\n    type: type,\n    placeholder: placeholder,\n    disabled: disabled,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, error));\n};\n\nvar renderLocationInput = function renderLocationInput(_ref5) {\n  var input = _ref5.input,\n      placeholder = _ref5.placeholder,\n      change = _ref5.change,\n      type = _ref5.type,\n      error = _ref5.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form.Field, Object.assign({}, input, {\n    type: type,\n    placeholder: placeholder //value={field.value}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    onChange: change,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, error));\n};\n\nvar registNewInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(registNewInput, _React$Component);\n\n  function registNewInput(props) {\n    var _this;\n\n    _classCallCheck(this, registNewInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(registNewInput).call(this, props));\n\n    _this.getHelpPopup = function (key) {\n      return React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"question circle outline\",\n          size: \"large\",\n          style: {\n            lineHeight: 'unset',\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }),\n        content: key == 'CloudletName' ? 'Name of the cloudlet' : key == 'OperatorName' ? 'Company or Organization name of the operator' : key == 'CloudletLocation' ? 'Latitude: Latitude in WGS 84 coordinates, Longitude: Longitude in WGS 84 coordinates' : key == 'Ip_support' ? 'IpSupport indicates the type of public IP support provided by the Cloudlet. Static IP support indicates a set of static public IPs are available for use, and managed by the Controller. Dynamic indicates the Cloudlet uses a DHCP server to provide public IP addresses, and the controller has no control over which IPs are assigned.\\n' + '\\n' + 'IP_SUPPORT_UNKNOWN: Unknown IP support\\n' + 'IP_SUPPORT_STATIC: Static IP addresses are provided to and managed by Controller\\n' + 'IP_SUPPORT_DYNAMIC: IP addresses are dynamically provided by an Operator\\'s DHCP server' : key == 'Num_dynamic_ips' ? 'Number of dynamic IPs available for dynamic IP support' : key // content={this.state.tip}\n        // style={style}\n        ,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    };\n\n    _this.handleInitialize = function () {\n      if (_this.props.defaultValue) {\n        var initData = {\n          \"OrganizationName\": _this.props.defaultValue.Organization\n        };\n\n        _this.props.initialize(initData);\n      }\n    };\n\n    _this.handleRegionChange = function (e) {\n      _this.props.getOptionData(e);\n\n      _this.props.dispatch(reset('registNewInput'));\n    };\n\n    _this.handleClose = function () {\n      _this.props.close();\n\n      _this.props.dispatch(reset('registNewInput'));\n    };\n\n    _this.state = {\n      typeValue: '',\n      cloudletLong: \"\",\n      cloudletLat: \"\",\n      regionStatic: [{\n        key: 1,\n        value: \"US\",\n        text: \"US\"\n      }, {\n        key: 2,\n        value: \"EU\",\n        text: \"EU\"\n      }],\n      ipAccessStatic: [{\n        key: 0,\n        value: \"0\",\n        text: \"IpAccessUnknown\"\n      }, {\n        key: 1,\n        value: \"1\",\n        text: \"Dedicated\"\n      }, {\n        key: 2,\n        value: \"2\",\n        text: \"IpAccessDedicatedOrShared\"\n      }, {\n        key: 3,\n        value: \"3\",\n        text: \"Shared\"\n      }],\n      Ip_support: [// {key: 0, value: 0, text: \"IPSupportUnknown\"},\n      {\n        key: 1,\n        value: 1,\n        text: \"Static\"\n      }, {\n        key: 2,\n        value: 2,\n        text: \"Dynamic\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(registNewInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleInitialize();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.locationLong || nextProps.locationLat) {\n        this.props.dispatch(change('registNewInput', 'Latitude', nextProps.locationLat));\n        this.props.dispatch(change('registNewInput', 'Longitude', nextProps.locationLong));\n      } else {\n        this.props.dispatch(change('registNewInput', 'Latitude', null));\n        this.props.dispatch(change('registNewInput', 'Longitude', null));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          data = _this$props.data,\n          dimmer = _this$props.dimmer,\n          selected = _this$props.selected,\n          regKeys = _this$props.regKeys,\n          open = _this$props.open,\n          close = _this$props.close,\n          option = _this$props.option,\n          value = _this$props.value,\n          change = _this$props.change,\n          longLoc = _this$props.longLoc,\n          latLoc = _this$props.latLoc,\n          zoomIn = _this$props.zoomIn,\n          zoomOut = _this$props.zoomOut,\n          resetMap = _this$props.resetMap,\n          locationLongLat = _this$props.locationLongLat,\n          resetLocation = _this$props.resetLocation,\n          handleChangeLong = _this$props.handleChangeLong,\n          handleChangeLat = _this$props.handleChangeLat,\n          locationLong = _this$props.locationLong,\n          locationLat = _this$props.locationLat; // this.changeCloudLoc(cloudLoc);\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: handleSubmit,\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        style: {\n          width: 1200\n        },\n        open: open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: true,\n        style: {\n          width: 800\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, regKeys && regKeys.length > 0 ? regKeys.map(function (key, i) {\n        return React.createElement(Grid.Row, {\n          key: i,\n          columns: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 5,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, key === 'CloudletName' ? 'Cloudlet Name *' : key === 'OperatorName' ? 'Operator Name *' : key === 'CloudletLocation' ? 'Cloudlet Location *' : key === 'Ip_support' ? 'IP Support *' : key === 'Num_dynamic_ips' ? 'Number of Dynamic IPs *' : key === 'Region' ? 'Region *' : key)), React.createElement(Grid.Column, {\n          width: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, key === 'Operator' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Operator\",\n          name: \"Operator\",\n          options: option[0],\n          value: value[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }) : key === 'OrganizationName' ? _this2.props.defaultValue ? React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: \"OrganizationName\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Organization Name\",\n          name: \"OrganizationName\",\n          options: option[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }) : key === 'Cloudlet' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Cloudlet\",\n          name: \"Cloudlet\",\n          options: _this2.props.cloudArr,\n          value: value[2],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }) : key === 'Region' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Region\",\n          name: \"Region\",\n          options: _this2.state.regionStatic,\n          onChange: _this2.handleRegionChange,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }) : key === 'Version' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Version\",\n          name: \"Version\",\n          options: option[4],\n          value: value[4],\n          change: change[4],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }) : key === 'ClusterInst' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Cluster Instance\",\n          name: \"ClusterInst\",\n          options: option[5],\n          value: value[5],\n          change: change[5],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }) : key === 'Type' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Type\",\n          name: \"Type\",\n          options: option[6],\n          value: value[6],\n          change: change[6],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }) : key === 'Role' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Role\",\n          name: \"DeveloperName\",\n          options: option[7],\n          value: value[7],\n          change: change[7],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }) : key === 'Flavor' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Flavor\",\n          name: \"Flavor\",\n          options: option[8],\n          value: value[8],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }) : key === 'IpAccess' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select IP Access\",\n          name: \"IPAccess\",\n          options: _this2.state.ipAccessStatic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }) : key === 'Ip_support' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Dynamic\",\n          name: \"IPSupport\",\n          options: _this2.state.Ip_support,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }) : key === 'CloudletLocation' ? React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          columns: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"Latitude\"), React.createElement(Field, {\n          ref: latLoc,\n          name: \"Latitude\",\n          component: renderLocationInput,\n          placeholder: dimmer === 'blurring' ? '' : selected[key] ? selected[key].latitude : null,\n          change: handleChangeLat,\n          error: _this2.props.validError.indexOf('Latitude') !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, \"Longitude\"), React.createElement(Field, {\n          ref: longLoc,\n          name: \"Longitude\",\n          component: renderLocationInput,\n          placeholder: dimmer === 'blurring' ? '' : selected[key] ? selected[key].longitude : null,\n          change: handleChangeLong,\n          error: _this2.props.validError.indexOf('Longitude') !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        })))) : key === 'Num_dynamic_ips' ? React.createElement(Field, {\n          component: renderInputNum,\n          type: \"input\",\n          name: key,\n          placeholder: dimmer === 'blurring' ? '' : selected[key],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: key,\n          placeholder: dimmer === 'blurring' ? '' : selected[key],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          width: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, _this2.getHelpPopup(key)), React.createElement(Divider, {\n          vertical: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }));\n      }) : ''), React.createElement(Grid, {\n        style: {\n          marginTop: 0,\n          marginLeft: 20,\n          marginRight: 10,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        style: {\n          paddingTop: 0,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(EditMap, {\n        zoomIn: zoomIn,\n        zoomOut: zoomOut,\n        resetMap: resetMap,\n        locationLongLat: locationLongLat,\n        resetLocation: resetLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: handleSubmit,\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Save\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return registNewInput;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"registNewInput\",\n  validate: validate // enableReinitialize: true\n\n})(registNewInput);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/registNewInput.js"],"names":["React","Fragment","Button","Form","Item","Message","Divider","Modal","List","Grid","Card","Dropdown","Input","Popup","Icon","Field","reduxForm","initialize","change","reset","MaterialIcon","EditMap","validate","values","errors","Region","CloudletName","OperatorName","Latitude","Longitude","Num_dynamic_ips","renderSelect","input","options","placeholder","value","type","error","name","e","onChange","renderInputNum","unit","label","renderInput","disabled","renderLocationInput","registNewInput","props","getHelpPopup","key","lineHeight","margin","handleInitialize","defaultValue","initData","Organization","handleRegionChange","getOptionData","dispatch","handleClose","close","state","typeValue","cloudletLong","cloudletLat","regionStatic","text","ipAccessStatic","Ip_support","nextProps","locationLong","locationLat","handleSubmit","data","dimmer","selected","regKeys","open","option","longLoc","latLoc","zoomIn","zoomOut","resetMap","locationLongLat","resetLocation","handleChangeLong","handleChangeLat","width","display","flexDirection","length","map","i","cloudArr","validError","indexOf","latitude","longitude","marginTop","marginLeft","marginRight","paddingTop","Component","form"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n    Button,\n    Form,\n    Item,\n    Message,\n    Divider,\n    Modal,\n    List,\n    Grid,\n    Card,\n    Dropdown,\n    Input,\n    Popup,\n    Icon\n} from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, change, reset } from \"redux-form\";\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\nimport EditMap from '../libs/simpleMaps/with-react-motion/editMap';\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.Region) {\n        errors.Region = 'Required'\n    }\n    if (!values.CloudletName) {\n        errors.CloudletName = 'Required'\n    }\n    if (!values.OperatorName) {\n        errors.OperatorName = 'Required'\n    }\n    if (values.Latitude == null) {\n        errors.Latitude = 'Required'\n    }\n    if (values.Longitude == null) {\n        errors.Longitude = 'Required'\n    }\n    if (!values.Num_dynamic_ips) {\n        errors.Num_dynamic_ips = 'Required'\n    }\n\n    return errors\n}\n\n// const renderSelect = field => (\n//     <Form.Select\n//         name={field.input.name}\n//         onChange={(e, { value }) => field.input.onChange(value)}\n//         //onChange={field.input.change}\n//         options={field.options}\n//         placeholder={field.placeholder}\n//         value={field.value}\n//         fluid\n//     />\n// );\n\nconst renderSelect = ({ input, options, placeholder, value, type, error}) => (\n    <div>\n        <Form.Select\n            name={input.name}\n            onChange={(e, { value }) => input.onChange(value)}\n            //onChange={input.change}\n            options={options}\n            placeholder={placeholder}\n            value={value}\n            fluid\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n);\n// const renderInputNum = field => (\n//     <Form.Field\n//         {...field.input}\n//         type={field.type}\n//         // placeholder={field.placeholder}\n//     >\n//         <label>{field.label}</label>\n//         <Input fluid type=\"number\"></Input>\n//     </Form.Field>\n// );\nconst renderInputNum = ({ input, unit, label, placeholder, type, error }) => (\n    <div>\n        <Form.Field\n            {...input}\n            type={type}\n            // placeholder={field.placeholder}\n        >\n            <label>{label}</label>\n            <Input fluid type=\"number\"></Input>\n        </Form.Field>\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\n\n// const renderInput = field => (\n//     <div>\n//          <Form.Input\n//             {...field.input}\n//             type={field.type}\n//             placeholder={field.placeholder}\n//             disabled={field.disabled}\n//             fluid\n//         />\n//     </div>\n//\n// );\nconst renderInput = ({ input, placeholder, type, disabled, error }) => (\n    <div>\n        <Form.Input\n            {...input}\n            type={type}\n            placeholder={placeholder}\n            disabled={disabled}\n            fluid\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\nconst renderLocationInput = ({ input, placeholder, change, type, error }) => (\n    <div>\n        <Form.Field\n            {...input}\n            type={type}\n            placeholder={placeholder}\n            //value={field.value}\n        >\n            <Input fluid type=\"number\"\n                   onChange={change}\n                   placeholder={placeholder}></Input>\n        </Form.Field>\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n   \n);\n\nclass registNewInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeValue:'',\n            cloudletLong:\"\",\n            cloudletLat:\"\",\n            regionStatic:[\n                {key: 1, value: \"US\", text: \"US\"},\n                {key: 2, value: \"EU\", text: \"EU\"}\n            ],\n            ipAccessStatic:[\n                {key: 0, value: \"0\", text: \"IpAccessUnknown\"},\n                {key: 1, value: \"1\", text: \"Dedicated\"},\n                {key: 2, value: \"2\", text: \"IpAccessDedicatedOrShared\"},\n                {key: 3, value: \"3\", text: \"Shared\"}\n            ],\n            Ip_support:[\n                // {key: 0, value: 0, text: \"IPSupportUnknown\"},\n                {key: 1, value: 1, text: \"Static\"},\n                {key: 2, value: 2, text: \"Dynamic\"}\n            ]\n        };\n\n    }\n\n    getHelpPopup =(key)=> (\n        <Popup\n            trigger={<Icon name='question circle outline' size='large' style={{lineHeight:'unset', margin:'10px 0'}} />}\n            content=\n                {(key=='CloudletName')? 'Name of the cloudlet'\n                    :(key=='OperatorName')? 'Company or Organization name of the operator'\n                        :(key=='CloudletLocation')? 'Latitude: Latitude in WGS 84 coordinates, Longitude: Longitude in WGS 84 coordinates'\n                            :(key=='Ip_support')?\n                                'IpSupport indicates the type of public IP support provided by the Cloudlet. Static IP support indicates a set of static public IPs are available for use, and managed by the Controller. Dynamic indicates the Cloudlet uses a DHCP server to provide public IP addresses, and the controller has no control over which IPs are assigned.\\n' +\n                                '\\n' +\n                                'IP_SUPPORT_UNKNOWN: Unknown IP support\\n' +\n                                'IP_SUPPORT_STATIC: Static IP addresses are provided to and managed by Controller\\n' +\n                                'IP_SUPPORT_DYNAMIC: IP addresses are dynamically provided by an Operator\\'s DHCP server'\n                                :(key=='Num_dynamic_ips')? 'Number of dynamic IPs available for dynamic IP support'\n                                    : key\n                }\n            // content={this.state.tip}\n            // style={style}\n            inverted\n        />\n    )\n\n    handleInitialize = () => {\n        if(this.props.defaultValue){\n            const initData = {\n                \"OrganizationName\": this.props.defaultValue.Organization\n            };\n            this.props.initialize(initData);\n        }\n    }\n    \n    handleRegionChange = (e) => {\n        this.props.getOptionData(e)\n        this.props.dispatch(reset('registNewInput'));\n    }\n\n    componentDidMount() {\n        this.handleInitialize();\n    }\n\n    componentWillReceiveProps(nextProps) {        \n        if(nextProps.locationLong || nextProps.locationLat){\n            this.props.dispatch(change('registNewInput', 'Latitude', nextProps.locationLat));\n            this.props.dispatch(change('registNewInput', 'Longitude', nextProps.locationLong));\n        } else {\n            this.props.dispatch(change('registNewInput', 'Latitude', null));\n            this.props.dispatch(change('registNewInput', 'Longitude', null));\n\n        }\n\n    }\n\n    handleClose = () => {\n        this.props.close()\n        this.props.dispatch(reset('registNewInput'));\n    }\n\n    render() {\n        const { handleSubmit, data, dimmer, selected, regKeys,open, close, option, value, change, longLoc, latLoc, zoomIn, zoomOut, resetMap, locationLongLat, resetLocation, handleChangeLong, handleChangeLat, locationLong, locationLat } = this.props;\n        // this.changeCloudLoc(cloudLoc);\n        return (\n            <Fragment>\n                <Form onSubmit={handleSubmit} className={\"fieldForm\"}>\n                    <Form.Group>\n                        <Modal style={{width:1200}} open={open} onClose={this.handleClose}>\n                            <Modal.Header>Settings</Modal.Header>\n                            <Modal.Content>\n                                <div style={{display:'flex', flexDirection:'row', width:'100%'}}>\n                                    <Grid divided style={{width:800}}>\n                                    {\n                                        (regKeys && regKeys.length > 0)?\n                                        regKeys.map((key, i)=>(\n                                            <Grid.Row key={i} columns={3}>\n                                                <Grid.Column width={5} className='detail_item'>\n                                                    <div>\n                                                        {(key === 'CloudletName')?'Cloudlet Name *'\n                                                            :(key === 'OperatorName')?'Operator Name *'\n                                                                :(key === 'CloudletLocation')?'Cloudlet Location *'\n                                                                    :(key === 'Ip_support')?'IP Support *'\n                                                                        :(key === 'Num_dynamic_ips')?'Number of Dynamic IPs *'\n                                                                            :(key === 'Region')?'Region *'\n                                                                                :key}\n                                                    </div>\n                                                </Grid.Column>\n                                                <Grid.Column width={9}>\n                                                {\n                                                    (key === 'Operator')?\n                                                    <Field component={renderSelect} placeholder='Select Operator' name='Operator' options={option[0]} value={value[0]} />\n                                                    : (key === 'OrganizationName')?\n                                                        (this.props.defaultValue) ?\n                                                            <Field component={renderInput} type=\"input\" name='OrganizationName' disabled={true} />\n                                                        :\n                                                            <Field component={renderSelect} placeholder='Select Organization Name' name='OrganizationName' options={option[1]} />\n                                                    : (key === 'Cloudlet')?\n                                                    <Field component={renderSelect} placeholder='Select Cloudlet' name='Cloudlet' options={this.props.cloudArr} value={value[2]} />\n                                                    : (key === 'Region')?\n                                                    <Field component={renderSelect} placeholder='Select Region' name='Region' options={this.state.regionStatic} onChange={this.handleRegionChange} error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    : (key === 'Version')?\n                                                    <Field component={renderSelect} placeholder='Select Version' name='Version' options={option[4]} value={value[4]} change={change[4]}/>\n                                                    : (key === 'ClusterInst')?\n                                                    <Field component={renderSelect} placeholder='Select Cluster Instance' name='ClusterInst' options={option[5]} value={value[5]} change={change[5]}/>\n                                                    : (key === 'Type')?\n                                                    <Field component={renderSelect} placeholder='Select Type' name='Type' options={option[6]} value={value[6]} change={change[6]}/>\n                                                    : (key === 'Role')?\n                                                    <Field component={renderSelect} placeholder='Select Role' name='DeveloperName' options={option[7]} value={value[7]} change={change[7]}/>\n                                                    : (key === 'Flavor')?\n                                                    <Field component={renderSelect} placeholder='Select Flavor' name='Flavor' options={option[8]} value={value[8]} />\n                                                    : (key === 'IpAccess')?\n                                                    <Field component={renderSelect} placeholder='Select IP Access' name='IPAccess' options={this.state.ipAccessStatic} />\n                                                    : (key === 'Ip_support')?\n                                                    <Field component={renderSelect} placeholder='Dynamic' name='IPSupport' options={this.state.Ip_support} />\n                                                    : (key === 'CloudletLocation')?\n                                                    <Grid>\n                                                        <Grid.Row columns={2}>\n                                                            <Grid.Column><span>Latitude</span><Field ref={latLoc} name='Latitude' component={renderLocationInput} placeholder={(dimmer === 'blurring')? '' : (selected[key]) ? selected[key].latitude : null } change={handleChangeLat} error={(this.props.validError.indexOf('Latitude') !== -1)?'Required':''} /></Grid.Column>\n                                                            <Grid.Column><span>Longitude</span><Field ref={longLoc} name='Longitude' component={renderLocationInput} placeholder={(dimmer === 'blurring')? '' : (selected[key]) ? selected[key].longitude : null } change={handleChangeLong} error={(this.props.validError.indexOf('Longitude') !== -1)?'Required':''} /></Grid.Column>\n                                                        </Grid.Row>\n                                                    </Grid>\n                                                    : (key === 'Num_dynamic_ips')?\n                                                    <Field component={renderInputNum} type=\"input\" name={key} placeholder={(dimmer === 'blurring')? '' : selected[key] } error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    :\n                                                    <Field component={renderInput} type=\"input\" name={key} placeholder={(dimmer === 'blurring')? '' : selected[key] } error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                }\n                                                </Grid.Column>\n                                                <Grid.Column width={2}>\n                                                    {this.getHelpPopup(key)}\n                                                </Grid.Column>\n                                                <Divider vertical></Divider>\n                                            </Grid.Row>\n                                        ))\n                                        :''\n                                    }\n                                    </Grid>\n                                    <Grid style={{marginTop:0, marginLeft:20, marginRight:10, width:'100%'}}>\n                                        <Grid.Row style={{paddingTop:0, width:'100%'}}>\n                                            <EditMap zoomIn={zoomIn} zoomOut={zoomOut} resetMap={resetMap} locationLongLat={locationLongLat} resetLocation={resetLocation} ></EditMap>\n                                        </Grid.Row>\n                                    </Grid>\n                                </div>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={this.handleClose}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    onClick={handleSubmit}\n                                    positive\n                                    icon='checkmark'\n                                    labelPosition='right'\n                                    content=\"Save\"\n                                    type=\"submit\"\n                                />\n                            </Modal.Actions>\n                        </Modal>\n                    </Form.Group>\n                </Form>\n            </Fragment>\n            \n                \n        );\n    }\n    \n};\n\nexport default reduxForm({\n    form: \"registNewInput\",\n    validate\n    // enableReinitialize: true\n})(registNewInput);\n"]},"metadata":{},"sourceType":"module"}