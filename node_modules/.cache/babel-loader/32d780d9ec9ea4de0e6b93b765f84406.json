{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/components/horizontal_timeline_kj/Components/HorizontalTimeline.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Decorators\n\nimport Radium from 'radium';\nimport dimensions from 'react-dimensions'; // Components\n\nimport EventsBar from './EventsBar'; // Helpers and constansts\n\nimport { cummulativeSeperation } from '../helpers';\nimport Constants from '../Constants';\n\nvar getLabel = function getLabel(date, task, index) {\n  return new Date(date).toDateString().substring(4);\n};\n/**\n * customized by kyungjoon.go\n *\n * https://github.com/sherubthakur/react-horizontal-timeline\n *\n */\n\n\nvar HorizontalTimeline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalTimeline, _React$Component);\n\n  function HorizontalTimeline() {\n    _classCallCheck(this, HorizontalTimeline);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HorizontalTimeline).apply(this, arguments));\n  }\n\n  _createClass(HorizontalTimeline, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n\n      if (!props.containerWidth) {\n        //As long as we do not know the width of our container, do not render anything!\n        return false;\n      } // Convert the date strings to actual date objects\n\n\n      var dates = props.values.map(function (value) {\n        return new Date(value);\n      }); // console.log('111.dates0===>', dates);\n\n      dates = dates.sort(function (a, b) {\n        return b - a;\n      }); // console.log('111.dates===>', dates);\n      // Calculate the distances for all events\n\n      var distances = cummulativeSeperation(dates, props.labelWidth, props.minEventPadding, props.maxEventPadding, props.linePadding);\n      var _dates = props.values;\n      var _tasks = props.tasks;\n      _dates = _dates.sort(function (a, b) {\n        return b - a;\n      }); //console.log('111..__dates===>', _dates);\n      //console.log('111.distances===>', distances);\n      // Convert the distances and dates to events\n\n      var events = distances.map(function (distance, index) {\n        return {\n          distance: distance,\n          label: props.getLabel(_dates[index], _tasks[index], index),\n          date: dates[index]\n        };\n      }); //console.log('111.events===>', events);\n\n      var visibleWidth = this.props.containerWidth - 80;\n      var totalWidth = Math.max(events[events.length - 1].distance + this.props.linePadding, visibleWidth);\n      var barPaddingRight = 0;\n      var barPaddingLeft = 0;\n\n      if (!this.props.isOpenEnding) {\n        barPaddingRight = totalWidth - events[events.length - 1].distance;\n      }\n\n      if (!this.props.isOpenBeginning) {\n        barPaddingLeft = events[0].distance;\n      }\n\n      return React.createElement(\"div\", {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(EventsBar, {\n        height: props.containerHeight,\n        events: events,\n        isTouchEnabled: props.isTouchEnabled,\n        totalWidth: totalWidth,\n        visibleWidth: visibleWidth,\n        index: props.index,\n        styles: props.styles,\n        indexClick: props.indexClick,\n        labelWidth: props.labelWidth,\n        fillingMotion: props.fillingMotion,\n        barPaddingRight: barPaddingRight,\n        barPaddingLeft: barPaddingLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HorizontalTimeline;\n}(React.Component);\n/**\n * The expected properties from the parent\n * @type {Object}\n */\n\n\nHorizontalTimeline.propTypes = {\n  // --- EVENTS ---\n  // Selected index\n  index: PropTypes.number,\n  // Array containing the sorted date strings\n  values: PropTypes.arrayOf(PropTypes.string).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.string),\n  // Function that takes the index of the array as argument\n  indexClick: PropTypes.func,\n  // Function to calculate the label based on the date string\n  getLabel: PropTypes.func,\n  // --- POSITIONING ---\n  // the minimum padding between events\n  minEventPadding: PropTypes.number,\n  // The maximum padding between events\n  maxEventPadding: PropTypes.number,\n  // Padding at the front and back of the line\n  linePadding: PropTypes.number,\n  // The width of the label\n  labelWidth: PropTypes.number,\n  // --- STYLING ---\n  styles: PropTypes.object,\n  fillingMotion: PropTypes.object,\n  slidingMotion: PropTypes.object,\n  isOpenEnding: PropTypes.bool,\n  isOpenBeginning: PropTypes.bool,\n  // --- INTERACTION ---\n  isTouchEnabled: PropTypes.bool,\n  isKeyboardEnabled: PropTypes.bool\n};\n/**\n * The values that the properties will take if they are not provided\n * by the user.\n * @type {Object}\n */\n\nHorizontalTimeline.defaultProps = {\n  // --- EVENTS ---\n  getLabel: getLabel,\n  // --- POSITIONING ---\n  minEventPadding: Constants.MIN_EVENT_PADDING,\n  maxEventPadding: Constants.MAX_EVENT_PADDING,\n  linePadding: Constants.TIMELINE_PADDING,\n  labelWidth: Constants.DATE_WIDTH,\n  // --- STYLING ---\n  styles: {\n    outline: '#dfdfdf',\n    outline2: '#096d05',\n    background: '#f8f8f8',\n    foreground: '#096d05'\n  },\n  fillingMotion: {\n    stiffness: 150,\n    damping: 25\n  },\n  slidingMotion: {\n    stiffness: 150,\n    damping: 25\n  },\n  isOpenEnding: true,\n  isOpenBeginning: true,\n  // --- INTERACTION ---\n  isTouchEnabled: true,\n  isKeyboardEnabled: true\n};\nexport default Radium(dimensions({\n  elementResize: true\n})(HorizontalTimeline));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/components/horizontal_timeline_kj/Components/HorizontalTimeline.jsx"],"names":["React","PropTypes","Radium","dimensions","EventsBar","cummulativeSeperation","Constants","getLabel","date","task","index","Date","toDateString","substring","HorizontalTimeline","props","containerWidth","dates","values","map","value","sort","a","b","distances","labelWidth","minEventPadding","maxEventPadding","linePadding","_dates","_tasks","tasks","events","distance","label","visibleWidth","totalWidth","Math","max","length","barPaddingRight","barPaddingLeft","isOpenEnding","isOpenBeginning","containerHeight","isTouchEnabled","styles","indexClick","fillingMotion","Component","propTypes","number","arrayOf","string","isRequired","func","object","slidingMotion","bool","isKeyboardEnabled","defaultProps","MIN_EVENT_PADDING","MAX_EVENT_PADDING","TIMELINE_PADDING","DATE_WIDTH","outline","outline2","background","foreground","stiffness","damping","elementResize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// Decorators\nimport Radium from 'radium';\nimport dimensions from 'react-dimensions';\n// Components\nimport EventsBar from './EventsBar';\n// Helpers and constansts\nimport {cummulativeSeperation} from '../helpers';\nimport Constants from '../Constants';\n\nconst getLabel = (date, task, index) => {\n\n    return (new Date(date)).toDateString().substring(4);\n}\n\n\n/**\n * customized by kyungjoon.go\n *\n * https://github.com/sherubthakur/react-horizontal-timeline\n *\n */\nclass HorizontalTimeline extends React.Component {\n\n    render() {\n        const props = this.props;\n\n        if (!props.containerWidth) {\n            //As long as we do not know the width of our container, do not render anything!\n            return false;\n        }\n\n        // Convert the date strings to actual date objects\n        let dates = props.values.map((value) => new Date(value));\n        // console.log('111.dates0===>', dates);\n        dates = dates.sort((a, b) => b - a);\n\n        // console.log('111.dates===>', dates);\n        // Calculate the distances for all events\n        const distances = cummulativeSeperation(\n            dates,\n            props.labelWidth,\n            props.minEventPadding,\n            props.maxEventPadding,\n            props.linePadding,\n        );\n\n        let _dates = props.values;\n\n        let _tasks = props.tasks;\n\n        _dates = _dates.sort((a, b) => b - a);\n\n        //console.log('111..__dates===>', _dates);\n\n        //console.log('111.distances===>', distances);\n\n        // Convert the distances and dates to events\n        const events = distances.map((distance, index) => ({\n            distance,\n            label: props.getLabel(_dates[index], _tasks[index], index),\n            date: dates[index],\n        }));\n\n        //console.log('111.events===>', events);\n\n        const visibleWidth = this.props.containerWidth - 80;\n\n        const totalWidth = Math.max(\n            events[events.length - 1].distance + this.props.linePadding,\n            visibleWidth\n        );\n\n        let barPaddingRight = 0;\n        let barPaddingLeft = 0;\n        if (!this.props.isOpenEnding) {\n            barPaddingRight = totalWidth - events[events.length - 1].distance;\n        }\n        if (!this.props.isOpenBeginning) {\n            barPaddingLeft = events[0].distance;\n        }\n\n        return (\n            <div style={{}}>\n                <EventsBar\n                    height={props.containerHeight}\n                    events={events}\n                    isTouchEnabled={props.isTouchEnabled}\n                    totalWidth={totalWidth}\n                    visibleWidth={visibleWidth}\n                    index={props.index}\n                    styles={props.styles}\n                    indexClick={props.indexClick}\n                    labelWidth={props.labelWidth}\n                    fillingMotion={props.fillingMotion}\n                    barPaddingRight={barPaddingRight}\n                    barPaddingLeft={barPaddingLeft}\n                />\n\n\n            </div>\n        );\n    };\n\n}\n\n/**\n * The expected properties from the parent\n * @type {Object}\n */\nHorizontalTimeline.propTypes = {\n    // --- EVENTS ---\n    // Selected index\n    index: PropTypes.number,\n    // Array containing the sorted date strings\n    values: PropTypes.arrayOf(PropTypes.string).isRequired,\n    tasks: PropTypes.arrayOf(PropTypes.string),\n    // Function that takes the index of the array as argument\n    indexClick: PropTypes.func,\n    // Function to calculate the label based on the date string\n    getLabel: PropTypes.func,\n    // --- POSITIONING ---\n    // the minimum padding between events\n    minEventPadding: PropTypes.number,\n    // The maximum padding between events\n    maxEventPadding: PropTypes.number,\n    // Padding at the front and back of the line\n    linePadding: PropTypes.number,\n    // The width of the label\n    labelWidth: PropTypes.number,\n    // --- STYLING ---\n    styles: PropTypes.object,\n    fillingMotion: PropTypes.object,\n    slidingMotion: PropTypes.object,\n    isOpenEnding: PropTypes.bool,\n    isOpenBeginning: PropTypes.bool,\n    // --- INTERACTION ---\n    isTouchEnabled: PropTypes.bool,\n    isKeyboardEnabled: PropTypes.bool,\n};\n\n/**\n * The values that the properties will take if they are not provided\n * by the user.\n * @type {Object}\n */\nHorizontalTimeline.defaultProps = {\n    // --- EVENTS ---\n    getLabel: getLabel,\n    // --- POSITIONING ---\n    minEventPadding: Constants.MIN_EVENT_PADDING,\n    maxEventPadding: Constants.MAX_EVENT_PADDING,\n    linePadding: Constants.TIMELINE_PADDING,\n    labelWidth: Constants.DATE_WIDTH,\n    // --- STYLING ---\n    styles: {\n        outline: '#dfdfdf',\n        outline2: '#096d05',\n        background: '#f8f8f8',\n        foreground: '#096d05'\n    },\n    fillingMotion: {\n        stiffness: 150,\n        damping: 25\n    },\n    slidingMotion: {\n        stiffness: 150,\n        damping: 25\n    },\n    isOpenEnding: true,\n    isOpenBeginning: true,\n    // --- INTERACTION ---\n    isTouchEnabled: true,\n    isKeyboardEnabled: true,\n};\n\nexport default Radium(dimensions({elementResize: true})(HorizontalTimeline));\n"]},"metadata":{},"sourceType":"module"}