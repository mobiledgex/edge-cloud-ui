{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/commandViewer.js\";\nimport React from 'react';\nimport { Grid, Header, Segment, Container } from \"semantic-ui-react\";\nimport TimeSeries from '../charts/plotly/timeseries';\nimport * as d3 from 'd3';\nimport './styles.css';\n\nvar CommandViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommandViewer, _React$Component);\n\n  function CommandViewer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommandViewer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommandViewer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mProp: {\n        timeseriesDataCPUMEM: [[], []],\n        timeseriesCPUMEM: [[]],\n        timeseriesDataNET: [[], []],\n        timeseriesNET: [[]],\n        timeseriesDataDISK: [[]],\n        timeseriesDISK: [[]],\n        timeseriesDataTCP: [[], []],\n        timeseriesTCP: [[]],\n        timeseriesDataUDP: [[], [], []],\n        timeseriesUDP: [[]],\n        dataLabel: ['CPU', 'MEM'],\n        dataLabelNET: ['RCV', 'SND'],\n        dataLabelDISK: ['DISK'],\n        dataLabelTCP: ['RCV', 'SND'],\n        dataLabelUDP: ['RCV', 'SND', 'ERROR']\n      },\n      lastCPU: 0,\n      lastMEM: 0,\n      lastDISK: 0,\n      lastNET: [0, 0],\n      lastUDP: [0, 0],\n      lastTCP: [0, 0],\n      data: []\n    };\n    _this.cpuCnt = 0;\n    _this.memCnt = 0;\n    _this.netCnt = 0;\n    _this.diskCnt = 0;\n    _this.tcpCnt = 0;\n    _this.udpCnt = 0;\n\n    _this.bytesToString = function (bytes, inst) {\n      console.log(\"20190812 bytes..\", bytes, \":\", inst); // One way to write it, not the prettiest way to write it.\n\n      var fmt = d3.format('.0f');\n\n      if (bytes < 1024) {\n        return fmt(bytes) + ' B';\n      } else if (bytes < 1024 * 1024) {\n        return fmt(bytes / 1024) + ' kB';\n      } else if (bytes < 1024 * 1024 * 1024) {\n        return fmt(bytes / 1024 / 1024) + ' MB';\n      } else {\n        return fmt(bytes / 1024 / 1024 / 1024) + ' GB';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CommandViewer, [{\n    key: \"setTimeseriesDataCPUMEM\",\n    value: function setTimeseriesDataCPUMEM(label, values) {\n      if (label === 'cpu') {\n        this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt] = parseFloat(values['cmsn']).toFixed(2);\n        this.state.mProp['timeseriesCPUMEM'][0][this.cpuCnt] = values['time'];\n        this.cpuCnt++;\n      }\n\n      if (label === 'mem') {\n        this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt] = values['cmsn'];\n        this.memCnt++;\n      }\n\n      if (label === 'disk') {\n        this.state.mProp['timeseriesDataDISK'][0][this.diskCnt] = parseFloat(values['cmsn']).toFixed(2);\n        this.state.mProp['timeseriesDISK'][0][this.diskCnt] = values['time'];\n        this.diskCnt++;\n      }\n\n      if (label === 'network') {\n        this.state.mProp['timeseriesDataNET'][0][this.netCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataNET'][1][this.netCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesNET'][0][this.netCnt] = values['time'];\n        this.netCnt++;\n      }\n\n      if (label === 'tcp') {\n        this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesTCP'][0][this.tcpCnt] = values['time'];\n        this.tcpCnt++;\n      }\n\n      if (label === 'udp') {\n        this.state.mProp['timeseriesDataUDP'][0][this.udpCnt] = values['cmsn'][0];\n        this.state.mProp['timeseriesDataUDP'][1][this.udpCnt] = values['cmsn'][1];\n        this.state.mProp['timeseriesDataUDP'][2][this.udpCnt] = values['cmsn'][2];\n        this.state.mProp['timeseriesUDP'][0][this.udpCnt] = values['time'];\n        this.udpCnt++;\n      } //console.log('20190812 lastMem..',this.state.mProp['timeseriesDataCPUMEM'],\":\",this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt-1])\n\n\n      this.setState({\n        props: this.state.mProp\n      });\n      this.setState({\n        lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt - 1]\n      });\n      this.setState({\n        lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt - 1]\n      });\n      this.setState({\n        lastDISK: this.state.mProp['timeseriesDataDISK'][0][this.diskCnt - 1]\n      });\n      this.setState({\n        lastNET: [this.state.mProp['timeseriesDataNET'][0][this.netCnt - 1], this.state.mProp['timeseriesDataNET'][1][this.netCnt - 1]]\n      });\n      this.setState({\n        lastTCP: [this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt - 1], this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt - 1]]\n      });\n      this.setState({\n        lastUDP: [this.state.mProp['timeseriesDataUDP'][0][this.udpCnt - 1], this.state.mProp['timeseriesDataUDP'][1][this.udpCnt - 1]]\n      });\n    }\n  }, {\n    key: \"feedData\",\n    value: function feedData(data) {\n      var _this2 = this;\n\n      this.cpuCnt = 0;\n      this.memCnt = 0;\n      this.diskCnt = 0;\n      this.netCnt = 0;\n      this.tcpCnt = 0;\n      this.udpCnt = 0;\n      console.log('20190824 feedData-- ', data);\n\n      if (data && data.mData.length) {\n        data.mData.map(function (item) {\n          if (item.name.indexOf('cpu') > -1) {\n            _this2.setTimeseriesDataCPUMEM('cpu', item['values']);\n          } else if (item.name.indexOf('mem') > -1) {\n            _this2.setTimeseriesDataCPUMEM('mem', item['values']);\n          } else if (item.name.indexOf('disk') > -1) {\n            _this2.setTimeseriesDataCPUMEM('disk', item['values']);\n          } else if (item.name.indexOf('network') > -1) {\n            _this2.setTimeseriesDataCPUMEM('network', item['values']);\n          } else if (item.name.indexOf('tcp') > -1) {\n            _this2.setTimeseriesDataCPUMEM('tcp', item['values']);\n          } else if (item.name.indexOf('udp') > -1) {\n            _this2.setTimeseriesDataCPUMEM('udp', item['values']);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data) {\n        this.setState({\n          data: this.props.data\n        });\n        this.feedData(this.props.data);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.feedData(nextProps.data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid.Row, {\n        className: \"monitoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"command viewer\"));\n    }\n  }]);\n\n  return CommandViewer;\n}(React.Component);\n\nexport { CommandViewer as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/commandViewer.js"],"names":["React","Grid","Header","Segment","Container","TimeSeries","d3","CommandViewer","state","mProp","timeseriesDataCPUMEM","timeseriesCPUMEM","timeseriesDataNET","timeseriesNET","timeseriesDataDISK","timeseriesDISK","timeseriesDataTCP","timeseriesTCP","timeseriesDataUDP","timeseriesUDP","dataLabel","dataLabelNET","dataLabelDISK","dataLabelTCP","dataLabelUDP","lastCPU","lastMEM","lastDISK","lastNET","lastUDP","lastTCP","data","cpuCnt","memCnt","netCnt","diskCnt","tcpCnt","udpCnt","bytesToString","bytes","inst","console","log","fmt","format","label","values","parseFloat","toFixed","setState","props","mData","length","map","item","name","indexOf","setTimeseriesDataCPUMEM","feedData","nextProps","nextContext","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Header, Segment, Container } from \"semantic-ui-react\";\nimport TimeSeries from '../charts/plotly/timeseries';\nimport * as d3 from 'd3';\nimport './styles.css'\n\nexport default class CommandViewer extends React.Component {\n    state = {\n        mProp : {\n            timeseriesDataCPUMEM:[\n                [],[]\n            ],\n            timeseriesCPUMEM:[\n                []\n            ],\n\n            timeseriesDataNET:[\n                [],[]\n            ],\n            timeseriesNET:[\n                []\n            ],\n            timeseriesDataDISK:[\n                []\n            ],\n            timeseriesDISK:[\n                []\n            ],\n            timeseriesDataTCP:[\n                [],[]\n            ],\n            timeseriesTCP:[\n                []\n            ],\n            timeseriesDataUDP:[\n                [],[],[]\n            ],\n            timeseriesUDP:[\n                []\n            ],\n            dataLabel:['CPU', 'MEM'],\n            dataLabelNET:['RCV', 'SND'],\n            dataLabelDISK:['DISK'],\n            dataLabelTCP:['RCV', 'SND'],\n            dataLabelUDP:['RCV', 'SND', 'ERROR'],\n        },\n        lastCPU:0, lastMEM: 0, lastDISK:0, lastNET:[0,0], lastUDP:[0,0], lastTCP:[0,0],\n        data:[]\n    }\n\n    cpuCnt = 0;\n    memCnt = 0;\n    netCnt = 0;\n    diskCnt = 0;\n    tcpCnt = 0;\n    udpCnt = 0;\n\n    setTimeseriesDataCPUMEM (label, values) {\n        if(label === 'cpu') {\n            this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt] = parseFloat(values['cmsn']).toFixed(2);\n            this.state.mProp['timeseriesCPUMEM'][0][this.cpuCnt] = values['time'];\n            this.cpuCnt ++;\n        }\n        if(label === 'mem') {\n            this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt] = values['cmsn'];\n            this.memCnt ++;\n        }\n        if(label === 'disk') {\n            this.state.mProp['timeseriesDataDISK'][0][this.diskCnt] = parseFloat(values['cmsn']).toFixed(2);\n            this.state.mProp['timeseriesDISK'][0][this.diskCnt] = values['time'];\n            this.diskCnt ++;\n        }\n        if(label === 'network') {\n            this.state.mProp['timeseriesDataNET'][0][this.netCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataNET'][1][this.netCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesNET'][0][this.netCnt] = values['time'];\n            this.netCnt ++;\n        }\n        if(label === 'tcp') {\n            this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesTCP'][0][this.tcpCnt] = values['time'];\n            this.tcpCnt ++;\n        }\n        if(label === 'udp') {\n            this.state.mProp['timeseriesDataUDP'][0][this.udpCnt] = values['cmsn'][0];\n            this.state.mProp['timeseriesDataUDP'][1][this.udpCnt] = values['cmsn'][1];\n            this.state.mProp['timeseriesDataUDP'][2][this.udpCnt] = values['cmsn'][2];\n            this.state.mProp['timeseriesUDP'][0][this.udpCnt] = values['time'];\n            this.udpCnt ++;\n        }\n        //console.log('20190812 lastMem..',this.state.mProp['timeseriesDataCPUMEM'],\":\",this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt-1])\n        this.setState({props: this.state.mProp})\n        this.setState({lastCPU: this.state.mProp['timeseriesDataCPUMEM'][0][this.cpuCnt-1]})\n        this.setState({lastMEM: this.state.mProp['timeseriesDataCPUMEM'][1][this.memCnt-1]})\n        this.setState({lastDISK: this.state.mProp['timeseriesDataDISK'][0][this.diskCnt-1]})\n        this.setState({lastNET: [this.state.mProp['timeseriesDataNET'][0][this.netCnt-1], this.state.mProp['timeseriesDataNET'][1][this.netCnt-1] ]})\n        this.setState({lastTCP: [this.state.mProp['timeseriesDataTCP'][0][this.tcpCnt-1], this.state.mProp['timeseriesDataTCP'][1][this.tcpCnt-1] ]})\n        this.setState({lastUDP: [this.state.mProp['timeseriesDataUDP'][0][this.udpCnt-1], this.state.mProp['timeseriesDataUDP'][1][this.udpCnt-1] ]})\n    }\n    bytesToString =  (bytes, inst) => {\n        console.log(\"20190812 bytes..\",bytes, \":\", inst)\n        // One way to write it, not the prettiest way to write it.\n\n        var fmt = d3.format('.0f');\n        if (bytes < 1024) {\n            return fmt(bytes) + ' B';\n        } else if (bytes < 1024 * 1024) {\n            return fmt(bytes / 1024) + ' kB';\n        } else if (bytes < 1024 * 1024 * 1024) {\n            return fmt(bytes / 1024 / 1024) + ' MB';\n        } else {\n            return fmt(bytes / 1024 / 1024 / 1024) + ' GB';\n        }\n    }\n    feedData(data) {\n        this.cpuCnt = 0;\n        this.memCnt = 0;\n        this.diskCnt = 0;\n        this.netCnt = 0;\n        this.tcpCnt = 0;\n        this.udpCnt = 0;\n        console.log('20190824 feedData-- ', data)\n        if(data && data.mData.length) {\n            data.mData.map(item => {\n                if(item.name.indexOf('cpu') > -1) {\n                    this.setTimeseriesDataCPUMEM('cpu',item['values'])\n                } else if(item.name.indexOf('mem') > -1) {\n                    this.setTimeseriesDataCPUMEM('mem',item['values'])\n                } else if(item.name.indexOf('disk') > -1) {\n                    this.setTimeseriesDataCPUMEM('disk',item['values'])\n                } else if(item.name.indexOf('network') > -1) {\n                    this.setTimeseriesDataCPUMEM('network',item['values'])\n                } else if(item.name.indexOf('tcp') > -1) {\n                    this.setTimeseriesDataCPUMEM('tcp',item['values'])\n                } else if(item.name.indexOf('udp') > -1) {\n                    this.setTimeseriesDataCPUMEM('udp',item['values'])\n                }\n            })\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.data) {\n            this.setState({data:this.props.data})\n            this.feedData(this.props.data)\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.feedData(nextProps.data);\n    }\n\n    render() {\n        return (\n            <Grid.Row className=\"monitoring\">\n                <Grid.Column>\n                        command viewer\n\n\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}