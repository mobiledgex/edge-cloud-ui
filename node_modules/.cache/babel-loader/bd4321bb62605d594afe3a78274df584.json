{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/horizontal_timeline_kj/Components/HorizontalTimelineButtons.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Radium from 'radium';\nimport Constants from '../Constants'; // icons\n\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa'; // this handles the rendering part of the buttons that appear on either side of\n// the timeline.\n\n/**\n * These are the static styles for the buttons on either side of the timeline.\n *\n * @param {styles} styles The user-definded styles/the default styles\n * @param {boolean} active Hacky crap to get svg filling color right\n * @return {object} An object containing styles for the buttons\n * link: styles defined for the link elements i.e. the href tag.\n * icon: styles defined for the icon that appears on the button.\n * inactive: styles defined for when the icons are inactive.\n */\n\nvar buttonStyles = {\n  link: function link(_ref) {\n    var outline = _ref.outline;\n    return {\n      position: 'absolute',\n      top: '49px',\n      bottom: 'auto',\n      transform: 'translateY(-50%)',\n      height: 34,\n      width: 34,\n      borderRadius: '50%',\n      border: \"2px solid \".concat(outline),\n      overflow: 'hidden',\n      textIndent: '100%',\n      whiteSpace: 'nowrap',\n      transition: 'border-color 0.3s'\n    };\n  },\n  icon: function icon(styles, active) {\n    return {\n      position: 'absolute',\n      left: 0,\n      top: '50%',\n      bottom: 'auto',\n      transform: 'translateY(-50%)',\n      height: 20,\n      width: 29,\n      overflow: 'hidden',\n      textIndent: '100%',\n      whiteSpace: 'nowrap',\n      fill: active ? styles.foreground : styles.outline\n    };\n  },\n  inactive: function inactive(styles) {\n    return {\n      color: styles.outline,\n      cursor: 'not-allowed',\n      ':hover': {\n        border: \"2px solid \".concat(styles.outline)\n      }\n    };\n  },\n  active: function active(styles) {\n    return {\n      cursor: 'pointer',\n      ':hover': {\n        border: \"2px solid \".concat(styles.foreground),\n        color: styles.foreground\n      }\n    };\n  }\n};\n/**\n * Markup for both the buttons (that translate the timeline left or right).\n *\n * @param  {object} props The info provided by the parent\n * @return {StatelessFunctionalReactComponent} The Markup info for both the buttons\n */\n\nvar HorizontalTimelineButtons = function HorizontalTimelineButtons(props) {\n  var buttonBackEnabled = Math.round(props.position) < 0;\n  var buttonForwardEnabled = Math.round(props.position) > Math.round(props.maxPosition);\n  var baseStyles = [buttonStyles.link(props.styles)];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  });\n}; // Expected propteries\n\n\nHorizontalTimelineButtons.propTypes = {\n  // The function to update the slide\n  updateSlide: PropTypes.func.isRequired,\n  // Information about what portion of the timeline is visible between buttons\n  position: PropTypes.number.isRequired,\n  // The user passed styles (has fields like foreground, background color etc.)\n  styles: PropTypes.object,\n  // The maximum position that the timeline component can acuire, (on initial load will be null)\n  maxPosition: PropTypes.number\n}; // Wrapping the buttons with Radium (so we get all the styling goodness)\n\nexport default Radium(HorizontalTimelineButtons);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/components/horizontal_timeline_kj/Components/HorizontalTimelineButtons.jsx"],"names":["React","PropTypes","Radium","Constants","FaAngleLeft","FaAngleRight","buttonStyles","link","outline","position","top","bottom","transform","height","width","borderRadius","border","overflow","textIndent","whiteSpace","transition","icon","styles","active","left","fill","foreground","inactive","color","cursor","HorizontalTimelineButtons","props","buttonBackEnabled","Math","round","buttonForwardEnabled","maxPosition","baseStyles","propTypes","updateSlide","func","isRequired","number","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Radium from 'radium';\nimport Constants from '../Constants';\n\n// icons\nimport {FaAngleLeft, FaAngleRight} from 'react-icons/fa';\n\n// this handles the rendering part of the buttons that appear on either side of\n// the timeline.\n\n/**\n * These are the static styles for the buttons on either side of the timeline.\n *\n * @param {styles} styles The user-definded styles/the default styles\n * @param {boolean} active Hacky crap to get svg filling color right\n * @return {object} An object containing styles for the buttons\n * link: styles defined for the link elements i.e. the href tag.\n * icon: styles defined for the icon that appears on the button.\n * inactive: styles defined for when the icons are inactive.\n */\nconst buttonStyles = {\n    link: ({outline}) => ({\n        position: 'absolute',\n        top: '49px',\n        bottom: 'auto',\n        transform: 'translateY(-50%)',\n        height: 34,\n        width: 34,\n        borderRadius: '50%',\n        border: `2px solid ${outline}`,\n        overflow: 'hidden',\n        textIndent: '100%',\n        whiteSpace: 'nowrap',\n        transition: 'border-color 0.3s',\n    }),\n    icon: (styles, active) => ({\n        position: 'absolute',\n        left: 0,\n        top: '50%',\n        bottom: 'auto',\n        transform: 'translateY(-50%)',\n        height: 20,\n        width: 29,\n        overflow: 'hidden',\n        textIndent: '100%',\n        whiteSpace: 'nowrap',\n        fill: active ? styles.foreground : styles.outline\n    }),\n    inactive: (styles) => ({\n        color: styles.outline,\n        cursor: 'not-allowed',\n        ':hover': {\n            border: `2px solid ${styles.outline}`\n        }\n    }),\n    active: (styles) => ({\n        cursor: 'pointer',\n        ':hover': {\n            border: `2px solid ${styles.foreground}`,\n            color: styles.foreground\n        }\n    })\n};\n\n\n/**\n * Markup for both the buttons (that translate the timeline left or right).\n *\n * @param  {object} props The info provided by the parent\n * @return {StatelessFunctionalReactComponent} The Markup info for both the buttons\n */\nconst HorizontalTimelineButtons = (props) => {\n    const buttonBackEnabled = Math.round(props.position) < 0;\n    const buttonForwardEnabled = Math.round(props.position) > Math.round(props.maxPosition);\n    const baseStyles = [\n        buttonStyles.link(props.styles),\n    ];\n    return (\n        <div>\n\n        </div>\n    )\n}\n\n\n// Expected propteries\nHorizontalTimelineButtons.propTypes = {\n    // The function to update the slide\n    updateSlide: PropTypes.func.isRequired,\n    // Information about what portion of the timeline is visible between buttons\n    position: PropTypes.number.isRequired,\n    // The user passed styles (has fields like foreground, background color etc.)\n    styles: PropTypes.object,\n    // The maximum position that the timeline component can acuire, (on initial load will be null)\n    maxPosition: PropTypes.number\n};\n\n// Wrapping the buttons with Radium (so we get all the styling goodness)\nexport default Radium(HorizontalTimelineButtons);\n"]},"metadata":{},"sourceType":"module"}