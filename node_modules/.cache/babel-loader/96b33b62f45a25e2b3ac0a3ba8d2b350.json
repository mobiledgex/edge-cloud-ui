{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registNewListInput.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Item, Message, Divider, Modal, List, Grid, Card, Dropdown, Input, TextArea, Popup, Icon } from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset } from \"redux-form\";\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\nimport '../css/index.css';\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.FlavorName) {\n    errors.FlavorName = 'Required';\n  }\n\n  if (!values.RAM) {\n    errors.RAM = 'Required';\n  }\n\n  if (!values.vCPUs) {\n    errors.vCPUs = 'Required';\n  }\n\n  if (!values.Disk) {\n    errors.Disk = 'Required';\n  }\n\n  return errors;\n};\n\nvar renderSelect = function renderSelect(_ref) {\n  var input = _ref.input,\n      options = _ref.options,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      type = _ref.type,\n      error = _ref.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    name: input.name,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return input.onChange(value);\n    } //onChange={field.input.onChange(field.value)}\n    ,\n    options: options,\n    placeholder: placeholder,\n    value: value,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, error));\n};\n\nvar renderInputNum = function renderInputNum(_ref3) {\n  var input = _ref3.input,\n      unit = _ref3.unit,\n      label = _ref3.label,\n      placeholder = _ref3.placeholder,\n      type = _ref3.type,\n      error = _ref3.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Field, Object.assign({}, input, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, label), unit ? React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return maxlength(e);\n    },\n    label: {\n      basic: true,\n      content: unit\n    },\n    labelPosition: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : React.createElement(Input, {\n    fluid: true,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return maxlength(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, error));\n};\n\nvar renderInput = function renderInput(_ref4) {\n  var input = _ref4.input,\n      placeholder = _ref4.placeholder,\n      type = _ref4.type,\n      error = _ref4.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, input, {\n    type: type,\n    placeholder: placeholder,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, error));\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TextArea, Object.assign({\n    rows: 3\n  }, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n};\n\nvar maxlength = function maxlength(e) {\n  if (e.target.value > 99999) {\n    e.target.value = e.target.value.slice(0, 5);\n  } else if (e.target.value <= 0) {\n    e.target.value = '';\n  }\n};\n\nvar registNewListInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(registNewListInput, _React$Component);\n\n  function registNewListInput(props) {\n    var _this;\n\n    _classCallCheck(this, registNewListInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(registNewListInput).call(this, props));\n\n    _this.getHelpPopup = function (key) {\n      return React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"question circle outline\",\n          size: \"large\",\n          style: {\n            lineHeight: 'unset',\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }),\n        content: key == 'FlavorName' ? 'Name of the flavor' : key == 'RAM' ? 'RAM in megabytes' : key == 'vCPUs' ? 'Number of virtual CPUs' : key == 'Disk' ? 'Amount of disk space in gigabytes' : key // content={this.state.tip}\n        // style={style}\n        ,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.close();\n\n      _this.props.dispatch(reset('registNewListInput'));\n    };\n\n    _this.state = {\n      typeValue: '',\n      regionStatic: [{\n        key: 1,\n        value: \"US\",\n        text: \"US\"\n      }, {\n        key: 2,\n        value: \"EU\",\n        text: \"EU\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(registNewListInput, [{\n    key: \"handleInitialize\",\n    value: function handleInitialize() {\n      var initData = {\n        \"FlavorName\": \"\"\n      };\n      this.props.initialize(initData);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleInitialize();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          data = _this$props.data,\n          dimmer = _this$props.dimmer,\n          selected = _this$props.selected,\n          regKeys = _this$props.regKeys,\n          open = _this$props.open,\n          close = _this$props.close,\n          option = _this$props.option,\n          value = _this$props.value,\n          change = _this$props.change;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: handleSubmit,\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        style: {\n          width: 800\n        },\n        open: open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: true,\n        style: {\n          width: 800\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, data.length > 0 && regKeys ? regKeys.map(function (key, i) {\n        return React.createElement(Grid.Row, {\n          key: i,\n          columns: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 5,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, key == 'Region' ? 'Region *' : key === 'FlavorName' ? 'Flavor Name *' : key == 'RAM' ? 'RAM Size *' : key == 'vCPUs' ? 'Number of vCPUs *' : key == 'Disk' ? 'Disk Space *' : key)), React.createElement(Grid.Column, {\n          width: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, key === 'MasterFlavor' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select MasterFlavor\",\n          name: \"MasterFlavor\",\n          options: option[0],\n          value: value[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }) : key === 'NodeFlavor' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select NodeFlavor\",\n          name: \"NodeFlavor\",\n          options: option[0],\n          value: value[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }) : key === 'Region' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: \"Select Region\",\n          name: \"Region\",\n          options: _this2.state.regionStatic,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }) : key === 'RAM' ? React.createElement(Field, {\n          component: renderInputNum,\n          name: \"RAM\",\n          unit: \"MB\",\n          options: _this2.state.regionStatic,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }) : key === 'vCPUs' ? React.createElement(Field, {\n          component: renderInputNum,\n          name: \"vCPUs\",\n          options: _this2.state.regionStatic,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }) : key === 'Disk' ? React.createElement(Field, {\n          component: renderInputNum,\n          name: \"Disk\",\n          unit: \"GB\",\n          options: _this2.state.regionStatic,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: key,\n          placeholder: dimmer === 'blurring' ? '' : selected[key],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          width: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, _this2.getHelpPopup(key)), React.createElement(Divider, {\n          vertical: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }));\n      }) : null))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: handleSubmit,\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Save\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return registNewListInput;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"registNewListInput\",\n  validate: validate\n})(registNewListInput);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/registNewListInput.js"],"names":["React","Fragment","Button","Form","Item","Message","Divider","Modal","List","Grid","Card","Dropdown","Input","TextArea","Popup","Icon","Field","reduxForm","initialize","reset","MaterialIcon","validate","values","errors","FlavorName","RAM","vCPUs","Disk","renderSelect","input","options","placeholder","value","type","error","name","e","onChange","renderInputNum","unit","label","maxlength","basic","content","renderInput","renderTextArea","field","target","slice","registNewListInput","props","getHelpPopup","key","lineHeight","margin","handleClose","close","dispatch","state","typeValue","regionStatic","text","initData","handleInitialize","nextProps","handleSubmit","data","dimmer","selected","regKeys","open","option","change","width","display","flexDirection","length","map","i","validError","indexOf","Component","form"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n    Button,\n    Form,\n    Item,\n    Message,\n    Divider,\n    Modal,\n    List,\n    Grid,\n    Card,\n    Dropdown,\n    Input,\n    TextArea,\n    Popup, Icon\n} from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset } from \"redux-form\";\n\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\nimport '../css/index.css';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.FlavorName) {\n        errors.FlavorName = 'Required'\n    }\n    if (!values.RAM) {\n        errors.RAM = 'Required'\n    } \n    if (!values.vCPUs) {\n        errors.vCPUs = 'Required'\n    } \n    if (!values.Disk) {\n        errors.Disk = 'Required'\n    } \n    return errors\n}\n\nconst renderSelect = ({ input, options, placeholder, value, type, error }) => (\n    <div>\n        <Form.Select\n            name={input.name}\n            onChange={(e, { value }) => input.onChange(value)}\n            //onChange={field.input.onChange(field.value)}\n            options={options}\n            placeholder={placeholder}\n            value={value}\n            fluid\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n);\n\nconst renderInputNum = ({ input, unit, label, placeholder, type, error }) => (\n    <div>\n        <Form.Field\n            {...input}\n            type={type}\n        >\n            <label>{label}</label>\n            {(unit)?\n            <Input fluid\n                   type=\"number\"\n                   onChange={(e) => maxlength(e)}\n                   label={{ basic: true, content: unit}}\n                   labelPosition='right'></Input>\n            :\n            <Input fluid type=\"number\" onChange={(e) => maxlength(e)}></Input>}\n        </Form.Field>\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\n\nconst renderInput = ({ input, placeholder, type, error }) => (\n    <div>\n         <Form.Input\n            {...input}\n            type={type}\n            placeholder={placeholder}\n            fluid\n        />\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n   \n);\n\nconst renderTextArea = field => (\n    <Form>\n        <TextArea\n            rows={3}\n            {...field.input}\n            label={field.label}\n            placeholder={field.placeholder} />\n    </Form>\n);\n\nconst maxlength = (e) => {\n    if(e.target.value > 99999){\n        e.target.value = e.target.value.slice(0, 5);\n    } else if(e.target.value <= 0){\n        e.target.value = ''\n    }\n}\n\n\nclass registNewListInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeValue:'',\n            regionStatic:[\n                {key: 1, value: \"US\", text: \"US\"},\n                {key: 2, value: \"EU\", text: \"EU\"}\n            ]\n        };\n\n    }\n\n    handleInitialize() {\n        const initData = {\n            \"FlavorName\": \"\"\n        };\n        this.props.initialize(initData);\n    }\n\n    componentDidMount() {\n        this.handleInitialize();\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    getHelpPopup =(key)=> (\n        <Popup\n            trigger={<Icon name='question circle outline' size='large' style={{lineHeight:'unset', margin:'10px 0'}}/>}\n            content=\n                {(key=='FlavorName')? 'Name of the flavor'\n                    :(key=='RAM')? 'RAM in megabytes'\n                        :(key=='vCPUs')? 'Number of virtual CPUs'\n                            :(key=='Disk')? 'Amount of disk space in gigabytes'\n                                : key\n                }\n            // content={this.state.tip}\n            // style={style}\n            inverted\n        />\n    )\n\n    handleClose = () => {\n        this.props.close()\n        this.props.dispatch(reset('registNewListInput'));\n    }\n\n\n    render() {\n        const {handleSubmit, data, dimmer, selected, regKeys, open, close, option, value, change} = this.props;\n\n\n        return (\n            <Fragment>\n                <Form onSubmit={handleSubmit} className={\"fieldForm\"}>\n                    <Form.Group>\n                        <Modal style={{width:800}} open={open} onClose={this.handleClose}>\n                            <Modal.Header>Settings</Modal.Header>\n                            <Modal.Content>\n                                <div style={{display:'flex', flexDirection:'row', width:'100%'}}>\n                                    <Grid divided style={{width:800}}>\n                                    {\n                                        (data.length > 0 && regKeys)?\n                                        regKeys.map((key, i)=>(\n                                            <Grid.Row key={i} columns={3}>\n                                                <Grid.Column width={5} className='detail_item'>\n                                                    <div>{(key == 'Region')?'Region *':(key === 'FlavorName')?'Flavor Name *':(key == 'RAM')?'RAM Size *':(key == 'vCPUs')?'Number of vCPUs *':(key == 'Disk')?'Disk Space *':key}</div>\n                                                </Grid.Column>\n                                                <Grid.Column width={10}>\n                                                {\n                                                    (key === 'MasterFlavor')?\n                                                    <Field component={renderSelect} placeholder='Select MasterFlavor' name='MasterFlavor' options={option[0]} value={value[0]} />\n                                                    : (key === 'NodeFlavor')?\n                                                    <Field component={renderSelect} placeholder='Select NodeFlavor' name='NodeFlavor' options={option[0]} value={value[0]} />\n                                                    : (key === 'Region')?\n                                                    <Field component={renderSelect} placeholder='Select Region' name='Region' options={this.state.regionStatic} error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    : (key === 'RAM')?\n                                                    <Field component={renderInputNum} name='RAM' unit=\"MB\" options={this.state.regionStatic} error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    : (key === 'vCPUs')?\n                                                    <Field component={renderInputNum} name='vCPUs' options={this.state.regionStatic} error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    : (key === 'Disk' )?\n                                                    <Field component={renderInputNum} name='Disk'  unit=\"GB\" options={this.state.regionStatic} error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                    :\n                                                    <Field component={renderInput} type=\"input\" name={key} placeholder={(dimmer === 'blurring')? '' : selected[key] } error={(this.props.validError.indexOf(key) !== -1)?'Required':''} />\n                                                }\n                                                </Grid.Column>\n                                                <Grid.Column width={1}>\n                                                    {this.getHelpPopup(key)}\n                                                </Grid.Column>\n                                                <Divider vertical></Divider>\n                                            </Grid.Row>\n                                        ))\n                                        :null\n                                    }\n                                    </Grid>\n                                </div>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={this.handleClose}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    onClick={handleSubmit}\n                                    positive\n                                    icon='checkmark'\n                                    labelPosition='right'\n                                    content=\"Save\"\n                                    type=\"submit\"\n                                />\n                            </Modal.Actions>\n                        </Modal>\n                    </Form.Group>\n                </Form>\n            </Fragment>\n        );\n    }\n};\n\nexport default reduxForm({\n    form: \"registNewListInput\",\n    validate\n})(registNewListInput);\n"]},"metadata":{},"sourceType":"module"}