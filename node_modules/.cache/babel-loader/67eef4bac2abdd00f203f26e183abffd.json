{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormDefault.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Table, List, Grid, Card, Header, Divider, Tab, Item, Popup, Icon, Input, Dropdown } from \"semantic-ui-react\";\nimport { Field, reduxForm, initialize, reset, change, stopSubmit } from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport './styles.css';\n\nvar makeOption = function makeOption(options) {\n  return options.map(function (value) {\n    return {\n      key: value,\n      text: value,\n      value: value\n    };\n  });\n};\n\nvar renderSelect = function renderSelect(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref) {\n      var value = _ref.value;\n      return field.input.onChange(value);\n    },\n    options: makeOption(field.options),\n    placeholder: field.placeholder,\n    value: field.input.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), field.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, field.error));\n};\n\nvar renderInputNum = function renderInputNum(field) {\n  return React.createElement(Form.Field, Object.assign({}, field.input, {\n    type: field.type // placeholder={field.placeholder}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, field.label), React.createElement(Input, {\n    type: \"number\",\n    onChange: function onChange(e) {\n      if (e.target.value == 0 || e.target.value < 0) e.target.value = null;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nvar renderInput = function renderInput(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label // placeholder={field.placeholder}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), field.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, field.error));\n};\n\nvar renderInputCluster = function renderInputCluster(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label,\n    placeholder: 'Please use numbers and English letters only',\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      var reg = /^[0-9a-zA-Z][-0-9a-zA-Z.]*$/;\n\n      if (reg.test(value) || value == '') {\n        field.input.onChange(value);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), field.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, field.error));\n};\n\nvar renderInputDisabled = function renderInputDisabled(field) {\n  return React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label,\n    placeholder: field.placeholder,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nvar renderDropDown = function renderDropDown(field) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Dropdown, {\n    placeholder: field.placeholder,\n    fluid: true,\n    multiple: true,\n    selection: true,\n    options: makeOption(field.options),\n    onChange: function onChange(e, _ref3) {\n      var value = _ref3.value;\n      return field.input.onChange(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), field.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, field.error));\n};\n\nvar renderLocationInput = function renderLocationInput(_ref4) {\n  var input = _ref4.input,\n      placeholder = _ref4.placeholder,\n      change = _ref4.change,\n      type = _ref4.type,\n      error = _ref4.error,\n      initialValue = _ref4.initialValue;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Form.Field, Object.assign({}, input, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Input, {\n    fluid: true,\n    type: \"text\",\n    onChange: change,\n    value: initialValue,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, error));\n};\n\nvar style = {\n  borderRadius: 0,\n  opacity: 0.7,\n  padding: '2em'\n};\n\nvar SiteFourCreateFormDefault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourCreateFormDefault, _React$Component);\n\n  function SiteFourCreateFormDefault(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourCreateFormDefault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourCreateFormDefault).call(this, props));\n\n    _this.getHelpPopup = function (value) {\n      return React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"question circle outline\",\n          size: \"large\",\n          style: {\n            lineHeight: 'unset',\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }),\n        content: value,\n        style: style,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      });\n    };\n\n    _this.onHandleSubmit = function (a, b) {\n      _this.props.handleSubmit();\n    };\n\n    _this.onFormState = function (a, b) {\n      alert('onForm state', a, b);\n    };\n\n    _this.handleRegionChange = function (e) {\n      alert(e);\n\n      _this.props.getOptionData(e); //this.props.dispatch(reset('createAppFormDefault'));\n\n    };\n\n    _this.AddPorts = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        portArray: _this.state.portArray.concat('item')\n      });\n    };\n\n    _this.RemovePorts = function (e) {\n      var arr = _this.state.portArray;\n\n      if (arr.length > 1) {\n        arr.pop();\n      }\n\n      _this.setState({\n        portArray: arr\n      });\n    };\n\n    _this.receiveResult = function (result) {\n      var arr = [];\n      result.map(function (item, i) {\n        if (localStorage.selectMenu == 'Cluster Instances' && item.Type === 'developer' || localStorage.selectMenu == 'Cloudlets' && item.Type === 'operator') {\n          arr.push(item.Organization);\n        }\n      });\n\n      _this.setState({\n        orgArr: arr\n      });\n    };\n\n    _this.cancelClick = function (e) {\n      e.preventDefault();\n      var siteNum = 0;\n      console.log(\"cancelClickddd\", e, \":::\", _this.props);\n      if (localStorage.selectMenu == 'Cloudlets') siteNum = 2;else if (localStorage.selectMenu == 'Cluster Instances') siteNum = 4;\n\n      _this.props.gotoUrl(siteNum);\n    };\n\n    _this.state = {\n      typeValue: '',\n      data: null,\n      regKey: null,\n      fieldKeys: null,\n      dataInit: false,\n      portArray: ['item'],\n      orgArr: [],\n      ipAccessValue: [],\n      deployTypeDocker: false\n    };\n    return _this;\n  } // data.map((dt) => {\n\n\n  _createClass(SiteFourCreateFormDefault, [{\n    key: \"handleInitialize\",\n    value: function handleInitialize(data) {\n      var initData = [];\n      data.Latitude = '';\n      data.Longitude = '';\n\n      if (data.length) {} else {\n        this.props.initialize(data);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data && this.props.data.data.length) {\n        var keys = Object.keys(this.props.data.data[0]);\n        this.setState({\n          data: this.props.data.data[0],\n          regKeys: keys,\n          fieldKeys: this.props.data.keys,\n          pId: this.props.pId\n        });\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(this.props.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n\n      if (this.props.getUserRole == 'AdminManager') {\n        var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n        services.getMCService('showOrg', {\n          token: store ? store.userToken : 'null'\n        }, this.receiveResult);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.data && nextProps.data.data.length) {\n        var keys = Object.keys(nextProps.data.data[0]);\n        this.setState({\n          data: nextProps.data.data[0],\n          regKeys: keys,\n          fieldKeys: nextProps.data.keys,\n          pId: nextProps.pId\n        }); // submitSucceeded 초기화\n\n        if (this.props.toggleSubmit) {\n          this.props.dispatch(stopSubmit('createAppFormDefault', {}));\n        }\n\n        if (!this.state.dataInit) {\n          this.handleInitialize(nextProps.data.data[0]);\n          this.setState({\n            dataInit: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['label'] : null;\n    }\n  }, {\n    key: \"getNecessary\",\n    value: function getNecessary(key, pId) {\n      return this.state.fieldKeys && this.state.fieldKeys[pId][key] ? this.state.fieldKeys[pId][key]['necessary'] ? ' *' : '' : null;\n    }\n  }, {\n    key: \"onHandleChange\",\n    value: function onHandleChange(key, value, c) {\n      console.log(\"onChangeFormState111\", key, \":::\", value);\n\n      if (key === 'Region') {\n        this.props.onChangeState(key, value);\n      } else if (key === 'OrganizationName') {\n        this.props.onChangeState(key, value);\n      } else if (key === 'DeploymentType') {\n        if (value == 'Docker') {\n          this.setState({\n            ipAccessValue: ['Dedicated']\n          });\n          this.setState({\n            deployTypeDocker: true\n          });\n        } else if (value == 'Kubernetes') {\n          this.setState({\n            ipAccessValue: ['Dedicated', 'Shared']\n          });\n          this.setState({\n            deployTypeDocker: false\n          });\n        }\n\n        this.props.clusterHide(value);\n        this.props.onChangeState(key, value);\n      } else {\n        this.props.onChangeState(key, value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dimmer = _this$props.dimmer,\n          selected = _this$props.selected,\n          longLoc = _this$props.longLoc,\n          latLoc = _this$props.latLoc,\n          type = _this$props.type,\n          pId = _this$props.pId,\n          getUserRole = _this$props.getUserRole,\n          handleChangeLong = _this$props.handleChangeLong,\n          handleChangeLat = _this$props.handleChangeLat;\n      var _this$state = this.state,\n          data = _this$state.data,\n          regKeys = _this$state.regKeys,\n          fieldKeys = _this$state.fieldKeys;\n      var cType = type ? type.substring(0, 1).toUpperCase() + type.substring(1) : '';\n      return React.createElement(Item, {\n        className: \"content create-org\",\n        style: {\n          margin: '0 auto',\n          maxWidth: 1200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          borderBottom: '1px solid rgba(255,255,255,0.1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onHandleSubmit,\n        getFormState: this.onFormState,\n        className: \"fieldForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        style: {\n          flexDirection: 'column',\n          marginLeft: 10,\n          marginRight: 10,\n          alignContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, regKeys && regKeys.length > 0 ? regKeys.map(function (key, i) {\n        return _this2.getLabel(key, pId) ? !_this2.state.deployTypeDocker || key !== 'NumberOfMaster' && key !== 'NumberOfNode' ? React.createElement(Grid.Row, {\n          columns: 3,\n          key: i,\n          className: 'cloudletReg' + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 4,\n          className: \"detail_item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, _this2.getLabel(key, pId), _this2.getNecessary(key, pId))), React.createElement(Grid.Column, {\n          width: 11,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, fieldKeys[pId][key]['type'] === 'RenderSelect' ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          value: data[key],\n          options: fieldKeys[pId][key]['label'] !== 'IP Access' ? fieldKeys[pId][key]['items'] : _this2.state.ipAccessValue,\n          name: key,\n          onChange: function onChange(e) {\n            return _this2.onHandleChange(key, e, data[key]);\n          },\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderInputNum' ? React.createElement(Field, {\n          component: renderInputNum,\n          value: data[key],\n          name: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderDropDown' ? React.createElement(Field, {\n          placeholder: 'Select ' + fieldKeys[pId][key]['label'],\n          component: renderDropDown,\n          options: fieldKeys[pId][key]['items'],\n          name: key,\n          onChange: function onChange(e) {\n            return _this2.onHandleChange(key, e, data[key]);\n          },\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderInputDisabled' ? getUserRole == 'AdminManager' && (fieldKeys[pId][key]['label'] === 'Organization Name' || fieldKeys[pId][key]['label'] === 'Operator Name') ? React.createElement(Field, {\n          component: renderSelect,\n          placeholder: fieldKeys[pId][key]['label'] === 'Organization Name' ? 'Select Organization Name' : 'Select Operator',\n          options: _this2.state.orgArr,\n          name: key,\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }) : React.createElement(Field, {\n          disabled: true,\n          component: renderInputDisabled,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'RenderInputCluster' ? React.createElement(Field, {\n          component: renderInputCluster,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }) : fieldKeys[pId][key]['type'] === 'CloudletLocation' ? React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          columns: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, \"Latitude\"), React.createElement(Field, {\n          ref: latLoc,\n          name: \"Latitude\",\n          component: renderLocationInput,\n          placeholder: '-90 ~ 90',\n          change: handleChangeLat,\n          error: _this2.props.validError.indexOf('Latitude') !== -1 ? 'Required' : _this2.props.latError,\n          initialValue: _this2.props.regionInfo.lat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, \"Longitude\"), React.createElement(Field, {\n          ref: longLoc,\n          name: \"Longitude\",\n          component: renderLocationInput,\n          placeholder: '-180 ~ 180',\n          change: handleChangeLong,\n          error: _this2.props.validError.indexOf('Longitude') !== -1 ? 'Required' : _this2.props.longError,\n          initialValue: _this2.props.regionInfo.long,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        })))) : React.createElement(Field, {\n          component: renderInput,\n          type: \"input\",\n          name: key,\n          value: data[key],\n          onChange: function onChange(e) {\n            return _this2.onHandleChange(key, e.target.value);\n          },\n          error: _this2.props.validError.indexOf(key) !== -1 ? 'Required' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        })), React.createElement(Grid.Column, {\n          width: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, fieldKeys[pId][key] && fieldKeys[pId][key]['tip'] ? _this2.getHelpPopup(fieldKeys[pId][key]['tip']) : null)) : null : null;\n      }) : '')), React.createElement(Form.Group, {\n        className: \"submitButtonGroup orgButton\",\n        id: \"submitButtonGroup\",\n        inline: true,\n        style: {\n          flexDirection: 'row',\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          marginRight: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.cancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        primary: true,\n        positive: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return SiteFourCreateFormDefault;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"createAppFormDefault\",\n  enableReinitialize: true\n})(SiteFourCreateFormDefault);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/siteFourCreateFormDefault.js"],"names":["React","Fragment","Button","Form","Table","List","Grid","Card","Header","Divider","Tab","Item","Popup","Icon","Input","Dropdown","Field","reduxForm","initialize","reset","change","stopSubmit","MaterialIcon","services","makeOption","options","map","value","key","text","renderSelect","field","label","input","name","e","onChange","placeholder","error","renderInputNum","type","target","renderInput","renderInputCluster","reg","test","renderInputDisabled","renderDropDown","renderLocationInput","initialValue","style","borderRadius","opacity","padding","SiteFourCreateFormDefault","props","getHelpPopup","lineHeight","margin","onHandleSubmit","a","b","handleSubmit","onFormState","alert","handleRegionChange","getOptionData","AddPorts","preventDefault","setState","portArray","state","concat","RemovePorts","arr","length","pop","receiveResult","result","item","i","localStorage","selectMenu","Type","push","Organization","orgArr","cancelClick","siteNum","console","log","gotoUrl","typeValue","data","regKey","fieldKeys","dataInit","ipAccessValue","deployTypeDocker","initData","Latitude","Longitude","keys","Object","regKeys","pId","handleInitialize","getUserRole","store","PROJECT_INIT","JSON","parse","getMCService","token","userToken","nextProps","toggleSubmit","dispatch","c","onChangeState","clusterHide","dimmer","selected","longLoc","latLoc","handleChangeLong","handleChangeLat","cType","substring","toUpperCase","maxWidth","borderBottom","flexDirection","marginLeft","marginRight","alignContent","getLabel","getNecessary","onHandleChange","validError","indexOf","latError","regionInfo","lat","longError","long","Component","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport {Button, Form, Table, List, Grid, Card, Header, Divider, Tab, Item, Popup, Icon, Input, Dropdown} from \"semantic-ui-react\";\n\nimport { Field, reduxForm, initialize, reset, change, stopSubmit } from \"redux-form\";\nimport MaterialIcon from \"material-icons-react\";\nimport * as services from '../services/service_compute_service';\nimport './styles.css';\n\n\nconst makeOption =(options)=> (\n    options.map((value) =>(\n        {key:value, text:value, value:value}\n    ))\n)\n\nconst renderSelect = field => (\n    <div>\n        <Form.Select\n            label={field.label}\n            name={field.input.name}\n            onChange={(e, { value }) => field.input.onChange(value)}\n            options={makeOption(field.options)}\n            placeholder={field.placeholder}\n            value={field.input.value}\n        />\n        {field.error && <span className=\"text-danger\">{field.error}</span>}\n    </div>\n);\n\nconst renderInputNum = field => (\n    <Form.Field\n        {...field.input}\n        type={field.type}\n        // placeholder={field.placeholder}\n    >\n        <label>{field.label}</label>\n        <Input type=\"number\" onChange={(e)=>{if(e.target.value == 0 || e.target.value < 0) e.target.value = null}}></Input>\n    </Form.Field>\n);\nconst renderInput = field => (\n    <div>\n        <Form.Input\n            {...field.input}\n            type={field.type}\n            label={field.label}\n            // placeholder={field.placeholder}\n        />\n        {field.error && <span className=\"text-danger\">{field.error}</span>}\n    </div>\n);\nconst renderInputCluster = field => (\n    <div>\n        <Form.Input\n            {...field.input}\n            type={field.type}\n            label={field.label}\n            placeholder={'Please use numbers and English letters only'}\n            onChange={(e, { value }) => {\n                const reg = /^[0-9a-zA-Z][-0-9a-zA-Z.]*$/;\n                if(reg.test(value) || value == ''){\n                    field.input.onChange(value)\n                }\n            }}\n        />\n        {field.error && <span className=\"text-danger\">{field.error}</span>}\n    </div>\n);\nconst renderInputDisabled = field => (\n    <Form.Input\n        {...field.input}\n        type={field.type}\n        label={field.label}\n        placeholder={field.placeholder}\n        disabled\n    />\n);\nconst renderDropDown = field => (\n    <div>\n        <Form.Dropdown\n            placeholder={field.placeholder}\n            fluid\n            multiple\n            selection\n            options={makeOption(field.options)}\n            onChange={(e, { value }) => field.input.onChange(value)}\n        />\n        {field.error && <span className=\"text-danger\">{field.error}</span>}\n    </div>\n);\nconst renderLocationInput = ({ input, placeholder, change, type, error, initialValue }) => (\n    <div>\n        <Form.Field\n            {...input}\n            type={type}\n        >\n            <Input fluid type=\"text\"\n                   onChange={change}\n                   value={initialValue}\n                   placeholder={placeholder}\n                   ></Input>\n        </Form.Field>\n        {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n\n);\n\nconst style = {\n    borderRadius: 0,\n    opacity: 0.7,\n    padding:'2em'\n}\n\nclass SiteFourCreateFormDefault extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeValue:'',\n            data:null,\n            regKey:null,\n            fieldKeys:null,\n            dataInit:false,\n            portArray:['item'],\n            orgArr:[],\n            ipAccessValue:[],\n            deployTypeDocker:false\n        };\n\n    }\n\n    // data.map((dt) => {\n    handleInitialize(data) {\n        const initData = [];\n        data.Latitude = '';\n        data.Longitude = '';\n        if(data.length){\n\n        } else {\n            this.props.initialize(data);\n\n        }\n\n    }\n\n\n    componentDidMount() {\n        if(this.props.data && this.props.data.data.length){\n            let keys = Object.keys(this.props.data.data[0])\n            this.setState({data:this.props.data.data[0], regKeys:keys, fieldKeys:this.props.data.keys, pId:this.props.pId})\n            if(!this.state.dataInit){\n                this.handleInitialize(this.props.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n        if(this.props.getUserRole == 'AdminManager') {\n            let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n            services.getMCService('showOrg',{token:store ? store.userToken : 'null'}, this.receiveResult)\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.data && nextProps.data.data.length){\n            let keys = Object.keys(nextProps.data.data[0])\n            this.setState({data:nextProps.data.data[0], regKeys:keys, fieldKeys:nextProps.data.keys, pId:nextProps.pId})\n            // submitSucceeded 초기화\n            if(this.props.toggleSubmit) {\n                this.props.dispatch(stopSubmit('createAppFormDefault',{}))\n            }\n            if(!this.state.dataInit){\n                this.handleInitialize(nextProps.data.data[0]);\n                this.setState({dataInit:true})\n            }\n        }\n        \n        \n    }\n\n    getLabel (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['label'] : null\n    }\n    getNecessary (key, pId) {\n        return (this.state.fieldKeys && this.state.fieldKeys[pId][key]) ? this.state.fieldKeys[pId][key]['necessary'] ? ' *':'' : null\n    }\n\n    getHelpPopup =(value)=> (\n        <Popup\n            trigger={<Icon name='question circle outline' size='large' style={{lineHeight:'unset', margin:'10px 0'}} />}\n            content={value}\n            style={style}\n            inverted\n        />\n    )\n    onHandleSubmit=(a,b)=> {\n        this.props.handleSubmit();\n    }\n    onFormState=(a,b)=> {\n        alert('onForm state',a,b)\n    }\n    onHandleChange(key,value,c){\n        console.log(\"onChangeFormState111\",key,\":::\",value)\n        if(key === 'Region'){\n            this.props.onChangeState(key,value)\n        } else if(key === 'OrganizationName') {\n            this.props.onChangeState(key,value)\n        } else if(key === 'DeploymentType') {\n            if(value == 'Docker') {\n                this.setState({ipAccessValue:['Dedicated']})\n                this.setState({deployTypeDocker:true})\n            } else if(value == 'Kubernetes') {\n                this.setState({ipAccessValue:['Dedicated','Shared']})\n                this.setState({deployTypeDocker:false})\n            }\n            this.props.clusterHide(value);\n            this.props.onChangeState(key,value)\n        } else {\n            this.props.onChangeState(key,value)\n        }\n    }\n\n    handleRegionChange = (e) => {\n        alert(e)\n        this.props.getOptionData(e)\n        //this.props.dispatch(reset('createAppFormDefault'));\n    }\n\n    AddPorts = (e) => {\n        e.preventDefault();\n        this.setState({portArray:this.state.portArray.concat('item')})\n    }\n    RemovePorts = (e) => {\n        let arr = this.state.portArray;\n        if(arr.length > 1) {\n            arr.pop()\n        }\n        this.setState({portArray:arr}); \n    }\n    receiveResult = (result) => {\n        let arr = [];\n        result.map((item,i) => {\n            if((localStorage.selectMenu == 'Cluster Instances' && item.Type === 'developer') || (localStorage.selectMenu == 'Cloudlets' && item.Type === 'operator')){\n                arr.push(item.Organization);\n            }\n        })\n        this.setState({orgArr:arr});\n    }\n\n    cancelClick = (e) => {\n        e.preventDefault();\n        let siteNum = 0;\n        console.log(\"cancelClickddd\",e,\":::\",this.props)\n        if(localStorage.selectMenu == 'Cloudlets') siteNum = 2\n        else if(localStorage.selectMenu == 'Cluster Instances') siteNum = 4\n        this.props.gotoUrl(siteNum)\n    }\n    \n    render (){\n        const {  dimmer, selected, longLoc, latLoc, type, pId, getUserRole, handleChangeLong, handleChangeLat } = this.props;\n        const { data, regKeys, fieldKeys } = this.state;\n        let cType = (type)?type.substring(0,1).toUpperCase() + type.substring(1):'';\n        return (\n\n            <Item className='content create-org' style={{margin:'0 auto', maxWidth:1200}}>\n                <Header style={{borderBottom:'1px solid rgba(255,255,255,0.1)'}}>Settings</Header>\n                <Fragment >\n                    <Form onSubmit={this.onHandleSubmit} getFormState={this.onFormState} className={\"fieldForm\"} >\n                        <Form.Group widths=\"equal\" style={{flexDirection:'column', marginLeft:10, marginRight:10, alignContent:'space-around'}}>\n                            <Grid columns={2}>\n                                {\n                                    (regKeys && regKeys.length > 0) ?\n                                        regKeys.map((key, i) => (\n\n                                            (this.getLabel(key, pId))?\n                                                (!this.state.deployTypeDocker || (key !== 'NumberOfMaster' && key !== 'NumberOfNode')) ?\n                                                <Grid.Row columns={3} key={i} className={'cloudletReg'+i}>\n\n                                                    <Grid.Column width={4} className='detail_item'>\n                                                        <div>{this.getLabel(key, pId)}{this.getNecessary(key, pId)}</div>\n                                                    </Grid.Column>\n                                                    <Grid.Column width={11}>\n                                                        {\n                                                            (fieldKeys[pId][key]['type'] === 'RenderSelect') ?\n                                                            <Field\n                                                                component={renderSelect}\n                                                                placeholder={'Select '+fieldKeys[pId][key]['label'] }\n                                                                value={data[key]}\n                                                                options={(fieldKeys[pId][key]['label'] !== 'IP Access') ? fieldKeys[pId][key]['items'] : this.state.ipAccessValue}\n                                                                name={key}\n                                                                onChange={(e)=>this.onHandleChange(key,e,data[key])}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderInputNum') ?\n                                                            <Field\n                                                                component={renderInputNum}\n                                                                value={data[key]}\n                                                                name={key}\n                                                            />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderDropDown') ?\n                                                            <Field\n                                                                placeholder={'Select '+fieldKeys[pId][key]['label'] }\n                                                                component={renderDropDown}\n                                                                options={fieldKeys[pId][key]['items']}\n                                                                name={key}\n                                                                onChange={(e)=>this.onHandleChange(key,e,data[key])}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}\n                                                            />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderInputDisabled') ?\n                                                                (getUserRole == 'AdminManager' && (fieldKeys[pId][key]['label'] === 'Organization Name' || fieldKeys[pId][key]['label'] === 'Operator Name')) ?\n                                                                    <Field\n                                                                        component={renderSelect}\n                                                                        placeholder={(fieldKeys[pId][key]['label'] === 'Organization Name')?'Select Organization Name':'Select Operator'}\n                                                                        options={this.state.orgArr}\n                                                                        name={key}\n                                                                        error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                                :\n                                                                    <Field\n                                                                        disabled\n                                                                        component={renderInputDisabled}\n                                                                        type=\"input\"\n                                                                        name={key}\n                                                                        value={data[key]}\n                                                                        />\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'RenderInputCluster') ?\n                                                            <Field\n                                                                component={renderInputCluster}\n                                                                type=\"input\"\n                                                                name={key}\n                                                                value={data[key]}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                            :\n                                                            (fieldKeys[pId][key]['type'] === 'CloudletLocation') ?\n                                                            <Grid>\n                                                                <Grid.Row columns={2}>\n                                                                    <Grid.Column><span>Latitude</span>\n                                                                        <Field ref={latLoc} name='Latitude' component={renderLocationInput} placeholder={'-90 ~ 90'}\n                                                                                                            change={handleChangeLat} error={(this.props.validError.indexOf('Latitude') !== -1)?'Required':this.props.latError}\n                                                                                                            initialValue={this.props.regionInfo.lat}\n                                                                        />\n                                                                        </Grid.Column>\n                                                                    <Grid.Column><span>Longitude</span>\n                                                                        <Field ref={longLoc} name='Longitude' component={renderLocationInput} placeholder={'-180 ~ 180'}\n                                                                                                            change={handleChangeLong} error={(this.props.validError.indexOf('Longitude') !== -1)?'Required':this.props.longError}\n                                                                                                            initialValue={this.props.regionInfo.long}\n                                                                        />\n                                                                        </Grid.Column>\n                                                                </Grid.Row>\n                                                            </Grid>\n                                                            :\n                                                            <Field\n                                                                component={renderInput}\n                                                                type=\"input\"\n                                                                name={key}\n                                                                value={data[key]}\n                                                                onChange={(e)=>this.onHandleChange(key,e.target.value)}\n                                                                error={(this.props.validError.indexOf(key) !== -1)?'Required':''}/>\n                                                        }\n                                                    </Grid.Column>\n                                                    <Grid.Column width={1}>\n                                                    {(fieldKeys[pId][key] && fieldKeys[pId][key]['tip']) ? this.getHelpPopup(fieldKeys[pId][key]['tip']):null}\n\n                                                    </Grid.Column>\n                                                </Grid.Row>\n                                                :\n                                                null\n                                            : null\n                                        ))\n                                        : ''\n                                }\n                            </Grid>\n                        </Form.Group>\n                        <Form.Group className={\"submitButtonGroup orgButton\"} id={\"submitButtonGroup\"} inline style={{flexDirection:'row', marginLeft:10, marginRight:10}}>\n                            <Form.Group inline>\n                                {/*<Button onClick={()=>this.onHandleReset()}>Reset</Button>*/}\n                                <span style={{marginRight:'1em'}}>\n                                    <Button onClick={this.cancelClick}>\n                                        Cancel\n                                    </Button>\n                                </span>\n                                <Button\n                                    primary\n                                    positive\n                                    icon='checkmark'\n                                    labelPosition='right'\n                                    content=\"Create\"\n                                />\n                            </Form.Group>\n\n                        </Form.Group>\n                    </Form>\n                </Fragment>\n            </Item>\n        )\n        \n    }\n};\n\nexport default reduxForm({\n    form: \"createAppFormDefault\",\n    enableReinitialize: true,\n})(SiteFourCreateFormDefault);\n"]},"metadata":{},"sourceType":"module"}