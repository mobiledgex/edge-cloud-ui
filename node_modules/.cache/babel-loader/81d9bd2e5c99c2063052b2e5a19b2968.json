{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/react-simple-maps/lib/projections.js"],"names":["Object","defineProperty","exports","value","default","width","height","config","projectionName","scale","_projectionConfig2","xOffset","yOffset","rotation","precision","baseProjection","projectionReference","translate","rotate","clipAngle","_d3GeoProjection","require","_d3Geo","_projectionConfig","_interopRequireDefault","obj","__esModule","mercator","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","albersUsa","geoAlbersUsa","orthographic","geoOrthographic"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIAD,OAAO,CAACE,OAAR,GAAkB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,cAAjC,EAAiD;AAEjE,MAAIC,KAAK,GAAGF,MAAM,CAACE,KAAP,IAAgBC,kBAAkB,CAACN,OAAnB,CAA2BK,KAAvD;AACA,MAAIE,OAAO,GAAGJ,MAAM,CAACI,OAAP,IAAkBD,kBAAkB,CAACN,OAAnB,CAA2BO,OAA3D;AACA,MAAIC,OAAO,GAAGL,MAAM,CAACK,OAAP,IAAkBF,kBAAkB,CAACN,OAAnB,CAA2BQ,OAA3D;AACA,MAAIC,QAAQ,GAAGN,MAAM,CAACM,QAAP,IAAmBH,kBAAkB,CAACN,OAAnB,CAA2BS,QAA7D;AACA,MAAIC,SAAS,GAAGP,MAAM,CAACO,SAAP,IAAoBJ,kBAAkB,CAACN,OAAnB,CAA2BU,SAA/D;AAEA,MAAIC,cAAc,GAAGC,mBAAmB,CAACR,cAAD,CAAnB,GAAsCC,KAAtC,CAA4CA,KAA5C,EAAmDQ,SAAnD,CAA6D,CAACN,OAAO,GAAGN,KAAK,GAAG,CAAnB,EAAsBO,OAAO,GAAGN,MAAM,GAAG,CAAzC,CAA7D,EAA0GQ,SAA1G,CAAoHA,SAApH,CAArB;AAEA,SAAON,cAAc,KAAK,WAAnB,GAAiCO,cAAjC,GAAkDP,cAAc,KAAK,cAAnB,GAAoCO,cAAc,CAACG,MAAf,CAAsBL,QAAtB,EAAgCM,SAAhC,CAA0C,EAA1C,CAApC,GAAoFJ,cAAc,CAACG,MAAf,CAAsBL,QAAtB,CAA7I;AACD,CAXD;;AAaA,IAAIO,gBAAgB,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIX,kBAAkB,GAAGc,sBAAsB,CAACD,iBAAD,CAA/C;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAErB,IAAAA,OAAO,EAAEqB;AAAX,GAArC;AAAwD;;AAE/F,IAAIT,mBAAmB,GAAG;AACxBW,EAAAA,QAAQ,EAAEL,MAAM,CAACM,WADO;AAExBC,EAAAA,MAAM,EAAET,gBAAgB,CAACU,SAFD;AAGxBC,EAAAA,KAAK,EAAEX,gBAAgB,CAACY,QAHA;AAIxBC,EAAAA,QAAQ,EAAEb,gBAAgB,CAACc,WAJH;AAKxBC,EAAAA,OAAO,EAAEf,gBAAgB,CAACgB,UALF;AAMxBC,EAAAA,OAAO,EAAEjB,gBAAgB,CAACkB,UANF;AAOxBC,EAAAA,SAAS,EAAEjB,MAAM,CAACkB,YAPM;AAQxBC,EAAAA,YAAY,EAAEnB,MAAM,CAACoB;AARG,CAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};"]},"metadata":{},"sourceType":"script"}