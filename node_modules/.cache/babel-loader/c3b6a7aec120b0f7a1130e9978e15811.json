{"ast":null,"code":"import _defineProperty from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/popLegendViewer.js\";\nimport React from 'react';\nimport { Button, Divider, Modal, Grid, Table, Menu, Label, Icon } from \"semantic-ui-react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport * as moment from 'moment';\nvar roles = {\n  Developer: {\n    Manager: {\n      'Users': 'Manage',\n      'Cloudlets': 'View',\n      'Flavor': 'View',\n      'Cluster Instance': 'Manage',\n      'Apps': 'Manage',\n      'App Instance': 'Manage'\n    },\n    Contributor: {\n      'Users': 'View',\n      'Cloudlets': 'View',\n      'Flavor': 'View',\n      'Cluster Instance': 'Manage',\n      'Apps': 'Manage',\n      'App Instance': 'Manage'\n    },\n    Viewer: {\n      'Users': 'View',\n      'Cloudlets': 'View',\n      'Flavor': 'View',\n      'Cluster Instance': 'View',\n      'Apps': 'View',\n      'App Instance': 'View'\n    }\n  },\n  Operator: {\n    Manager: {\n      'Users': 'Manage',\n      'Cloudlets': 'Manage',\n      'Flavor': 'disabled',\n      'Cluster Instance': 'disabled',\n      'Apps': 'disabled',\n      'App Instance': 'disabled'\n    },\n    Contributor: {\n      'Users': 'View',\n      'Cloudlets': 'Manage',\n      'Flavor': 'disabled',\n      'Cluster Instance': 'disabled',\n      'Apps': 'disabled',\n      'App Instance': 'disabled'\n    },\n    Viewer: {\n      'Users': 'View',\n      'Cloudlets': 'View',\n      'Flavor': 'disabled',\n      'Cluster Instance': 'disabled',\n      'Apps': 'disabled',\n      'App Instance': 'disabled'\n    }\n  }\n};\nvar _self = null;\n\nvar PopLegendViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopLegendViewer, _React$Component);\n\n  function PopLegendViewer() {\n    var _this;\n\n    _classCallCheck(this, PopLegendViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopLegendViewer).call(this));\n\n    _this.makeTextBox = function (value) {\n      return React.createElement(TextareaAutosize, {\n        minRows: 3,\n        maxRows: 10,\n        style: {\n          boxSizing: \"border-box\",\n          width: '400px',\n          backgroundColor: '#545b6b',\n          color: '#eeeeee'\n        },\n        defaultValue: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    };\n\n    _this.setCloudletList = function (operNm) {\n      var cl = [];\n\n      _self.state.cloudletResult[operNm].map(function (oper, i) {\n        if (i === 0) _self.setState({\n          dropdownValueThree: oper.CloudletName\n        });\n        cl.push({\n          key: i,\n          value: oper.CloudletName,\n          text: oper.CloudletName\n        });\n      });\n\n      _self.setState({\n        devOptionsThree: cl\n      });\n    };\n\n    _this.state = {\n      dummyData: [],\n      selected: {},\n      open: false,\n      dimmer: '',\n      devOptionsOne: [],\n      devOptionsTwo: [],\n      devOptionsThree: [],\n      devOptionsFour: [],\n      devOptionsFive: [],\n      dropdownValueOne: '',\n      dropdownValueTwo: '',\n      dropdownValueThree: '',\n      dropdownValueFour: '',\n      dropdownValueFive: '',\n      cloudletResult: null,\n      appResult: null,\n      listOfDetail: null,\n      propsData: '',\n      orgType: ''\n    };\n    _self = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(PopLegendViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var _this2 = this;\n\n      if (nextProps.open) {\n        this.setState({\n          open: nextProps.open,\n          dimmer: nextProps.dimmer\n        });\n        var regKeys = [];\n        var component = null;\n\n        if (nextProps.data) {\n          this.setState({\n            orgType: nextProps.data.Type\n          });\n          regKeys = Object.keys(nextProps.data);\n          component = regKeys.map(function (key, i) {\n            var _React$createElement;\n\n            return key !== 'Edit' ? React.createElement(Grid.Row, {\n              columns: 2,\n              key: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(Grid.Column, {\n              width: 5,\n              className: \"detail_item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, key === 'FlavorName' ? 'Flavor Name' : key == 'RAM' ? 'RAM Size' : key == 'vCPUs' ? 'Number of vCPUs' : key == 'Disk' ? 'Disk Space'\n            /* 여기까지 Flavors*/\n            : key == 'OrganizationName' ? 'Organization Name' : key == 'AppName' ? 'App Name' : key == 'DeploymentType' ? 'Deployment Type' : key == 'ImageType' ? 'Image Type' : key == 'ImagePath' ? 'Image Path' : key == 'DefaultFlavor' ? 'Default Flavor' : key == 'DeploymentMF' ? 'Deployment Manifest'\n            /* 여기까지 Apps*/\n            : key == 'AuthPublicKey' ? 'Auth Public Key' : key)), React.createElement(Grid.Column, {\n              width: 11,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, React.createElement(\"div\", (_React$createElement = {\n              style: {\n                wordWrap: 'break-word'\n              }\n            }, _defineProperty(_React$createElement, \"style\", {\n              overflowY: 'auto'\n            }), _defineProperty(_React$createElement, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), key == 'DeploymentType' && String(nextProps.data[key]) === 'docker' ? \"Docker\" : key == 'DeploymentType' && String(nextProps.data[key]) === 'vm' ? \"VM\" : key == 'DeploymentType' && String(nextProps.data[key]) === 'kubernetes' ? \"Kubernetes\" : key == 'DeploymentType' && String(nextProps.data[key]) === 'helm' ? \"Helm\" : key == 'Ports' ? String(nextProps.data[key]).toUpperCase() : key == 'DeploymentMF' ? _this2.makeTextBox(nextProps.data[key]) : key == 'ImageType' && String(nextProps.data[key]) === '1' ? \"Docker\" : key == 'ImageType' && String(nextProps.data[key]) === '2' ? \"Qcow\"\n            /* 여기까지 Apps*/\n            : key == 'Created' ? String(\"time is ==  \" + nextProps.data[key]) : typeof nextProps.data[key] === 'object' ? JSON.stringify(nextProps.data[key]) : String(nextProps.data[key]))), React.createElement(Divider, {\n              vertical: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            })) : null;\n          });\n        }\n\n        this.setState({\n          listOfDetail: component,\n          propsData: nextProps.data\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        open: false\n      });\n      this.props.close();\n    }\n  }, {\n    key: \"getUserRole\",\n    value: function getUserRole(type) {\n      return localStorage.selectRole == 'AdminManager' ? 'Manage' : localStorage.selectRole == 'DeveloperManager' ? roles.Developer['Manager'][type] : localStorage.selectRole == 'DeveloperContributor' ? roles.Developer['Contributor'][type] : localStorage.selectRole == 'DeveloperViewer' ? roles.Developer['Viewer'][type] : localStorage.selectRole == 'OperatorManager' ? roles.Operator['Manager'][type] : localStorage.selectRole == 'OperatorContributor' ? roles.Operator['Contributor'][type] : localStorage.selectRole == 'OperatorViewer' ? roles.Operator['Viewer'][type] : '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var orgType = this.state.orgType;\n      return React.createElement(Modal, {\n        style: {\n          width: '450px'\n        },\n        className: \"modal_role\",\n        open: this.state.open,\n        dimmer: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Permission of Role\"), React.createElement(Modal.Content, {\n        scrolling: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        role: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: \"stepOrgDeveloper2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        onClick: this.orgTypeLegendShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"markBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, localStorage.selectRole == 'AdminManager' ? React.createElement(\"div\", {\n        className: \"mark markA markS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"S\") : localStorage.selectRole == 'DeveloperManager' ? React.createElement(\"div\", {\n        className: \"mark markD markM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"M\") : localStorage.selectRole == 'DeveloperContributor' ? React.createElement(\"div\", {\n        className: \"mark markD markC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"C\") : localStorage.selectRole == 'DeveloperViewer' ? React.createElement(\"div\", {\n        className: \"mark markD markV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"V\") : localStorage.selectRole == 'OperatorManager' ? React.createElement(\"div\", {\n        className: \"mark markO markM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"M\") : localStorage.selectRole == 'OperatorContributor' ? React.createElement(\"div\", {\n        className: \"mark markO markC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"C\") : localStorage.selectRole == 'OperatorViewer' ? React.createElement(\"div\", {\n        className: \"mark markO markV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"V\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        width: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, localStorage.selectRole == 'AdminManager' ? localStorage.selectRole : localStorage.selectRole)), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Table, {\n        celled: true,\n        inverted: true,\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          width: '35%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Users\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.getUserRole('Users'))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Cloudlets\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.getUserRole('Cloudlets'))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Flavor\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.getUserRole('Flavor'))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Cluster Instance\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, this.getUserRole('Cluster Instance'))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Apps\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.getUserRole('Apps'))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"App Instance\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, this.getUserRole('App Instance'))))))))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.close();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return PopLegendViewer;\n}(React.Component);\n\nexport { PopLegendViewer as default };","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/container/popLegendViewer.js"],"names":["React","Button","Divider","Modal","Grid","Table","Menu","Label","Icon","TextareaAutosize","moment","roles","Developer","Manager","Contributor","Viewer","Operator","_self","PopLegendViewer","makeTextBox","value","boxSizing","width","backgroundColor","color","setCloudletList","operNm","cl","state","cloudletResult","map","oper","i","setState","dropdownValueThree","CloudletName","push","key","text","devOptionsThree","dummyData","selected","open","dimmer","devOptionsOne","devOptionsTwo","devOptionsFour","devOptionsFive","dropdownValueOne","dropdownValueTwo","dropdownValueFour","dropdownValueFive","appResult","listOfDetail","propsData","orgType","nextProps","nextContext","regKeys","component","data","Type","Object","keys","wordWrap","overflowY","String","toUpperCase","JSON","stringify","props","close","type","localStorage","selectRole","orgTypeLegendShow","getUserRole","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Divider, Modal, Grid, Table, Menu, Label, Icon} from \"semantic-ui-react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport * as moment from 'moment';\n\n\nconst roles =\n    {\n        Developer: {\n            Manager: {\n                'Users': 'Manage',\n                'Cloudlets': 'View',\n                'Flavor': 'View',\n                'Cluster Instance': 'Manage',\n                'Apps': 'Manage',\n                'App Instance': 'Manage'\n            },\n            Contributor: {\n                'Users': 'View',\n                'Cloudlets': 'View',\n                'Flavor': 'View',\n                'Cluster Instance': 'Manage',\n                'Apps': 'Manage',\n                'App Instance': 'Manage'\n            },\n            Viewer: {\n                'Users': 'View',\n                'Cloudlets': 'View',\n                'Flavor': 'View',\n                'Cluster Instance': 'View',\n                'Apps': 'View',\n                'App Instance': 'View'\n            }\n        },\n        Operator: {\n            Manager: {\n                'Users': 'Manage',\n                'Cloudlets': 'Manage',\n                'Flavor': 'disabled',\n                'Cluster Instance': 'disabled',\n                'Apps': 'disabled',\n                'App Instance': 'disabled'\n            },\n            Contributor: {\n                'Users': 'View',\n                'Cloudlets': 'Manage',\n                'Flavor': 'disabled',\n                'Cluster Instance': 'disabled',\n                'Apps': 'disabled',\n                'App Instance': 'disabled'\n            },\n            Viewer: {\n                'Users': 'View',\n                'Cloudlets': 'View',\n                'Flavor': 'disabled',\n                'Cluster Instance': 'disabled',\n                'Apps': 'disabled',\n                'App Instance': 'disabled'\n            },\n        }\n    }\n\nlet _self = null;\nexport default class PopLegendViewer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            dummyData:[],\n            selected:{},\n            open:false,\n            dimmer:'',\n            devOptionsOne:[],\n            devOptionsTwo:[],\n            devOptionsThree:[],\n            devOptionsFour:[],\n            devOptionsFive:[],\n            dropdownValueOne:'',\n            dropdownValueTwo:'',\n            dropdownValueThree:'',\n            dropdownValueFour:'',\n            dropdownValueFive:'',\n            cloudletResult:null,\n            appResult:null,\n            listOfDetail:null,\n            propsData:'',\n            orgType:''\n        }\n        _self = this;\n    }\n\n    makeTextBox = (value) => (\n        <TextareaAutosize\n            minRows={3}\n            maxRows={10}\n            style={{ boxSizing: \"border-box\", width:'400px', backgroundColor:'#545b6b', color:'#eeeeee' }}\n            defaultValue={value}></TextareaAutosize>\n    )\n\n    componentDidMount() {\n\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.open) {\n            this.setState({open:nextProps.open, dimmer:nextProps.dimmer});\n            let regKeys = [];\n            let component = null;\n            if(nextProps.data){\n                this.setState({orgType:nextProps.data.Type})\n                regKeys = Object.keys(nextProps.data)\n                component = regKeys.map((key, i)=>(\n                    (key !== 'Edit')?\n                    <Grid.Row columns={2} key={i}>\n                        <Grid.Column width={5} className='detail_item'>\n                            <div>\n                                {(key === 'FlavorName')?'Flavor Name'\n                                 :(key == 'RAM')?'RAM Size'\n                                 :(key == 'vCPUs')?'Number of vCPUs'\n                                 :(key == 'Disk')?'Disk Space' /* 여기까지 Flavors*/\n                                 :(key == 'OrganizationName')?'Organization Name'\n                                 :(key == 'AppName')?'App Name'\n                                 :(key == 'DeploymentType')?'Deployment Type'\n                                 :(key == 'ImageType')?'Image Type'\n                                 :(key == 'ImagePath')?'Image Path'\n                                 :(key == 'DefaultFlavor')?'Default Flavor'\n                                 :(key == 'DeploymentMF')?'Deployment Manifest' /* 여기까지 Apps*/\n                                 :(key == 'AuthPublicKey')?'Auth Public Key'\n                                 :key}\n                            </div>\n                        </Grid.Column>\n                        <Grid.Column width={11}>\n                            <div style={{wordWrap: 'break-word'}} style={{overflowY:'auto'}}>\n                                {(key == 'DeploymentType' && String(nextProps.data[key]) === 'docker')?\"Docker\"\n                                :(key == 'DeploymentType' && String(nextProps.data[key]) === 'vm')?\"VM\"\n                                :(key == 'DeploymentType' && String(nextProps.data[key]) === 'kubernetes')?\"Kubernetes\"\n                                :(key == 'DeploymentType' && String(nextProps.data[key]) === 'helm')?\"Helm\"\n                                :(key == 'Ports')?String(nextProps.data[key]).toUpperCase()\n                                :(key == 'DeploymentMF')? this.makeTextBox(nextProps.data[key])\n                                :(key == 'ImageType' && String(nextProps.data[key]) === '1')?\"Docker\"\n                                :(key == 'ImageType' && String(nextProps.data[key]) === '2')?\"Qcow\" /* 여기까지 Apps*/\n                                :(key == 'Created')? String(\"time is ==  \"+nextProps.data[key])\n                                :(typeof nextProps.data[key] === 'object')? JSON.stringify(nextProps.data[key])\n                                :String(nextProps.data[key])}\n                            </div>\n                        </Grid.Column>\n\n                        <Divider vertical></Divider>\n                    </Grid.Row>\n                        :null\n\n                ))\n            }\n            this.setState({listOfDetail:component,propsData:nextProps.data})\n        }\n\n    }\n\n    setCloudletList = (operNm) => {\n        let cl = [];\n        _self.state.cloudletResult[operNm].map((oper, i) => {\n            if(i === 0) _self.setState({dropdownValueThree: oper.CloudletName})\n            cl.push({ key: i, value: oper.CloudletName, text: oper.CloudletName })\n        })\n\n        _self.setState({devOptionsThree: cl})\n    }\n\n\n\n    close() {\n        this.setState({ open: false })\n        this.props.close()\n    }\n    getUserRole (type) {\n        return (localStorage.selectRole == 'AdminManager') ? 'Manage' :\n            (localStorage.selectRole == 'DeveloperManager') ? roles.Developer['Manager'][type] :\n                (localStorage.selectRole == 'DeveloperContributor') ? roles.Developer['Contributor'][type] :\n                    (localStorage.selectRole == 'DeveloperViewer') ? roles.Developer['Viewer'][type] :\n                        (localStorage.selectRole == 'OperatorManager') ? roles.Operator['Manager'][type] :\n                            (localStorage.selectRole == 'OperatorContributor') ? roles.Operator['Contributor'][type] :\n                                (localStorage.selectRole == 'OperatorViewer') ? roles.Operator['Viewer'][type] :\n                                    ''\n    }\n\n    render() {\n        let { orgType } = this.state;\n        return (\n            <Modal style={{width: '450px'}} className=\"modal_role\" open={this.state.open} dimmer={false}>\n                <Modal.Header >Permission of Role</Modal.Header>\n                <Modal.Content scrolling>\n                    <Modal.Description>\n                        <Grid divided>\n                            <div role={\"list\"}>\n\n                            </div>\n\n                        </Grid>\n                        <Grid className=\"stepOrgDeveloper2\">\n                            <Grid.Row columns={2} onClick={this.orgTypeLegendShow}>\n                                <Grid.Column width={5}>\n                                    <div className=\"markBox\">\n                                        {\n                                            (localStorage.selectRole == 'AdminManager')? <div className=\"mark markA markS\">S</div>\n                                                :\n                                                (localStorage.selectRole == 'DeveloperManager')?\n                                                    <div className=\"mark markD markM\">M</div>\n                                                    :\n                                                    (localStorage.selectRole == 'DeveloperContributor')?\n                                                        <div className=\"mark markD markC\">C</div>\n                                                        :\n                                                        (localStorage.selectRole == 'DeveloperViewer')?\n                                                            <div className=\"mark markD markV\">V</div>\n                                                            :\n                                                            (localStorage.selectRole == 'OperatorManager')?\n                                                                <div className=\"mark markO markM\">M</div>\n                                                                :\n                                                                (localStorage.selectRole == 'OperatorContributor')?\n                                                                    <div className=\"mark markO markC\">C</div>\n                                                                    :\n                                                                    (localStorage.selectRole == 'OperatorViewer')?\n                                                                        <div className=\"mark markO markV\">V</div>\n                                                                        :\n                                                                        <div></div>\n                                        }\n                                    </div>\n                                </Grid.Column>\n                                <Grid.Column width={11}>\n                                    {\n                                        (localStorage.selectRole == 'AdminManager') ? localStorage.selectRole : localStorage.selectRole\n                                    }\n                                </Grid.Column>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Table celled inverted selectable>\n                                    {/* <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell>Name</Table.HeaderCell>\n                                            <Table.HeaderCell>Status</Table.HeaderCell>\n\n                                        </Table.Row>\n                                    </Table.Header> */}\n\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell style={{width:'35%'}}>Users</Table.Cell>\n                                            <Table.Cell>\n                                                {this.getUserRole('Users')}\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Cloudlets</Table.Cell>\n                                            <Table.Cell>\n                                                {this.getUserRole('Cloudlets')}\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Flavor</Table.Cell>\n                                            <Table.Cell>{this.getUserRole('Flavor')}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Cluster Instance</Table.Cell>\n                                            <Table.Cell>{this.getUserRole('Cluster Instance')}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Apps</Table.Cell>\n                                            <Table.Cell>{this.getUserRole('Apps')}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>App Instance</Table.Cell>\n                                            <Table.Cell>{this.getUserRole('App Instance')}</Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.close()}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}