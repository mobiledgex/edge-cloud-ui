{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/sites/siteThree.js\";\nimport React from 'react';\nimport { Grid, Image, Header, Menu, Dropdown, Button, Popup } from 'semantic-ui-react';\nimport sizeMe from 'react-sizeme';\nimport AnalysticViewZone from '../container/analysticViewZone';\nimport { withRouter } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './siteThree.css'; //\n\nimport * as service from '../services/service_compute_service';\nimport * as aggregate from '../utils';\nimport { LOCAL_STRAGE_KEY } from \"../components/utils/Settings\";\nvar _devOptionsOne = [{\n  key: 'op',\n  value: 'op',\n  text: 'Deutsche Telecom'\n}, {\n  key: 'op1',\n  value: 'op1',\n  text: 'SK Telecom'\n}, {\n  key: 'op2',\n  value: 'op2',\n  text: 'Other Telecom'\n}];\nvar _devOptionsTwo = [{\n  key: 'cl',\n  value: 'cl',\n  text: 'Barcelona MWC'\n}];\nvar rgn = ['US', 'KR', 'EU'];\nvar _self = null;\n\nvar SiteThree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteThree, _React$Component);\n\n  function SiteThree(props) {\n    var _this;\n\n    _classCallCheck(this, SiteThree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteThree).call(this, props));\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n      return _this.setState({\n        activeItem: name\n      });\n    };\n\n    _this.handleChange = function (e, _ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleChangeOne = function (e, _ref3) {\n      var value = _ref3.value;\n\n      _this.setState({\n        dropdownValueOne: value\n      }); //reset list of sub dropwDown\n\n\n      _this.setCloudletList(value);\n    };\n\n    _this.handleChangeTwo = function (e, _ref4) {//this.setState({ dropdownValueTwo: value })\n\n      var value = _ref4.value;\n    };\n\n    _this.setCloudletList = function (operNm) {\n      var cl = [];\n\n      if (_self.state.cloudletResult && _self.state.cloudletResult[operNm]) {\n        _self.state.cloudletResult[operNm].map(function (oper, i) {\n          if (i === 0) _self.setState({\n            dropdownValueTwo: oper.CloudletName\n          });\n          cl.push({\n            key: i,\n            value: oper.CloudletName,\n            text: oper.CloudletName\n          });\n        });\n      }\n\n      _self.setState({\n        devOptionsTwo: cl\n      });\n    };\n\n    _this.getDataDeveloper = function (region) {\n      console.log(\"changeRegion@@\", region);\n      _self.loadCount = 0;\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null; //TODO: region에 대한 데이터를  DB에서 가져와야 함.\n\n      var serviceBody = {};\n\n      _self.setState({\n        devData: [],\n        cloudletData: [],\n        clusterInstData: []\n      });\n\n      if (region !== 'All') {\n        rgn = [region];\n      } else {\n        rgn = ['US', 'KR', 'EU'];\n      }\n\n      if (localStorage.selectRole == 'AdminManager') {\n        rgn.map(function (item) {\n          // All show clusterInst\n          console.log(\"changeRegionitem\", item);\n          service.getMCService('ShowClusterInst', {\n            token: store ? store.userToken : 'null',\n            region: item\n          }, _self.receiveResultClusterInst);\n        });\n      } else {\n        rgn.map(function (item) {\n          serviceBody = {\n            \"token\": store ? store.userToken : 'null',\n            \"params\": {\n              \"region\": item,\n              \"clusterinst\": {\n                \"key\": {\n                  \"developer\": localStorage.selectOrg\n                }\n              }\n            }\n          }; // org별 show clusterInst\n\n          service.getMCService('ShowClusterInsts', serviceBody, _self.receiveResultClusterInst);\n        });\n      }\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.state = {\n      shouldShowBox: true,\n      shouldShowCircle: false,\n      contHeight: 0,\n      contWidth: 0,\n      bodyHeight: 0,\n      activeItem: 'Monitoring',\n      devOptionsOne: _devOptionsOne,\n      devOptionsTwo: _devOptionsTwo,\n      dropdownValueOne: 'TDG',\n      dropdownValueTwo: 'barcelona-mexdemo',\n      email: 'Administrator',\n      selectedCloudlet: null,\n      clusters: [],\n      clusterInstData: [],\n      appClusterData: []\n    };\n    _this.headerH = 70;\n    _this.hgap = 0;\n    return _this;\n  } //go to\n\n\n  _createClass(SiteThree, [{\n    key: \"gotoPreview\",\n    value: function gotoPreview(site) {\n      //브라우져 입력창에 주소 기록\n      var mainPath = site;\n      var subPath = 'pg=1';\n\n      _self.props.history.push({\n        pathname: mainPath,\n        search: subPath,\n        state: {\n          some: 'state'\n        }\n      });\n\n      _self.props.history.location.search = subPath;\n\n      _self.props.handleChangeSite({\n        mainPath: mainPath,\n        subPath: subPath\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        bodyHeight: window.innerHeight - this.headerH\n      });\n      this.setState({\n        contHeight: (window.innerHeight - this.headerH) / 2 - this.hgap\n      });\n    }\n  }, {\n    key: \"receiveOper\",\n    value: function receiveOper(result) {\n      _self.setState({\n        devOptionsOne: result.map(function (oper, i) {\n          return {\n            key: i,\n            value: oper.OperatorName,\n            text: oper.OperatorName\n          };\n        })\n      });\n    }\n  }, {\n    key: \"receiveCloudlet\",\n    value: function receiveCloudlet(result) {\n      var groupByOper = aggregate.groupBy(result, 'Operator');\n\n      _self.setState({\n        devOptionsTwo: groupByOper['TDG'].map(function (oper, i) {\n          return {\n            key: i,\n            value: oper.CloudletName,\n            text: oper.CloudletName\n          };\n        })\n      });\n\n      _self.setState({\n        cloudletResult: groupByOper\n      });\n    }\n  }, {\n    key: \"receiveAppinst\",\n    value: function receiveAppinst(result) {\n      var groupByOper = aggregate.groupBy(result, 'CloudletName');\n      console.log('receive cloudlet in appinstance ==<<<<<< ', groupByOper); //TODO: 클라우드렛 선택에 대한 클러스터들\n    }\n  }, {\n    key: \"receiveCluster\",\n    value: function receiveCluster(cloudlet) {}\n  }, {\n    key: \"getClusterInfo\",\n    value: function getClusterInfo() {// 오퍼의 클러스터 정보\n      //service.getComputeService('cloudlet', this.receiveCloudlet)\n    }\n  }, {\n    key: \"receiveResultClusterInst\",\n    value: function receiveResultClusterInst(result) {\n      if (result.length) _self.groupJoin(result, 'clusterInst');\n    }\n  }, {\n    key: \"groupJoin\",\n    value: function groupJoin(result, cmpt) {\n      var clinst = _self.state.clusterInstData;\n      if (cmpt == 'clusterInst') this.setState({\n        clusterInstData: _self.state.clusterInstData.concat(result)\n      });\n      this.props.handleLoadingSpinner(false);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('selectedCloudlet check ...', this.props.selectedCloudlet);\n      var selectedCloudlet = this.props.selectedCloudlet;\n\n      if (!selectedCloudlet) {\n        selectedCloudlet = 'barcelona-mexdemo';\n      }\n\n      if (selectedCloudlet) {\n        setTimeout(function () {\n          _self.setState({\n            selectedCloudlet: selectedCloudlet,\n            dropdownValueTwo: selectedCloudlet\n          });\n        }, 1000);\n      }\n\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null; // console.log('info.. store == ', store)\n\n      if (store && store.userToken) {\n        this.getDataDeveloper('All');\n      } // Login check\n\n\n      var storage_data = localStorage.getItem(LOCAL_STRAGE_KEY);\n\n      if (!storage_data) {\n        return;\n      }\n\n      var storage_json = JSON.parse(storage_data);\n\n      if (storage_json.email) {\n        this.setState({\n          email: storage_json.email\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        bodyHeight: window.innerHeight - this.headerH\n      });\n      this.setState({\n        contHeight: (nextProps.size.height - this.headerH) / 2 - this.hgap\n      });\n\n      if (nextProps.user) {\n        this.setState({\n          email: nextProps.user.email\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          shouldShowBox = _this$state.shouldShowBox,\n          shouldShowCircle = _this$state.shouldShowCircle;\n      var activeItem = this.state.activeItem;\n      return React.createElement(Grid, {\n        className: \"view_body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        className: \"gnb_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 11,\n        className: \"navbar_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Header.Content, {\n        onClick: function onClick() {\n          return _this2.gotoPreview('/site2');\n        },\n        className: \"brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"nav_filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 5,\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Operator\")), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Operator\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: this.state.devOptionsOne,\n        value: this.state.dropdownValueOne,\n        onChange: this.handleChangeOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Cloudlet\")), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Cloudlet\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: this.state.devOptionsTwo,\n        value: this.state.dropdownValueTwo,\n        onChange: this.handleChangeTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'refresh',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))))), React.createElement(Grid.Column, {\n        width: 5,\n        className: \"navbar_right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          return _this2.gotoPreview('/site1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'public',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'notifications_none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        trigger: React.createElement(\"div\", {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: \"/assets/avatar/avatar_default.svg\",\n          avatar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, this.state.email)),\n        content: React.createElement(Button, {\n          content: \"Log out\",\n          onClick: function onClick() {\n            return _this2.gotoPreview('/logout');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }),\n        on: \"click\",\n        position: \"bottom center\",\n        className: \"gnb_logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Support\")))), React.createElement(Grid.Row, {\n        columns: 2,\n        className: \"view_contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 2,\n        className: \"view_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        secondary: true,\n        vertical: true,\n        className: \"view_left_menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"Monitoring\",\n        active: activeItem === 'Monitoring',\n        onClick: this.handleItemClick,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_menu_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'desktop_windows',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Monitoring\"))), React.createElement(Menu.Item, {\n        name: \"Alarm/Log\",\n        active: activeItem === 'Alarm/Log',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_menu_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'access_alarm',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Alarm/Log\"))), React.createElement(Menu.Item, {\n        name: \"Inventory\",\n        active: activeItem === 'Inventory',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_menu_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'list_alt',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Inventory\"))), React.createElement(Menu.Item, {\n        name: \"Notification\",\n        active: activeItem === 'Notification',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_menu_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        icon: 'notifications_active',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Notification\"))))), React.createElement(Grid.Column, {\n        width: 14,\n        style: {\n          height: this.state.bodyHeight\n        },\n        className: \"contents_body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(AnalysticViewZone, {\n        clusterInstData: this.state.clusterInstData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SiteThree;\n}(React.Component);\n\n;\nSiteThree.defaultProps = {\n  selectedCloudlet: 'barcelona-mexdemo'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectData(data));\n    },\n    handleLoadingSpinner: function handleLoadingSpinner(data) {\n      dispatch(actions.loadingSpinner(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(sizeMe({\n  monitorHeight: true\n})(SiteThree)));\n/*\nconst CustomerPortalContainer = styled.main\n    background-color: rgb(255, 255, 255);\n    min-height: 90px;\n    width: ${gridSize() * 100}px;\n;\nconst GridLayoutWithWidth = WidthProvider(GridLayout);\n<GridLayoutWrapper>\n    <GridLayoutWithWidth\n        className=\"layout\"\n        layout={layout}\n        margin={[gridSize() * 2, gridSize()]}\n        cols={12}\n        rowHeight={13}\n        onLayoutChange={bfContext.onLayoutChange}\n    >\n        {renderLayout(layout)}\n    </GridLayoutWithWidth>\n</GridLayoutWrapper>\n */","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/sites/siteThree.js"],"names":["React","Grid","Image","Header","Menu","Dropdown","Button","Popup","sizeMe","AnalysticViewZone","withRouter","MaterialIcon","connect","actions","service","aggregate","LOCAL_STRAGE_KEY","_devOptionsOne","key","value","text","_devOptionsTwo","rgn","_self","SiteThree","props","handleItemClick","e","name","setState","activeItem","handleChange","handleChangeOne","dropdownValueOne","setCloudletList","handleChangeTwo","operNm","cl","state","cloudletResult","map","oper","i","dropdownValueTwo","CloudletName","push","devOptionsTwo","getDataDeveloper","region","console","log","loadCount","store","localStorage","PROJECT_INIT","JSON","parse","serviceBody","devData","cloudletData","clusterInstData","selectRole","item","getMCService","token","userToken","receiveResultClusterInst","selectOrg","shouldShowBox","shouldShowCircle","contHeight","contWidth","bodyHeight","devOptionsOne","email","selectedCloudlet","clusters","appClusterData","headerH","hgap","site","mainPath","subPath","history","pathname","search","some","location","handleChangeSite","window","innerHeight","result","OperatorName","groupByOper","groupBy","cloudlet","length","groupJoin","cmpt","clinst","concat","handleLoadingSpinner","setTimeout","storage_data","getItem","storage_json","nextProps","size","height","user","gotoPreview","cursor","Component","defaultProps","mapStateToProps","mapDispatchProps","dispatch","data","changeSite","handleInjectData","injectData","loadingSpinner","monitorHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Image, Header, Menu, Dropdown, Button, Popup} from 'semantic-ui-react';\nimport sizeMe from 'react-sizeme';\nimport AnalysticViewZone from '../container/analysticViewZone';\nimport { withRouter } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react';\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport './siteThree.css';\n//\nimport * as service from '../services/service_compute_service';\nimport * as aggregate from '../utils';\nimport {LOCAL_STRAGE_KEY} from \"../components/utils/Settings\";\n\nlet _devOptionsOne = [\n    { key: 'op', value: 'op', text: 'Deutsche Telecom' },\n    { key: 'op1', value: 'op1', text: 'SK Telecom' },\n    { key: 'op2', value: 'op2', text: 'Other Telecom' }\n]\nlet _devOptionsTwo = [\n    { key: 'cl', value: 'cl', text: 'Barcelona MWC' }\n]\n\nlet rgn = ['US','KR','EU'];\nlet _self = null;\nclass SiteThree extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        this.state = {\n            shouldShowBox: true,\n            shouldShowCircle: false,\n            contHeight:0,\n            contWidth:0,\n            bodyHeight:0,\n            activeItem: 'Monitoring',\n            devOptionsOne:_devOptionsOne,\n            devOptionsTwo:_devOptionsTwo,\n            dropdownValueOne:'TDG',\n            dropdownValueTwo:'barcelona-mexdemo',\n            email:'Administrator',\n            selectedCloudlet:null,\n            clusters:[],\n            clusterInstData:[],\n            appClusterData:[]\n        };\n        this.headerH = 70;\n        this.hgap = 0;\n    }\n\n    //go to\n    gotoPreview(site) {\n        //브라우져 입력창에 주소 기록\n        let mainPath = site;\n        let subPath = 'pg=1';\n        _self.props.history.push({\n            pathname: mainPath,\n            search: subPath,\n            state: { some: 'state' }\n        });\n        _self.props.history.location.search = subPath;\n        _self.props.handleChangeSite({mainPath:mainPath, subPath: subPath})\n\n    }\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n    handleChange = (e, { value }) => {\n        this.setState({ value })\n    }\n    handleChangeOne = (e, {value}) => {\n        this.setState({ dropdownValueOne: value })\n        //reset list of sub dropwDown\n        this.setCloudletList(value)\n    }\n    handleChangeTwo = (e, {value}) => {\n        //this.setState({ dropdownValueTwo: value })\n    }\n    componentWillMount() {\n        this.setState({bodyHeight : (window.innerHeight - this.headerH)})\n        this.setState({contHeight:(window.innerHeight-this.headerH)/2 - this.hgap})\n    }\n    receiveOper(result) {\n        _self.setState({devOptionsOne: result.map((oper, i) => (\n                { key: i, value: oper.OperatorName, text: oper.OperatorName }\n            ))})\n    }\n    receiveCloudlet(result) {\n        let groupByOper = aggregate.groupBy(result, 'Operator')\n        _self.setState({devOptionsTwo: groupByOper['TDG'].map((oper, i) => (\n                { key: i, value: oper.CloudletName, text: oper.CloudletName }\n            ))})\n        _self.setState({cloudletResult:groupByOper})\n\n\n\n    }\n    receiveAppinst(result) {\n        let groupByOper = aggregate.groupBy(result, 'CloudletName')\n        console.log('receive cloudlet in appinstance ==<<<<<< ', groupByOper)\n\n        //TODO: 클라우드렛 선택에 대한 클러스터들\n    }\n\n    receiveCluster(cloudlet) {\n\n    }\n    getClusterInfo() {\n        // 오퍼의 클러스터 정보\n        //service.getComputeService('cloudlet', this.receiveCloudlet)\n    }\n\n\n    setCloudletList = (operNm) => {\n        let cl = [];\n        if(_self.state.cloudletResult && _self.state.cloudletResult[operNm]) {\n            _self.state.cloudletResult[operNm].map((oper, i) => {\n                if(i === 0) _self.setState({dropdownValueTwo: oper.CloudletName})\n                cl.push({ key: i, value: oper.CloudletName, text: oper.CloudletName })\n            })\n        }\n        _self.setState({devOptionsTwo: cl})\n    }\n\n\n    receiveResultClusterInst(result) {\n        if(result.length)_self.groupJoin(result,'clusterInst')\n    }\n\n\n    groupJoin(result,cmpt){\n        let clinst = _self.state.clusterInstData;\n        if(cmpt == 'clusterInst') this.setState({clusterInstData:_self.state.clusterInstData.concat(result)})\n        this.props.handleLoadingSpinner(false);\n\n    }\n\n    getDataDeveloper = (region) => {\n        console.log(\"changeRegion@@\",region)\n        _self.loadCount = 0;\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n\n        //TODO: region에 대한 데이터를  DB에서 가져와야 함.\n\n        let serviceBody = {}\n        _self.setState({devData:[], cloudletData:[], clusterInstData:[]})\n        if(region !== 'All'){\n            rgn = [region];\n        } else {\n            rgn = ['US','KR','EU'];\n        }\n\n        if(localStorage.selectRole == 'AdminManager') {\n            rgn.map((item) => {\n                // All show clusterInst\n                console.log(\"changeRegionitem\",item)\n                service.getMCService('ShowClusterInst',{token:store ? store.userToken : 'null', region:item}, _self.receiveResultClusterInst)\n            })\n        } else {\n            rgn.map((item) => {\n                serviceBody = {\n                    \"token\":store ? store.userToken : 'null',\n                    \"params\": {\n                        \"region\":item,\n                        \"clusterinst\":{\n                            \"key\":{\n                                \"developer\": localStorage.selectOrg\n                            }\n                        }\n                    }\n                }\n                // org별 show clusterInst\n                service.getMCService('ShowClusterInsts',serviceBody, _self.receiveResultClusterInst)\n            })\n        }\n\n    }\n    componentDidMount() {\n        console.log('selectedCloudlet check ...', this.props.selectedCloudlet)\n        let selectedCloudlet = this.props.selectedCloudlet;\n        if(!selectedCloudlet){\n            selectedCloudlet = 'barcelona-mexdemo'\n        }\n        if(selectedCloudlet){\n            setTimeout(() => {\n                _self.setState({\n                    selectedCloudlet:selectedCloudlet,\n                    dropdownValueTwo:selectedCloudlet\n                })\n            }, 1000)\n\n        }\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        // console.log('info.. store == ', store)\n        if(store && store.userToken) {\n            this.getDataDeveloper('All');\n        }\n\n\n        // Login check\n        const storage_data = localStorage.getItem(LOCAL_STRAGE_KEY)\n        if (!storage_data) {\n            return;\n        }\n        const storage_json = JSON.parse(storage_data)\n        if(storage_json.email) {\n            this.setState({email:storage_json.email})\n        }\n\n\n    }\n    componentWillReceiveProps(nextProps) {\n\n        this.setState({bodyHeight : (window.innerHeight - this.headerH)})\n        this.setState({contHeight:(nextProps.size.height-this.headerH)/2 - this.hgap})\n        if(nextProps.user) {\n            this.setState({email:nextProps.user.email})\n        }\n\n\n    }\n    render() {\n        const {shouldShowBox, shouldShowCircle} = this.state;\n        const { activeItem } = this.state\n        return (\n            <Grid className='view_body'>\n                <Grid.Row className='gnb_header'>\n                    <Grid.Column width={11} className='navbar_left'>\n                        <Header>\n                            <Header.Content onClick={() => this.gotoPreview('/site2')} className='brand' >\n                                {/* <MaterialIcon icon={'arrow_back'} />\n                                MobiledgeX Console */}\n                            </Header.Content>\n                        </Header>\n                        <div className='nav_filter'>\n                            <Grid.Row columns={5} className='filter'>\n                                <Grid.Column>\n                                    <div className='title'>Operator</div>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Dropdown placeholder='Select Operator' fluid search selection options={this.state.devOptionsOne} value={this.state.dropdownValueOne} onChange={this.handleChangeOne}/>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <div className='title'>Cloudlet</div>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Dropdown placeholder='Select Cloudlet' fluid search selection options={this.state.devOptionsTwo} value={this.state.dropdownValueTwo} onChange={this.handleChangeTwo} />\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <MaterialIcon icon={'refresh'} />\n                                </Grid.Column>\n                            </Grid.Row>\n                        </div>\n                    </Grid.Column>\n                    <Grid.Column width={5} className='navbar_right'>\n                        <div style={{cursor:'pointer'}} onClick={() => this.gotoPreview('/site1')}>\n                            <MaterialIcon icon={'public'} />\n                        </div>\n                        <div>\n                            <MaterialIcon icon={'notifications_none'} />\n                        </div>\n                        <Popup\n                            trigger={<div style={{cursor:'pointer'}}>\n                                <Image src='/assets/avatar/avatar_default.svg' avatar />\n                                <span>{this.state.email}</span>\n                            </div>}\n                            content={<Button content='Log out' onClick={() => this.gotoPreview('/logout')} />}\n                            on='click'\n                            position='bottom center'\n                            className='gnb_logout'\n                        />\n                        <div>\n                            <span>Support</span>\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={2} className='view_contents'>\n                    <Grid.Column width={2} className='view_left'>\n                        <Menu secondary vertical className='view_left_menu'>\n                            <Menu.Item\n                                name='Monitoring'\n                                active={activeItem === 'Monitoring'}\n                                onClick={this.handleItemClick}\n                                selected\n                            >\n                                <div className=\"left_menu_item\">\n                                    <MaterialIcon icon={'desktop_windows'}/>\n                                    <div className='label'>Monitoring</div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item\n                                name='Alarm/Log'\n                                active={activeItem === 'Alarm/Log'}\n                                onClick={this.handleItemClick}\n                            >\n                                <div className=\"left_menu_item\">\n                                    <MaterialIcon icon={'access_alarm'} />\n                                    <div className='label'>Alarm/Log</div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item\n                                name='Inventory'\n                                active={activeItem === 'Inventory'}\n                                onClick={this.handleItemClick}\n                            >\n                                <div className=\"left_menu_item\">\n                                    <MaterialIcon icon={'list_alt'} />\n                                    <div className='label'>Inventory</div>\n                                </div>\n                            </Menu.Item>\n                            <Menu.Item\n                                name='Notification'\n                                active={activeItem === 'Notification'}\n                                onClick={this.handleItemClick}\n                            >\n                                <div className=\"left_menu_item\">\n                                    <MaterialIcon icon={'notifications_active'} />\n                                    <div className='label'>Notification</div>\n                                </div>\n                            </Menu.Item>\n                            {/*<Dropdown item text='Display Options'>*/}\n                                {/*<Dropdown.Menu>*/}\n                                    {/*<Dropdown.Header>Text Size</Dropdown.Header>*/}\n                                    {/*<Dropdown.Item>Small</Dropdown.Item>*/}\n                                    {/*<Dropdown.Item>Medium</Dropdown.Item>*/}\n                                    {/*<Dropdown.Item>Large</Dropdown.Item>*/}\n                                {/*</Dropdown.Menu>*/}\n                            {/*</Dropdown>*/}\n                        </Menu>\n                    </Grid.Column>\n                    <Grid.Column width={14} style={{height:this.state.bodyHeight}} className='contents_body'>\n                        <AnalysticViewZone clusterInstData={this.state.clusterInstData}></AnalysticViewZone>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n};\nSiteThree.defaultProps = {\n    selectedCloudlet:'barcelona-mexdemo'\n}\nconst mapStateToProps = (state) => {\n\n    return {\n        user:state.user\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectData: (data) => { dispatch(actions.injectData(data))},\n        handleLoadingSpinner: (data) => { dispatch(actions.loadingSpinner(data))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(sizeMe({ monitorHeight: true })(SiteThree)));\n\n\n/*\nconst CustomerPortalContainer = styled.main\n    background-color: rgb(255, 255, 255);\n    min-height: 90px;\n    width: ${gridSize() * 100}px;\n;\nconst GridLayoutWithWidth = WidthProvider(GridLayout);\n<GridLayoutWrapper>\n    <GridLayoutWithWidth\n        className=\"layout\"\n        layout={layout}\n        margin={[gridSize() * 2, gridSize()]}\n        cols={12}\n        rowHeight={13}\n        onLayoutChange={bfContext.onLayoutChange}\n    >\n        {renderLayout(layout)}\n    </GridLayoutWithWidth>\n</GridLayoutWrapper>\n */\n"]},"metadata":{},"sourceType":"module"}