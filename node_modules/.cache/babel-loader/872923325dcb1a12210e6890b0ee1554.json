{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/headerGlobalMini.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Grid, Image, Popup } from 'semantic-ui-react';\nimport MaterialIcon, { colorPalette } from 'material-icons-react';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'react-s-alert'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport * as Service from '../services/service_login_api';\nimport './styles.css';\nimport PopSettingViewer from '../container/popSettingViewer'; // import PopProfileViewer from \"./popProfileViewer\";\n\nimport PopProfileViewer from '../container/popProfileViewer';\nvar _self = null;\n\nvar headerGlobalMini =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(headerGlobalMini, _React$Component);\n\n  function headerGlobalMini(props) {\n    var _this;\n\n    _classCallCheck(this, headerGlobalMini);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(headerGlobalMini).call(this, props));\n\n    _this.onHandleClick = function (e, data) {\n      this.props.handleChangeSite(data.children.props.to);\n    };\n\n    _this.closeProfile = function (mode) {\n      if (mode === 'verify') {\n        _self.props.handleClickLogin(mode);\n      } else {}\n\n      _this.setState({\n        openProfile: false\n      });\n    };\n\n    _this.menuAdmin = function () {\n      return React.createElement(Button.Group, {\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.profileView();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Your profile\"), React.createElement(Button, {\n        style: {},\n        onClick: function onClick() {\n          return _this.gotoPreview('/logout');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, _this.props.location.pathname === \"/site4\" ? _this.props.email : _this.state.email), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Logout\")));\n    };\n\n    _self = _assertThisInitialized(_this);\n    _this.onHandleClick = _this.onHandleClick.bind(_assertThisInitialized(_this));\n    var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n    _this.state = {\n      email: store ? store.email : 'Administrator',\n      openProfile: false,\n      // openSettings:false,\n      userInfo: {\n        info: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(headerGlobalMini, [{\n    key: \"gotoPreview\",\n    value: function gotoPreview(value) {\n      if (value == '/logout') {\n        try {\n          localStorage.removeItem('selectOrg');\n          localStorage.removeItem('selectRole');\n          localStorage.removeItem('selectMenu');\n        } catch (error) {}\n      } //브라우져 입력창에 주소 기록\n\n\n      var mainPath = value;\n      var subPath = 'pg=0';\n      this.props.history.push({\n        pathname: mainPath,\n        search: subPath,\n        state: {\n          some: 'state'\n        },\n        userInfo: {\n          info: null\n        }\n      });\n      this.props.history.location.search = subPath;\n      this.props.handleChangeSite({\n        mainPath: mainPath,\n        subPath: subPath\n      });\n    }\n  }, {\n    key: \"loginState\",\n    value: function loginState() {//this.gotoPreview('/logout')\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      var token = store ? store.userToken : 'null';\n      Service.getCurrentUserInfo('currentUser', {\n        token: token\n      }, this.receiveCurrentUser, this);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.user) {\n        this.setState({\n          email: nextProps.user.email\n        });\n      }\n\n      if (nextProps.userInfo) {\n        this.setState({\n          userInfo: nextProps.userInfo\n        });\n      }\n    }\n  }, {\n    key: \"receiveCurrentUser\",\n    value: function receiveCurrentUser(result) {\n      if (result.data && result.data.message) {\n        _self.setState({\n          tokenState: 'expired'\n        });\n\n        this.props.handleAlertInfo('error', result.data.message);\n        setTimeout(function () {\n          return _self.gotoPreview('/logout');\n        }, 2000);\n      } else {\n        _self.setState({\n          tokenState: 'live'\n        });\n\n        _self.setState({\n          userInfo: result.data\n        });\n      }\n    }\n  }, {\n    key: \"profileView\",\n    value: function profileView() {\n      var store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n      var token = store ? store.userToken : 'null';\n      Service.getCurrentUserInfo('currentUser', {\n        token: token\n      }, this.receiveCurrentUser, this);\n      this.setState({\n        openProfile: true\n      });\n    } // settingsView() {\n    //     this.setState({openProfile:false, openSettings:true})\n    // }\n\n  }, {\n    key: \"resetPassword\",\n    // closeSettings = () => {\n    //     this.setState({openSettings:false})\n    // }\n    // createUser() {\n    //     this.setState({})\n    // }\n    value: function resetPassword() {\n      this.props.handleClickLogin('forgot');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var imageProps = {\n        avatar: true,\n        spaced: 'right',\n        src: '/assets/avatar/avatar_default.svg'\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        trigger: React.createElement(\"div\", {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: \"/assets/avatar/avatar_default.svg\",\n          avatar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, this.props.location.pathname === \"/site4\" ? this.props.email : this.state.email)),\n        content: this.menuAdmin(),\n        on: \"click\",\n        position: \"bottom center\",\n        className: \"gnb_logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(PopProfileViewer, {\n        data: this.state.userInfo,\n        dimmer: false,\n        open: this.state.openProfile,\n        close: this.closeProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return headerGlobalMini;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    userInfo: state.userInfo ? state.userInfo : null\n  };\n}\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleChangeSite: function handleChangeSite(data) {\n      dispatch(actions.changeSite(data));\n    },\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectData(data));\n    },\n    handleChangeLoginMode: function handleChangeLoginMode(data) {\n      dispatch(actions.changeLoginMode(data));\n    },\n    handleAlertInfo: function handleAlertInfo(mode, msg) {\n      dispatch(actions.alertInfo(mode, msg));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(headerGlobalMini)); ///////","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/headerGlobalMini.js"],"names":["React","Fragment","Button","Grid","Image","Popup","MaterialIcon","colorPalette","withRouter","Alert","connect","actions","Service","PopSettingViewer","PopProfileViewer","_self","headerGlobalMini","props","onHandleClick","e","data","handleChangeSite","children","to","closeProfile","mode","handleClickLogin","setState","openProfile","menuAdmin","profileView","gotoPreview","location","pathname","email","state","bind","store","localStorage","PROJECT_INIT","JSON","parse","userInfo","info","value","removeItem","error","mainPath","subPath","history","push","search","some","token","userToken","getCurrentUserInfo","receiveCurrentUser","nextProps","nextContext","user","result","message","tokenState","handleAlertInfo","setTimeout","imageProps","avatar","spaced","src","cursor","Component","mapStateToProps","mapDispatchProps","dispatch","changeSite","handleInjectData","injectData","handleChangeLoginMode","changeLoginMode","msg","alertInfo"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {Button, Grid, Image, Popup} from 'semantic-ui-react';\n\nimport MaterialIcon, {colorPalette} from 'material-icons-react';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'react-s-alert';\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport * as Service from '../services/service_login_api';\nimport './styles.css';\nimport PopSettingViewer from '../container/popSettingViewer';\n// import PopProfileViewer from \"./popProfileViewer\";\nimport PopProfileViewer from '../container/popProfileViewer';\n\n\nlet _self = null;\nclass headerGlobalMini extends React.Component {\n    constructor(props) {\n        super(props);\n        _self = this;\n        this.onHandleClick = this.onHandleClick.bind(this);\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null\n        this.state = {\n            email: store ? store.email : 'Administrator',\n            openProfile:false,\n            // openSettings:false,\n            userInfo:{info:[]}\n        }\n    }\n\n    onHandleClick = function(e, data) {\n        this.props.handleChangeSite(data.children.props.to)\n    }\n    gotoPreview(value) {\n        if(value == '/logout') {\n            try{\n                localStorage.removeItem('selectOrg');\n                localStorage.removeItem('selectRole')\n                localStorage.removeItem('selectMenu')\n            } catch (error) {\n\n            }\n\n        }\n        //브라우져 입력창에 주소 기록\n        let mainPath = value;\n        let subPath = 'pg=0';\n        this.props.history.push({\n            pathname: mainPath,\n            search: subPath,\n            state: { some: 'state' },\n            userInfo:{info:null}\n        });\n        this.props.history.location.search = subPath;\n        this.props.handleChangeSite({mainPath:mainPath, subPath: subPath})\n\n    }\n    loginState() {\n        //this.gotoPreview('/logout')\n\n    }\n    componentDidMount() {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT) : null;\n        let token = store ? store.userToken : 'null';\n        Service.getCurrentUserInfo('currentUser', {token:token}, this.receiveCurrentUser, this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        if(nextProps.user) {\n            this.setState({email:nextProps.user.email})\n        }\n        if(nextProps.userInfo) {\n            this.setState({userInfo:nextProps.userInfo})\n        }\n    }\n\n    receiveCurrentUser(result) {\n        if(result.data && result.data.message) {\n            _self.setState({tokenState:'expired'})\n            this.props.handleAlertInfo('error',result.data.message)\n            setTimeout(() => _self.gotoPreview('/logout'),2000);\n        } else {\n            _self.setState({tokenState:'live'})\n            _self.setState({userInfo: result.data})\n        }\n    }\n\n\n    profileView() {\n        let store = localStorage.PROJECT_INIT ? JSON.parse(localStorage.PROJECT_INIT):null;\n        let token = store ? store.userToken : 'null';\n        Service.getCurrentUserInfo('currentUser', {token:token}, this.receiveCurrentUser, this);\n\n        this.setState({openProfile:true})\n    }\n    // settingsView() {\n    //     this.setState({openProfile:false, openSettings:true})\n    // }\n    closeProfile = (mode) => {\n        if(mode === 'verify') {\n            _self.props.handleClickLogin(mode)\n        } else {\n\n        }\n        this.setState({ openProfile:false})\n    }\n    // closeSettings = () => {\n    //     this.setState({openSettings:false})\n    // }\n    // createUser() {\n    //     this.setState({})\n    // }\n    resetPassword() {\n        this.props.handleClickLogin('forgot')\n    }\n\n    menuAdmin = () => (\n        <Button.Group vertical>\n            <Button onClick={() => this.profileView()} >Your profile</Button>\n            {/*<Button style={{color:'#333333'}} onClick={() => this.settingsView(true)} >Settings</Button>*/}\n            <Button style={{}} onClick={() => this.gotoPreview('/logout')}><div>{(this.props.location.pathname === \"/site4\")? this.props.email :this.state.email}</div><div>Logout</div></Button>\n        </Button.Group>\n\n    )\n\n    render() {\n        const imageProps = {\n            avatar: true,\n            spaced: 'right',\n            src: '/assets/avatar/avatar_default.svg',\n        }\n\n        return (\n            <Fragment>\n                <Popup\n                    trigger={\n                        <div style={{cursor:'pointer'}}>\n                            <Image src='/assets/avatar/avatar_default.svg' avatar />\n                            <span>\n                                {(this.props.location.pathname === \"/site4\")? this.props.email :this.state.email}\n                            </span>\n                        </div>}\n                    content={\n                        this.menuAdmin()\n                    }\n                    on='click'\n                    position='bottom center'\n                    className='gnb_logout'\n                />\n                {/*<PopSettingViewer data={{\"Set URL\":\"\"}} dimmer={false} open={this.state.openSettings} close={this.closeSettings} onSubmit={()=>console.log('submit user set')} usrUrl={this.props.userURL}></PopSettingViewer>*/}\n                <PopProfileViewer data={this.state.userInfo} dimmer={false} open={this.state.openProfile} close={this.closeProfile} ></PopProfileViewer>\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps ( state ) {\n    return {\n        user:state.user,\n        userInfo : state.userInfo?state.userInfo:null,\n    }\n}\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleChangeSite: (data) => { dispatch(actions.changeSite(data))},\n        handleInjectData: (data) => { dispatch(actions.injectData(data))},\n        handleChangeLoginMode: (data) => { dispatch(actions.changeLoginMode(data))},\n        handleAlertInfo: (mode,msg) => { dispatch(actions.alertInfo(mode,msg))}\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(headerGlobalMini));\n\n///////\n"]},"metadata":{},"sourceType":"module"}