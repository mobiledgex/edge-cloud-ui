{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/sites/page_one.js\";\n//TODO:\n//tab 클릭 이벤트 받기 redux 구조\n//tab 클릭 이벤트 발생하면 페이지 넘기, 페이지 넘김 애니메이션 적용\nimport React from 'react';\nimport { withRouter } from 'react-router-dom'; //\n\nimport Datamap from '../libs/datamaps'; //redux\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'; //speech\n\nvar ContainerOne = function ContainerOne(props) {\n  return React.createElement(Datamap, {\n    geographyConfig: {\n      popupOnHover: false,\n      highlightOnHover: false\n    },\n    fills: {\n      defaultFill: '#abdda4',\n      USA: 'blue',\n      RUS: 'red'\n    },\n    bubbles: [{\n      name: 'Not a bomb, but centered on Brazil',\n      radius: 23,\n      centered: 'BRA',\n      country: 'USA',\n      yeild: 0,\n      fillKey: 'USA',\n      date: '1954-03-01'\n    }, {\n      name: 'Castle Bravo',\n      radius: 25,\n      yeild: 15000,\n      country: 'USA',\n      significance: 'First dry fusion fuel \"staged\" thermonuclear weapon; a serious nuclear fallout accident occurred',\n      fillKey: 'USA',\n      date: '1954-03-01',\n      latitude: 11.415,\n      longitude: 165.1619\n    }, {\n      name: 'Tsar Bomba',\n      radius: 70,\n      yeild: 50000,\n      country: 'USSR',\n      fillKey: 'RUS',\n      significance: 'Largest thermonuclear weapon ever tested-scaled down from its initial 100Mt design by 50%',\n      date: '1961-10-31',\n      latitude: 73.482,\n      longitude: 54.5854\n    }],\n    bubbleOptions: {\n      popupTemplate: function popupTemplate(geo, data) {\n        return \"<div class=\\\"hoverinfo\\\">Yield: \".concat(data.yeild, \"\\nExploded on \").concat(data.date, \" by the \").concat(data.country);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nvar pageOne =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(pageOne, _React$Component);\n\n  function pageOne(props) {\n    var _this;\n\n    _classCallCheck(this, pageOne);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(pageOne).call(this, props));\n    _this.state = {\n      receivedData: null,\n      url: ''\n    };\n    return _this;\n  }\n\n  _createClass(pageOne, [{\n    key: \"clearData\",\n    value: function clearData() {\n      //TODO : 각 페이지에 데이터 전달하기 위해 redux 엑션 발생\n      this.props.handleInjectData(null);\n    }\n    /*********************\n     * Call Data from Server as REST\n     **********************/\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//test speech\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      /*\n       라우터 사용 예제\n       import React from \"react\";\n       import {withRouter} from \"react-router-dom\";\n        class MyComponent extends React.Component {\n       ...\n       myFunction() {\n       this.props.history.push(\"/some/Path\");\n       }\n       ...\n       }\n       export default withRouter(MyComponent);\n       */\n      // this.props.history.push({\n      //     pathname: nextProps.location.pathname,\n      //     search: 'pg='+nextProps['tabName'],\n      //     state: { some: 'state' }\n      // });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ContainerOne, Object.assign({\n        ref: function ref(_ref) {\n          return _this2.container = _ref;\n        }\n      }, this.props, {\n        data: this.state.receivedData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return pageOne;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var site = state.siteChanger.site;\n  var tab = state.tabChanger.tab;\n  return {\n    tabName: tab\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    handleInjectData: function handleInjectData(data) {\n      dispatch(actions.injectData(data));\n    }\n  };\n};\n\npageOne.defaultProps = {\n  tabName: 0,\n  onReceive: {\n    data: null\n  }\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(pageOne));","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui_current-working/src/sites/page_one.js"],"names":["React","withRouter","Datamap","connect","actions","ContainerOne","props","popupOnHover","highlightOnHover","defaultFill","USA","RUS","name","radius","centered","country","yeild","fillKey","date","significance","latitude","longitude","popupTemplate","geo","data","pageOne","state","receivedData","url","handleInjectData","nextProps","nextState","ref","container","Component","mapStateToProps","site","siteChanger","tab","tabChanger","tabName","mapDispatchProps","dispatch","injectData","defaultProps","onReceive"],"mappings":"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","sourcesContent":["\n//TODO:\n//tab 클릭 이벤트 받기 redux 구조\n//tab 클릭 이벤트 발생하면 페이지 넘기, 페이지 넘김 애니메이션 적용\n\nimport React from 'react';\n\n\nimport { withRouter } from 'react-router-dom';\n//\nimport Datamap from '../libs/datamaps';\n\n//redux\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\n//speech\n\n\n\nconst ContainerOne = (props) => (\n\n    <Datamap\n        geographyConfig={{\n            popupOnHover: false,\n            highlightOnHover: false\n        }}\n        fills={{\n            defaultFill: '#abdda4',\n            USA: 'blue',\n            RUS: 'red'\n        }}\n        bubbles={[\n            {\n                name: 'Not a bomb, but centered on Brazil',\n                radius: 23,\n                centered: 'BRA',\n                country: 'USA',\n                yeild: 0,\n                fillKey: 'USA',\n                date: '1954-03-01'\n            },\n            {\n                name: 'Castle Bravo',\n                radius: 25,\n                yeild: 15000,\n                country: 'USA',\n                significance: 'First dry fusion fuel \"staged\" thermonuclear weapon; a serious nuclear fallout accident occurred',\n                fillKey: 'USA',\n                date: '1954-03-01',\n                latitude: 11.415,\n                longitude: 165.1619\n            },\n            {\n                name: 'Tsar Bomba',\n                radius: 70,\n                yeild: 50000,\n                country: 'USSR',\n                fillKey: 'RUS',\n                significance: 'Largest thermonuclear weapon ever tested-scaled down from its initial 100Mt design by 50%',\n                date: '1961-10-31',\n                latitude: 73.482,\n                longitude: 54.5854\n            }\n        ]}\n        bubbleOptions={{\n            popupTemplate: (geo, data) =>\n                `<div class=\"hoverinfo\">Yield: ${data.yeild}\\nExploded on ${data.date} by the ${data.country}`\n        }}\n    />\n\n);\n\nclass pageOne extends React.Component  {\n    constructor(props){\n        super(props)\n        this.state = {\n            receivedData:null,\n            url:''\n        }\n    }\n    clearData() {\n\n\n        //TODO : 각 페이지에 데이터 전달하기 위해 redux 엑션 발생\n        this.props.handleInjectData(null);\n\n    }\n    /*********************\n     * Call Data from Server as REST\n     **********************/\n    componentDidMount() {\n        //test speech\n\n\n    }\n    componentWillReceiveProps(nextProps) {\n        /*\n         라우터 사용 예제\n         import React from \"react\";\n         import {withRouter} from \"react-router-dom\";\n\n         class MyComponent extends React.Component {\n         ...\n         myFunction() {\n         this.props.history.push(\"/some/Path\");\n         }\n         ...\n         }\n         export default withRouter(MyComponent);\n         */\n\n\n\n        // this.props.history.push({\n        //     pathname: nextProps.location.pathname,\n        //     search: 'pg='+nextProps['tabName'],\n        //     state: { some: 'state' }\n        // });\n\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n    render() {\n        return (\n            <ContainerOne ref={ref => this.container = ref} {...this.props} data={this.state.receivedData}></ContainerOne>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    let site = state.siteChanger.site;\n    let tab = state.tabChanger.tab;\n    return {\n        tabName: tab\n    };\n};\nconst mapDispatchProps = (dispatch) => {\n    return {\n        handleInjectData: (data) => { dispatch(actions.injectData(data))}\n    };\n};\npageOne.defaultProps = {\n    tabName : 0,\n    onReceive: {data:null}\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchProps)(pageOne));\n"]},"metadata":{},"sourceType":"module"}