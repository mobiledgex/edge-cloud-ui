{"ast":null,"code":"import _classCallCheck from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyungjoon/react_pjt/edge-cloud-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/siteFourOrgaStepThree.js\";\nimport React, { Fragment } from \"react\";\nimport { Button, Form, Header, Message, List, Grid, Card } from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nvar type = 'Developer';\nvar role = 'Manage';\nvar roles = {\n  Developer: [{\n    Flavor: 'View',\n    ClusterFlavor: 'View',\n    Users: 'Manage',\n    Cloudlets: 'View',\n    ClusterInst: 'Manage',\n    Apps: 'Manage',\n    AppInst: 'Manage'\n  }, {\n    Flavor: 'View',\n    ClusterFlavor: 'View',\n    Users: 'View',\n    Cloudlets: 'View',\n    ClusterInst: 'Manage',\n    Apps: 'Manage',\n    AppInst: 'Manage'\n  }, {\n    Flavor: 'View',\n    ClusterFlavor: 'View',\n    Users: 'View',\n    Cloudlets: 'View',\n    ClusterInst: 'View',\n    Apps: 'View',\n    AppInst: 'View'\n  }],\n  Operator: [{\n    Flavor: 'disabled',\n    ClusterFlavor: 'disabled',\n    Users: 'Manage',\n    Cloudlets: 'Manage',\n    ClusterInst: 'disabled',\n    Apps: 'disabled',\n    AppInst: 'disabled'\n  }, {\n    Flavor: 'disabled',\n    ClusterFlavor: 'disabled',\n    Users: 'View',\n    Cloudlets: 'View',\n    ClusterInst: 'Manage',\n    Apps: 'disabled',\n    AppInst: 'disabled'\n  }, {\n    Flavor: 'disabled',\n    ClusterFlavor: 'disabled',\n    Users: 'View',\n    Cloudlets: 'View',\n    ClusterInst: 'disabled',\n    Apps: 'disabled',\n    AppInst: 'disabled'\n  }]\n};\n\nvar makeRoleList = function makeRoleList(selectedType, i) {\n  return React.createElement(List, {\n    divided: true,\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, Object.keys(roles[selectedType][i]).map(function (key) {\n    return React.createElement(List.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: roles[selectedType][i][key] === 'Manage' ? 'rgba(136,221,0,.9)' : 'rgba(255,255,255,.6)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, key + \" : \" + roles[selectedType][i][key]));\n  }))));\n};\n\nvar items = [{\n  header: 'Manager',\n  description: \"Leverage agile frameworks to provide a robust synopsis \\n\\r for high level overviews.\",\n  meta: 'ROI: 30%'\n}, {\n  header: 'Contributor',\n  description: 'Bring to the table win-win survival strategies to ensure proactive domination.',\n  meta: 'ROI: 34%'\n}, {\n  header: 'Viewer',\n  description: 'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n  meta: 'ROI: 27%'\n}];\n\nvar renderCheckbox = function renderCheckbox(field) {\n  return React.createElement(Form.Checkbox, {\n    checked: !!field.input.value,\n    name: field.input.name,\n    label: field.label,\n    onChange: function onChange(e, _ref) {\n      var checked = _ref.checked;\n      return field.input.onChange(checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  });\n};\n\nvar renderRadio = function renderRadio(field) {\n  return React.createElement(Form.Radio, {\n    checked: field.input.value === field.radioValue,\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref2) {\n      var checked = _ref2.checked;\n      return field.input.onChange(field.radioValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n};\n\nvar renderSelect = function renderSelect(field) {\n  return React.createElement(Form.Select, {\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref3) {\n      var value = _ref3.value;\n      return field.input.onChange(value);\n    },\n    options: field.options,\n    placeholder: field.placeholder,\n    value: field.input.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form.TextArea, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nvar renderInput = function renderInput(field) {\n  return React.createElement(Form.Input, Object.assign({}, field.input, {\n    type: field.type,\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n}; // const typeOperator = (selected) => (\n//\n//     <Button.Group>\n//         <Button positive={(selected === 'Developer')}>Developer</Button>\n//         <Button.Or />\n//         <Button positive={(selected === 'Operator')}>Operator</Button>\n//     </Button.Group>\n// )\n// const makeCardContent = (item, i) => (\n//     <Grid.Column>\n//         <Card>\n//             <Card.Content>\n//                 <Card.Header>{item['header']}</Card.Header>\n//                 <Card.Meta>{type}</Card.Meta>\n//                 <Card.Description>\n//                     {makeRoleList(type, i)}\n//                 </Card.Description>\n//                 <div style={{position:'absolute', top:'1em', right:'1em', width:'auto', display:'flex', alignItem:'right', justifyContent:'right' }}>\n//                     <MaterialIcon icon={(item['header'] === role)?'check_circle':'check_circle_outline'} size={40} color={(item['header'] === role)?'rgba(136,221,0,.9)':'rgba(255,255,255,.6)'}/>\n//                 </div>\n//             </Card.Content>\n//         </Card>\n//     </Grid.Column>\n// )\n\n\nvar SiteFourOrgaThree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteFourOrgaThree, _React$Component);\n\n  function SiteFourOrgaThree(props) {\n    var _this;\n\n    _classCallCheck(this, SiteFourOrgaThree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteFourOrgaThree).call(this, props));\n\n    _this.changeOrg = function () {\n      _this.props.changeOrg();\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SiteFourOrgaThree, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          reset = _this$props.reset,\n          org = _this$props.org,\n          type = _this$props.type;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Header, {\n        className: \"newOrg3-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Organization \\\"\" + org + \"\\\" has been created.\"), React.createElement(Form.Group, {\n        widths: \"equal\",\n        style: {\n          flexDirection: 'column',\n          alignContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, type === 'Developer' ? React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"newOrg3-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"If your image is docker, please upload your image with your MobiledgeX Account Credentials to our docker registry using the following docker command.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"$ docker login -u <username> docker.mobiledgex.net\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"$ docker tag <your application> docker.mobiledgex.net/\" + String(org).toLowerCase() + \"/images/<application name>:<version>\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"$ docker push docker.mobiledgex.net/\" + String(org).toLowerCase() + \"/images/<application name>:<version>\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"$ docker logout docker.mobiledgex.net\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"newOrg3-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"If you image is VM, please upload to our VM registry with your MobiledgeX Account Credentials.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"curl -u<username> -T <path_to_file> \\\"https://artifactory.mobiledgex.net/artifactory/repo-\" + org + \"/<target_file_path>\\\"\"))) : React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))), React.createElement(Form.Group, {\n        className: \"orgButton\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"newOrg3-4\",\n        onClick: this.changeOrg,\n        type: \"submit\",\n        positive: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Check your Organization\")))), React.createElement(Grid.Column, {\n        width: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SiteFourOrgaThree;\n}(React.Component);\n\n;\nexport default reduxForm({\n  form: \"orgaStepThree\"\n})(SiteFourOrgaThree);","map":{"version":3,"sources":["/Users/kyungjoon/react_pjt/edge-cloud-ui/src/container/siteFourOrgaStepThree.js"],"names":["React","Fragment","Button","Form","Header","Message","List","Grid","Card","Field","reduxForm","MaterialIcon","validate","values","errors","username","length","email","test","age","isNaN","Number","type","role","roles","Developer","Flavor","ClusterFlavor","Users","Cloudlets","ClusterInst","Apps","AppInst","Operator","makeRoleList","selectedType","i","Object","keys","map","key","color","items","header","description","meta","renderCheckbox","field","input","value","name","label","e","checked","onChange","renderRadio","radioValue","renderSelect","options","placeholder","renderTextArea","renderInput","SiteFourOrgaThree","props","changeOrg","state","handleSubmit","reset","org","flexDirection","alignContent","String","toLowerCase","width","Component","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,IAAnD,QAA8D,mBAA9D;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAO,cAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACvB,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AAClBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACH,GAFD,MAEO,IAAIF,MAAM,CAACE,QAAP,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AACpCF,IAAAA,MAAM,CAACC,QAAP,GAAkB,+BAAlB;AACH;;AACD,MAAI,CAACF,MAAM,CAACI,KAAZ,EAAmB;AACfH,IAAAA,MAAM,CAACG,KAAP,GAAe,UAAf;AACH,GAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDL,MAAM,CAACI,KAAxD,CAAL,EAAqE;AACxEH,IAAAA,MAAM,CAACG,KAAP,GAAe,uBAAf;AACH;;AACD,MAAI,CAACJ,MAAM,CAACM,GAAZ,EAAiB;AACbL,IAAAA,MAAM,CAACK,GAAP,GAAa,UAAb;AACH,GAFD,MAEO,IAAIC,KAAK,CAACC,MAAM,CAACR,MAAM,CAACM,GAAR,CAAP,CAAT,EAA+B;AAClCL,IAAAA,MAAM,CAACK,GAAP,GAAa,kBAAb;AACH,GAFM,MAEA,IAAIE,MAAM,CAACR,MAAM,CAACM,GAAR,CAAN,GAAqB,EAAzB,EAA6B;AAChCL,IAAAA,MAAM,CAACK,GAAP,GAAa,0CAAb;AACH;;AACD,SAAOL,MAAP;AACH,CApBD;;AAqBA,IAAIQ,IAAI,GAAG,WAAX;AACA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAMC,KAAK,GACP;AACIC,EAAAA,SAAS,EAAE,CACP;AAAEC,IAAAA,MAAM,EAAC,MAAT;AAAiBC,IAAAA,aAAa,EAAC,MAA/B;AAAuCC,IAAAA,KAAK,EAAC,QAA7C;AAAuDC,IAAAA,SAAS,EAAC,MAAjE;AAAyEC,IAAAA,WAAW,EAAC,QAArF;AAA+FC,IAAAA,IAAI,EAAC,QAApG;AAA8GC,IAAAA,OAAO,EAAC;AAAtH,GADO,EAEP;AAAEN,IAAAA,MAAM,EAAC,MAAT;AAAiBC,IAAAA,aAAa,EAAC,MAA/B;AAAuCC,IAAAA,KAAK,EAAC,MAA7C;AAAqDC,IAAAA,SAAS,EAAC,MAA/D;AAAuEC,IAAAA,WAAW,EAAC,QAAnF;AAA6FC,IAAAA,IAAI,EAAC,QAAlG;AAA4GC,IAAAA,OAAO,EAAC;AAApH,GAFO,EAGP;AAAEN,IAAAA,MAAM,EAAC,MAAT;AAAiBC,IAAAA,aAAa,EAAC,MAA/B;AAAuCC,IAAAA,KAAK,EAAC,MAA7C;AAAqDC,IAAAA,SAAS,EAAC,MAA/D;AAAuEC,IAAAA,WAAW,EAAC,MAAnF;AAA2FC,IAAAA,IAAI,EAAC,MAAhG;AAAwGC,IAAAA,OAAO,EAAC;AAAhH,GAHO,CADf;AAMIC,EAAAA,QAAQ,EAAE,CACN;AAAEP,IAAAA,MAAM,EAAC,UAAT;AAAqBC,IAAAA,aAAa,EAAC,UAAnC;AAA+CC,IAAAA,KAAK,EAAC,QAArD;AAA+DC,IAAAA,SAAS,EAAC,QAAzE;AAAmFC,IAAAA,WAAW,EAAC,UAA/F;AAA2GC,IAAAA,IAAI,EAAC,UAAhH;AAA4HC,IAAAA,OAAO,EAAC;AAApI,GADM,EAEN;AAAEN,IAAAA,MAAM,EAAC,UAAT;AAAqBC,IAAAA,aAAa,EAAC,UAAnC;AAA+CC,IAAAA,KAAK,EAAC,MAArD;AAA6DC,IAAAA,SAAS,EAAC,MAAvE;AAA+EC,IAAAA,WAAW,EAAC,QAA3F;AAAqGC,IAAAA,IAAI,EAAC,UAA1G;AAAsHC,IAAAA,OAAO,EAAC;AAA9H,GAFM,EAGN;AAAEN,IAAAA,MAAM,EAAC,UAAT;AAAqBC,IAAAA,aAAa,EAAC,UAAnC;AAA+CC,IAAAA,KAAK,EAAC,MAArD;AAA6DC,IAAAA,SAAS,EAAC,MAAvE;AAA+EC,IAAAA,WAAW,EAAC,UAA3F;AAAuGC,IAAAA,IAAI,EAAC,UAA5G;AAAwHC,IAAAA,OAAO,EAAC;AAAhI,GAHM;AANd,CADJ;;AAgBA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD,EAAeC,CAAf;AAAA,SACjB,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,aAAa,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,MAAM,CAACC,IAAP,CAAYd,KAAK,CAACW,YAAD,CAAL,CAAoBC,CAApB,CAAZ,EAAoCG,GAApC,CAAwC,UAACC,GAAD;AAAA,WACpC,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAGjB,KAAK,CAACW,YAAD,CAAL,CAAoBC,CAApB,EAAuBI,GAAvB,MAAgC,QAAjC,GAA2C,oBAA3C,GAAgE;AAAxE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgHA,GAAG,GAAE,KAAL,GAAahB,KAAK,CAACW,YAAD,CAAL,CAAoBC,CAApB,EAAuBI,GAAvB,CAA7H,CAAb,CADoC;AAAA,GAAxC,CAFR,CADJ,CADJ,CADiB;AAAA,CAArB;;AAeA,IAAME,KAAK,GAAG,CACV;AACIC,EAAAA,MAAM,EAAE,SADZ;AAEIC,EAAAA,WAAW,yFAFf;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADU,EAMV;AACIF,EAAAA,MAAM,EAAE,aADZ;AAEIC,EAAAA,WAAW,EAAE,gFAFjB;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANU,EAWV;AACIF,EAAAA,MAAM,EAAE,QADZ;AAEIC,EAAAA,WAAW,EACP,2FAHR;AAIIC,EAAAA,IAAI,EAAE;AAJV,CAXU,CAAd;;AAmBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN;AACI,IAAA,OAAO,EAAE,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYC,KAD3B;AAEI,IAAA,IAAI,EAAEF,KAAK,CAACC,KAAN,CAAYE,IAFtB;AAGI,IAAA,KAAK,EAAEH,KAAK,CAACI,KAHjB;AAII,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,UAAMC,OAAN,QAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBD,OAArB,CAApB;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB;AAAA,CAA5B;;AASA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAR,KAAK;AAAA,SACrB,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,OAAO,EAAEA,KAAK,CAACC,KAAN,CAAYC,KAAZ,KAAsBF,KAAK,CAACS,UADzC;AAEI,IAAA,KAAK,EAAET,KAAK,CAACI,KAFjB;AAGI,IAAA,IAAI,EAAEJ,KAAK,CAACC,KAAN,CAAYE,IAHtB;AAII,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,UAAMC,OAAN,SAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBP,KAAK,CAACS,UAA3B,CAApB;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB;AAAA,CAAzB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAV,KAAK;AAAA,SACtB,oBAAC,IAAD,CAAM,MAAN;AACI,IAAA,KAAK,EAAEA,KAAK,CAACI,KADjB;AAEI,IAAA,IAAI,EAAEJ,KAAK,CAACC,KAAN,CAAYE,IAFtB;AAGI,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,UAAMH,KAAN,SAAMA,KAAN;AAAA,aAAkBF,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBL,KAArB,CAAlB;AAAA,KAHd;AAII,IAAA,OAAO,EAAEF,KAAK,CAACW,OAJnB;AAKI,IAAA,WAAW,EAAEX,KAAK,CAACY,WALvB;AAMI,IAAA,KAAK,EAAEZ,KAAK,CAACC,KAAN,CAAYC,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB;AAAA,CAA1B;;AAWA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAAb,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN,oBACQA,KAAK,CAACC,KADd;AAEI,IAAA,KAAK,EAAED,KAAK,CAACI,KAFjB;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACY,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAA5B;;AAOA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAd,KAAK;AAAA,SACrB,oBAAC,IAAD,CAAM,KAAN,oBACQA,KAAK,CAACC,KADd;AAEI,IAAA,IAAI,EAAED,KAAK,CAACzB,IAFhB;AAGI,IAAA,KAAK,EAAEyB,KAAK,CAACI,KAHjB;AAII,IAAA,WAAW,EAAEJ,KAAK,CAACY,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADqB;AAAA,CAAzB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMG,iB;;;;;AACF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,2FAAMA,KAAN;;AADe,UAOnBC,SAPmB,GAOP,YAAM;AACd,YAAKD,KAAL,CAAWC,SAAX;AACH,KATkB;;AAEf,UAAKC,KAAL,GAAa,EAAb;AAFe;AAMlB;;;;6BAKQ;AAAA,wBACsC,KAAKF,KAD3C;AAAA,UACGG,YADH,eACGA,YADH;AAAA,UACiBC,KADjB,eACiBA,KADjB;AAAA,UACwBC,GADxB,eACwBA,GADxB;AAAA,UAC6B9C,IAD7B,eAC6BA,IAD7B;AAEL,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,oBAAkB8C,GAAlB,yBAA/B,CADJ,EAGI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC,OAAnB;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAC,QAAf;AAAyBC,UAAAA,YAAY,EAAC;AAAtC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEShD,IAAI,KAAK,WAAV,GACA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,2DAA2DiD,MAAM,CAACH,GAAD,CAAN,CAAYI,WAAZ,EAA3D,yCADL,CARJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,yCAAyCD,MAAM,CAACH,GAAD,CAAN,CAAYI,WAAZ,EAAzC,yCADL,CAXJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAdJ,CADJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAoBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,+FAA8FJ,GAA9F,0BADL,CAJJ,CApBJ,CADA,GA+BA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCR,CADJ,CADJ,CAHJ,EA4CI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAkC,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAC;AAAP,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKT,SAA5C;AAAuD,QAAA,IAAI,EAAC,QAA5D;AAAqE,QAAA,QAAQ,MAA7E;AAA8E,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAC;AAAP,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CA5CJ,CADJ,CADJ,EAmDI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnDJ,CADJ,CADJ;AA0DH;;;;EAxE2BzE,KAAK,CAAC0E,S;;AAyErC;AAED,eAAehE,SAAS,CAAC;AACrBiE,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZb,iBAFY,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport {Button, Form, Header, Message, List, Grid, Card} from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport MaterialIcon from \"../sites/siteFour_page_createOrga\";\nimport './styles.css';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.username) {\n        errors.username = 'Required'\n    } else if (values.username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n    if (!values.age) {\n        errors.age = 'Required'\n    } else if (isNaN(Number(values.age))) {\n        errors.age = 'Must be a number'\n    } else if (Number(values.age) < 18) {\n        errors.age = 'Sorry, you must be at least 18 years old'\n    }\n    return errors\n}\nlet type = 'Developer';\nlet role = 'Manage'\nconst roles =\n    {\n        Developer: [\n            { Flavor:'View', ClusterFlavor:'View', Users:'Manage', Cloudlets:'View', ClusterInst:'Manage', Apps:'Manage', AppInst:'Manage'},\n            { Flavor:'View', ClusterFlavor:'View', Users:'View', Cloudlets:'View', ClusterInst:'Manage', Apps:'Manage', AppInst:'Manage'},\n            { Flavor:'View', ClusterFlavor:'View', Users:'View', Cloudlets:'View', ClusterInst:'View', Apps:'View', AppInst:'View'}\n        ],\n        Operator: [\n            { Flavor:'disabled', ClusterFlavor:'disabled', Users:'Manage', Cloudlets:'Manage', ClusterInst:'disabled', Apps:'disabled', AppInst:'disabled'},\n            { Flavor:'disabled', ClusterFlavor:'disabled', Users:'View', Cloudlets:'View', ClusterInst:'Manage', Apps:'disabled', AppInst:'disabled'},\n            { Flavor:'disabled', ClusterFlavor:'disabled', Users:'View', Cloudlets:'View', ClusterInst:'disabled', Apps:'disabled', AppInst:'disabled'},\n        ]\n    }\n\n\n\nconst makeRoleList = (selectedType, i) => (\n    <List divided verticalAlign='middle'>\n        <List.Item>\n            <List.Content>\n                {\n                    Object.keys(roles[selectedType][i]).map((key) => (\n                        <List.Header><div style={{color:((roles[selectedType][i][key] === 'Manage')?'rgba(136,221,0,.9)':'rgba(255,255,255,.6)')}}>{ key +\" : \"+ (roles[selectedType][i][key]) }</div></List.Header>\n                    ))\n                }\n\n            </List.Content>\n        </List.Item>\n    </List>\n)\n\nconst items = [\n    {\n        header: 'Manager',\n        description: `Leverage agile frameworks to provide a robust synopsis \\n\\r for high level overviews.`,\n        meta: 'ROI: 30%',\n    },\n    {\n        header: 'Contributor',\n        description: 'Bring to the table win-win survival strategies to ensure proactive domination.',\n        meta: 'ROI: 34%',\n    },\n    {\n        header: 'Viewer',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n]\n\nconst renderCheckbox = field => (\n    <Form.Checkbox\n        checked={!!field.input.value}\n        name={field.input.name}\n        label={field.label}\n        onChange={(e, { checked }) => field.input.onChange(checked)}\n    />\n);\n\nconst renderRadio = field => (\n    <Form.Radio\n        checked={field.input.value === field.radioValue}\n        label={field.label}\n        name={field.input.name}\n        onChange={(e, { checked }) => field.input.onChange(field.radioValue)}\n    />\n);\n\nconst renderSelect = field => (\n    <Form.Select\n        label={field.label}\n        name={field.input.name}\n        onChange={(e, { value }) => field.input.onChange(value)}\n        options={field.options}\n        placeholder={field.placeholder}\n        value={field.input.value}\n    />\n);\n\nconst renderTextArea = field => (\n    <Form.TextArea\n        {...field.input}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\nconst renderInput = field => (\n    <Form.Input\n        {...field.input}\n        type={field.type}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\n// const typeOperator = (selected) => (\n//\n//     <Button.Group>\n//         <Button positive={(selected === 'Developer')}>Developer</Button>\n//         <Button.Or />\n//         <Button positive={(selected === 'Operator')}>Operator</Button>\n//     </Button.Group>\n// )\n\n\n// const makeCardContent = (item, i) => (\n//     <Grid.Column>\n//         <Card>\n//             <Card.Content>\n//                 <Card.Header>{item['header']}</Card.Header>\n//                 <Card.Meta>{type}</Card.Meta>\n//                 <Card.Description>\n//                     {makeRoleList(type, i)}\n//                 </Card.Description>\n//                 <div style={{position:'absolute', top:'1em', right:'1em', width:'auto', display:'flex', alignItem:'right', justifyContent:'right' }}>\n//                     <MaterialIcon icon={(item['header'] === role)?'check_circle':'check_circle_outline'} size={40} color={(item['header'] === role)?'rgba(136,221,0,.9)':'rgba(255,255,255,.6)'}/>\n//                 </div>\n//             </Card.Content>\n//         </Card>\n//     </Grid.Column>\n// )\nclass SiteFourOrgaThree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        };\n       \n    }\n    changeOrg = () => {\n        this.props.changeOrg()\n    }\n\n    render (){\n        const { handleSubmit, reset, org, type } = this.props;\n        return (\n            <Fragment>\n                <Grid>\n                    <Grid.Column width={11}>\n                        <Form>\n                            <Header className=\"newOrg3-1\">{`Organization \"`+ org + `\" has been created.`}</Header>\n\n                            <Form.Group widths=\"equal\" style={{flexDirection:'column', alignContent:'space-around'}}>\n                                <Grid>\n                                    <Grid.Row>\n                                        {\n                                            (type === 'Developer')?\n                                            <Grid.Column>\n                                                <div className=\"newOrg3-2\">\n                                                    <div>\n                                                        If your image is docker, please upload your image with your MobiledgeX Account Credentials to our docker registry using the following docker command.\n                                                    </div>\n                                                    <br></br>\n                                                    <div>\n                                                        {`$ docker login -u <username> docker.mobiledgex.net`}\n                                                    </div>\n                                                    <div>\n                                                        {`$ docker tag <your application> docker.mobiledgex.net/` + String(org).toLowerCase() + `/images/<application name>:<version>`}\n                                                    </div>\n                                                    <div>\n                                                        {`$ docker push docker.mobiledgex.net/` + String(org).toLowerCase() + `/images/<application name>:<version>`}\n                                                    </div>\n                                                    <div>\n                                                        $ docker logout docker.mobiledgex.net\n                                                    </div>\n                                                </div>\n                                                <br></br>\n                                                <div className=\"newOrg3-3\">\n                                                    <div>\n                                                        If you image is VM, please upload to our VM registry with your MobiledgeX Account Credentials.\n                                                    </div>\n                                                    <div>\n                                                        {`curl -u<username> -T <path_to_file> \"https://artifactory.mobiledgex.net/artifactory/repo-` + org + `/<target_file_path>\"`}\n                                                    </div>\n                                                </div>\n                                            </Grid.Column>\n                                            :\n                                            <Grid.Column></Grid.Column>\n                                        }\n                                        \n                                    </Grid.Row>\n                                </Grid>\n                            </Form.Group>\n                            <Form.Group className='orgButton' style={{width:'100%'}}>\n                                <Button className=\"newOrg3-4\" onClick={this.changeOrg} type='submit' positive style={{width:'100%'}}>Check your Organization</Button>\n                            </Form.Group>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                    </Grid.Column>\n                </Grid>\n            </Fragment>\n        )\n    } \n};\n\nexport default reduxForm({\n    form: \"orgaStepThree\"\n})(SiteFourOrgaThree);\n"]},"metadata":{},"sourceType":"module"}